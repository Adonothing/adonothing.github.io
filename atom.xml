<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Adunas🍀</title>
  
  
  <link href="https://www.adunas.top/atom.xml" rel="self"/>
  
  <link href="https://www.adunas.top/"/>
  <updated>2024-04-12T09:22:34.000Z</updated>
  <id>https://www.adunas.top/</id>
  
  <author>
    <name>阿杜那斯🍀</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>电子电路：STM32单片机</title>
    <link href="https://www.adunas.top/posts/20240412b.html"/>
    <id>https://www.adunas.top/posts/20240412b.html</id>
    <published>2024-04-12T09:22:34.000Z</published>
    <updated>2024-04-12T09:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<ahref="https://www.stmcu.com.cn/Product/pro_detail/PRODUCTSTM32/product">官网</a>。</li></ol></div><h1 id="电子电路导航"><ahref="./20240412a.html#STM32单片机">电子电路导航</a></h1><h2 id="简述">简述</h2><p>  介绍 MCU 系列。<ahref="https://www.stmcu.com.cn/upload/Selection_Guide.pdf">选型手册</a>翻到最后有型号名称说明。</p><table style="width:100%;"><colgroup><col style="width: 14%" /><col style="width: 14%" /><col style="width: 14%" /><col style="width: 14%" /><col style="width: 14%" /><col style="width: 14%" /><col style="width: 14%" /></colgroup><thead><tr class="header"><th>家族</th><th>产品类别</th><th>特定功能</th><th>引脚数</th><th>闪存容量(Kbytes)</th><th>封装</th><th>温度范围</th></tr></thead><tbody><tr class="odd"><td>示例↓</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr class="even"><td>STM32</td><td>F</td><td>103</td><td>Z</td><td>E</td><td>T</td><td>6</td></tr><tr class="odd"><td></td><td>基础型↓</td><td>基础型↓</td><td>48↓</td><td>512↓</td><td>QFP↓</td><td>-40-+85↓</td></tr><tr class="even"><td>32位MCU</td><td>F</td><td>103</td><td>C</td><td>E</td><td>T</td><td>6</td></tr><tr class="odd"><td></td><td></td><td>高性能，带DSP和FPU↓</td><td>64↓</td><td></td><td></td><td></td></tr><tr class="even"><td></td><td></td><td>407</td><td>R</td><td></td><td></td><td></td></tr><tr class="odd"><td></td><td></td><td></td><td>100↓</td><td></td><td></td><td></td></tr><tr class="even"><td></td><td></td><td></td><td>V</td><td></td><td></td><td></td></tr><tr class="odd"><td></td><td></td><td></td><td>144↓</td><td></td><td></td><td></td></tr><tr class="even"><td></td><td></td><td></td><td>Z</td><td></td><td></td><td></td></tr></tbody></table><h1 id="stm32fx系列对比">STM32Fx系列对比</h1><p>  淘宝上最常见的是 F103 和 F407 系列。F103 属于基础款，F407属于高性能版。特点是带 DSP 和 FPU，核心区别是 F407性能更强，例如时钟频率更高；相应的功耗更大，价格更高。</p><h2 id="引脚数对比">引脚数对比</h2><p>  仅引脚数不同，接口数量不同。引脚数越多，接口数越多，体积更大。</p><h2 id="闪存容量">闪存容量</h2><p>  选大的，但是更贵。闪存是断电也能保存的，一般用来存放代码，要有冗余设计，闪存大小大于代码量。</p><h2 id="封装">封装</h2><p>  选QFP的，方便手动焊接。</p><h2 id="常见型号">常见型号</h2><p>  要在淘宝上容易买到的，统计价格最低的。然后综合价格和性能，选择最好的。</p><table><colgroup><col style="width: 25%" /><col style="width: 25%" /><col style="width: 25%" /><col style="width: 25%" /></colgroup><thead><tr class="header"><th>型号</th><th>封装</th><th>价格</th><th>链接</th></tr></thead><tbody><tr class="odd"><td>STM32F103C8T6</td><td>LQFP144</td><td>13.8</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=679621192822&amp;ns=1&amp;skuId=5277793403624&amp;spm=a21n57.1.item.4.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F103C8T6</td><td>LQFP48</td><td>3.9</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=602908611297&amp;ns=1&amp;spm=a21n57.1.item.5.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F103C8T6</td><td>LQFP48</td><td>5.1</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=693137114620&amp;ns=1&amp;spm=a21n57.1.item.7.3fe3523cn00Bvn&amp;skuId=5090317034688">链接</a></td></tr><tr class="even"><td>STM32F107RBT6</td><td>LQFP48</td><td>8.3</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F107RCT6</td><td>LQFP48</td><td>8.5</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F107VBT6</td><td>LQFP48</td><td>8.2</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F107VCT6</td><td>LQFP48</td><td>8.5</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F107VCH6</td><td>LQFP48</td><td>30</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr></tbody></table><table><colgroup><col style="width: 25%" /><col style="width: 25%" /><col style="width: 25%" /><col style="width: 25%" /></colgroup><thead><tr class="header"><th>型号</th><th>封装</th><th>价格</th><th>链接</th></tr></thead><tbody><tr class="odd"><td>STM32F103ZET6</td><td>LQFP144</td><td>13.8</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=679621192822&amp;ns=1&amp;skuId=5277793403624&amp;spm=a21n57.1.item.4.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F103C8T6</td><td>LQFP48</td><td>3.9</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=602908611297&amp;ns=1&amp;spm=a21n57.1.item.5.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F103C8T6</td><td>LQFP48</td><td>5.1</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=693137114620&amp;ns=1&amp;spm=a21n57.1.item.7.3fe3523cn00Bvn&amp;skuId=5090317034688">链接</a></td></tr><tr class="even"><td>STM32F107RBT6</td><td>LQFP48</td><td>8.3</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F107RCT6</td><td>LQFP48</td><td>8.5</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F107VBT6</td><td>LQFP48</td><td>8.2</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="odd"><td>STM32F107VCT6</td><td>LQFP48</td><td>8.5</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr><tr class="even"><td>STM32F107VCH6</td><td>LQFP48</td><td>30</td><td><ahref="https://item.taobao.com/item.htm?abbucket=13&amp;id=704339690297&amp;ns=1&amp;skuId=5126881626317&amp;spm=a21n57.1.item.8.3fe3523cn00Bvn">链接</a></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">🍦本文记录STM32单片机的选型</summary>
    
    
    
    <category term="电子电路" scheme="https://www.adunas.top/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF/"/>
    
    
    <category term="微控制器" scheme="https://www.adunas.top/tags/%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    
    <category term="单片机" scheme="https://www.adunas.top/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>电子电路导航</title>
    <link href="https://www.adunas.top/posts/20240412a.html"/>
    <id>https://www.adunas.top/posts/20240412a.html</id>
    <published>2024-04-12T09:13:40.000Z</published>
    <updated>2024-04-12T09:13:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章导航总览"><ahref="./20240221a.html#电子电路">文章导航总览</a></h1><h1 id="意法半导体">意法半导体</h1><h2 id="stm32单片机"><ahref="./20240412b.html#电子电路">STM32单片机</a></h2>]]></content>
    
    
    <summary type="html">🥧本文是电子电路分类的导航</summary>
    
    
    
    <category term="文章导航" scheme="https://www.adunas.top/categories/%E6%96%87%E7%AB%A0%E5%AF%BC%E8%88%AA/"/>
    
    
    <category term="文章导航" scheme="https://www.adunas.top/tags/%E6%96%87%E7%AB%A0%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>日程表：2024年04月</title>
    <link href="https://www.adunas.top/posts/20240411a.html"/>
    <id>https://www.adunas.top/posts/20240411a.html</id>
    <published>2024-04-11T03:52:28.000Z</published>
    <updated>2024-04-11T03:52:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章导航总览"><ahref="./20240221a.html#2024年4月">文章导航总览</a></h1><h1 id="年4月11日">2024年4月11日</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>运动1小时</p>            </div><ul class="task-list"><li><label><input type="checkbox" />四旋翼发板、元器件购买</label></li></ul><div class='checkbox red'><input type="checkbox" />            <p>写一篇阅读论文的博客</p>            </div><details class="folding-tag" blue><summary> 日程表 </summary>              <div class='content'>              <div class="timeline blue"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>时间轴</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>11点54分-16点15分</p></div></div><div class="timeline-item-content"><ol type="1"><li>四旋翼资料查找</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>17点45分-19点03分</p></div></div><div class="timeline-item-content"><ol type="1"><li>四旋翼资料查找</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>20点48分-23点59分</p></div></div><div class="timeline-item-content"><ol type="1"><li>微信小程序</li></ol></div></div></div>              </div>            </details><h1 id="年4月12日">2024年4月12日</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>运动1小时</p>            </div><ul class="task-list"><li><label><input type="checkbox" />四旋翼发板、元器件购买</label></li></ul><div class='checkbox red'><input type="checkbox" />            <p>写一篇阅读论文的博客</p>            </div><details class="folding-tag" blue><summary> 日程表 </summary>              <div class='content'>              <div class="timeline blue"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>时间轴</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>00点00分-02点35分</p></div></div><div class="timeline-item-content"><ol type="1"><li>微信小程序</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09点13分-12点15分</p></div></div><div class="timeline-item-content"><ol type="1"><li>微信小程序</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>13点46分-18点53分</p></div></div><div class="timeline-item-content"><ol type="1"><li>四旋翼</li></ol></div></div></div>              </div>            </details>]]></content>
    
    
    <summary type="html">🥐本文记录 Adunas 2024年04月的日程安排和实施情况</summary>
    
    
    
    <category term="日程表" scheme="https://www.adunas.top/categories/%E6%97%A5%E7%A8%8B%E8%A1%A8/"/>
    
    
    <category term="日程表" scheme="https://www.adunas.top/tags/%E6%97%A5%E7%A8%8B%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Doxygen</title>
    <link href="https://www.adunas.top/posts/20240403a.html"/>
    <id>https://www.adunas.top/posts/20240403a.html</id>
    <published>2024-04-03T00:51:35.000Z</published>
    <updated>2024-04-06T07:53:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程导航"><a href="./20240221b.html#Doxygen">编程导航</a></h1><h1 id="学习目的">学习目的</h1><p>  doxygen是非常重要的代码阅读工具。按照一定的规范书写注释，能够快速帮助我们阅读代码。</p><h1 id="语法">语法</h1><p>  参考这个<ahref="https://www.bilibili.com/video/BV1ZE411F7kW/?p=4&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【AXin带你学Doxygen生成文档超简单！】</a>视频学习基本语法。</p><p>  实体，是指函数、变量等对象。是我们要注释的对象。</p><p>  注释的格式有很多种。统一采用 C++ 的注释格式，比较熟悉方便。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 注释内容</span></span><br></pre></td></tr></table></figure><p>为了方便阅读，不省略参数标志。</p><h1 id="常用参数">常用参数</h1><h2 id="brief">brief</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @brief 简要的描述</span></span><br></pre></td></tr></table></figure><h2 id="details">details</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @details 详细的描述</span></span><br></pre></td></tr></table></figure><h2 id="see">see</h2><p>  当函数名和其他函数名一致时，点击生成的 doxygen网页能够实现实现跳转。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @see [函数名]</span></span><br></pre></td></tr></table></figure><h2 id="param">param</h2><p>  当参数名和其他参数名一致时，生成的 doxygen 网页会高亮。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 函数注释</span></span><br><span class="line"><span class="comment">/// @param [参数名] 参数简述</span></span><br></pre></td></tr></table></figure><h2 id="return">return</h2><p>  当变量名和其他变量名一致时，点击生成的 doxygen网页能够实现实现跳转。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @return [变量名]</span></span><br></pre></td></tr></table></figure><h2 id="提示">提示</h2><p>  不同级别的提示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @note 记录</span></span><br><span class="line"><span class="comment">/// @attention  注意</span></span><br><span class="line"><span class="comment">/// @warning 警告</span></span><br></pre></td></tr></table></figure><h2 id="在实体之后注释">在实体之后注释</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///&lt; 变量1注释</span></span><br><span class="line"><span class="comment">///&lt; 变量2注释</span></span><br></pre></td></tr></table></figure><h1 id="源文件和头文件">源文件和头文件</h1><p>  头文件存放了一些声明函数，起到接口作用。不同的源文件可能都会调用头文件里的函数，因此头文件具有一定的“公共属性”。所以将简要的说明和必要的参数放在头文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @brief 函数注释</span></span><br><span class="line"><span class="comment">/// @param [参数名] </span></span><br><span class="line"><span class="comment">/// @return [变量名]</span></span><br></pre></td></tr></table></figure><p>  源文件中的函数是具体算法的实现，有时我们会更改算法，提示和说明就会产生变动。所以将详细的说明和提示放在源文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @details 详细的描述</span></span><br><span class="line"><span class="comment">/// @see [函数名]</span></span><br><span class="line"><span class="comment">/// @note 注释 </span></span><br><span class="line"><span class="comment">/// @attention 注意 </span></span><br><span class="line"><span class="comment">/// @warning 警告 </span></span><br><span class="line"><span class="comment">///&lt; 变量1注释</span></span><br></pre></td></tr></table></figure><h1 id="生成方法">生成方法</h1><p>  用图形化界面生成。</p><h2 id="工作目录">工作目录</h2><p>  存放项目配置文件。</p><h2 id="wizard向导">Wizard：向导</h2><p>  基础配置。包含源文件地址、是否递归（所有文件夹检索）、输出文件夹等。</p><h3 id="工程">工程</h3><p>  一定要选择递归，检索所有子文件。</p><h3 id="模式">模式</h3><ol type="1"><li>一定要选择所有实体，要不然网页可能不会显示文件。</li><li>选择对应的编程语言。</li></ol><h3 id="输出">输出</h3><p>  可以选择关闭 LaTex 文件输出。</p><h3 id="图表">图表</h3><p>  选择 GraphViz，打上所有勾，需要安装 GraphViz软件，就能自动绘制函数和文件调用关系图。</p><h2 id="expert专家">Expert：专家</h2><p>  高级配置。包含 Html 设置。是完包含 Wizard 中的设置，并大于Wizard。</p><h3 id="工程-1">工程</h3><p>  可以设置语言为中文。</p><h3 id="source-browser">Source Browser</h3><p>  源码设置。</p><ol type="1"><li>SOURCE_BROWSER：显示实体函数所在位置，这个要勾选。</li><li>INLINE_SOURCES；嵌入源码，不要勾选。太影响阅读了。</li></ol><h3 id="网页">网页</h3><p>  目录栏，横向换纵向：<code>DISABLE_INDEX</code> 和<code>GRNERATE_TREEVIEW</code> 打勾。</p><h3 id="dot语言">Dot语言</h3><p>  DOT语言是一种文本图形描述语言。我们用 GraphViz 软件。</p><p>DOT_PATH：dot.exe 文件的路径，在 GraphViz 软件安装的位置下的 bin里。如果 GraphViz 已经添加了全局变量，这个就不用设置。</p><h2 id="run运行">Run：运行</h2><p>  运行和跳转网页。</p>]]></content>
    
    
    <summary type="html">🥯本文为 Doxygen 的教程和学习笔记</summary>
    
    
    
    <category term="编程" scheme="https://www.adunas.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Doxygen" scheme="https://www.adunas.top/tags/Doxygen/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://www.adunas.top/posts/20240330a.html"/>
    <id>https://www.adunas.top/posts/20240330a.html</id>
    <published>2024-03-30T03:58:23.000Z</published>
    <updated>2024-03-30T03:58:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程导航"><a href="./20240221b.html#个人笔记">编程导航</a></h1><h1 id="字符编码">字符编码</h1><ol type="1"><li>汉字字符：<code>[\u4e00-\u9fa5]</code></li></ol><h1 id="前后字符">前后字符</h1><h2 id="必须为">必须为</h2><p>  没找到，但是可以直接匹配呀，然后再整体替换，例如<code>a123b 123</code> 替换为 <code>ab 123</code> 。</p><h2 id="不能为">不能为</h2><ol type="1"><li>前面：<code>(?&lt;![A-Za-z0-9])n</code>。字母 n前面不能为数字和字母。</li><li>后面：<code>n(?![A-Za-z0-9])</code>。字母 n后面不能为数字和字母。</li></ol><h1 id="匹配字符不能为">匹配字符不能为</h1><p>  匹配非汉字且非英文字母：<code>[^\u4e00-\u9fa5a-zA-Z]</code>。</p><h1 id="删除编号">删除编号</h1><p>  删除编号：<code>#\s[0-9](\s|\.([0-9](\s|\.[0-9]\s)))</code></p><pre>"#\s[0-9](\s|\.([0-9](\s|\.[0-9]\s)))" => <a href="#learn-regex"><strong># 1 </strong></a>基本匹配=> #<a href="#learn-regex"><strong># 2.1 </strong></a>点运算符 `.`=> ##<a href="#learn-regex"><strong># 2.2.1 </strong></a>否定字符集</pre><p>变式：<code>#\s[0-9].(\s|([0-9](\s|\.[0-9]\s)))</code>，不规范的编号格式示例。</p><pre>"#\s[0-9].(\s|([0-9](\s|\.[0-9]\s)))" => <a href="#learn-regex"><strong># 1. </strong></a>基本匹配=> #<a href="#learn-regex"><strong># 2.1 </strong></a>点运算符 `.`=> ##<a href="#learn-regex"><strong># 2.2.1 </strong></a>否定字符集</pre><h1 id="匹配变量">匹配变量</h1><p>  在程序中，我们经常要批量修改变量，如变量 <code>n</code>但是不想修改其他含有 n字符的变量等其他符号元素，方法为：<code>\sn(?![a-z])</code></p><pre>"\sn(?![a-z])" => int<a href="#learn-regex"><strong> n</strong></a> = sizeof(nums); printf("Hello!\n"); if (n == 10){a = 0;}</pre><pre>"\(n(?![a-z])" => int n = sizeof(nums); printf("Hello!\n"); if <a href="#learn-regex"><strong>(n</strong></a> == 10){a = 0;}</pre>]]></content>
    
    
    <summary type="html">🍤本文是正则表达式的个人笔记</summary>
    
    
    
    <category term="编程" scheme="https://www.adunas.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="正则表达式" scheme="https://www.adunas.top/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>C语言：进阶篇</title>
    <link href="https://www.adunas.top/posts/20240328a.html"/>
    <id>https://www.adunas.top/posts/20240328a.html</id>
    <published>2024-03-28T13:31:08.000Z</published>
    <updated>2024-04-01T03:06:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程导航"><a href="./20240221b.html#进阶篇">编程导航</a></h1><h1 id="格式化字符串">格式化字符串</h1><p>  将不同类型的变量放到一个字符串里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27;a&#x27;</span>;    </span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span>(str, <span class="string">&quot;%d, %lf, %c&quot;</span>, a, b, c);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h1 id="动态内存分配">动态内存分配</h1><p>  malloc函数是动态内存分配函数，使用数组和指针的时候可以用到。目的是，初始化数组时会占用一定的内存，而为了保证数组能兼容多种情况，初始化的长度往往很大，容易造成浪费，这时就可以利用动态内存分配函数，用多少给多少。但是分配的内存的数组用完了以后要及时清理，否则会堆积。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 引入标准库stdlib.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">// 或者引入库 malloc.h</span></span><br><span class="line"><span class="comment">// #include &lt;malloc.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分配动态内存</span></span><br><span class="line">    <span class="comment">//方法一</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = <span class="literal">NULL</span>,* q = <span class="literal">NULL</span>;</span><br><span class="line">    p = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(*p) * n);</span><br><span class="line">    <span class="comment">//方法二</span></span><br><span class="line">    <span class="comment">//int* p = malloc(sizeof(*p) * n);</span></span><br><span class="line">    <span class="comment">//signed int* q = NULL;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//地址备份</span></span><br><span class="line">        q = p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">signed</span> <span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *p = -i;</span><br><span class="line">            p = p + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印输出</span></span><br><span class="line">        p = q;</span><br><span class="line">        p = p + <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;指针指向的值为：%d\n&quot;</span>, *p);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//清理动态内存</span></span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;malloc error!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清理</span></span><br><span class="line">    p = <span class="literal">NULL</span>; q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><p>在清理动态内存的时候，就会把这一段内存里的所有数据初始化，指针地址不变。清理动态内存需要让指针指向最开始定义时的地址，所以对地址进行了备份。</p><p>增加了判断函数，判断是否成功分配内存空间，使程序更加严谨。</p>]]></content>
    
    
    <summary type="html">🍪本文为 C 语言进阶的教程和学习笔记</summary>
    
    
    
    <category term="编程" scheme="https://www.adunas.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C" scheme="https://www.adunas.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>计算机原理</title>
    <link href="https://www.adunas.top/posts/20240325a.html"/>
    <id>https://www.adunas.top/posts/20240325a.html</id>
    <published>2024-03-25T03:05:02.000Z</published>
    <updated>2024-03-25T03:05:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程导航"><ahref="./20240221b.html#计算机原理">编程导航</a></h1><h1 id="栈">栈</h1><p>  程序运行时会产生一些中间变量，尤其是调用函数时，往往会调用多个函数，在此期间就会产生临时存储的参数，而cpu的内存是远远不够的，这个时候需要调用一个速度快且容量大的存储空间，此时运行内存就非常合适。栈就是存放货物仓库的意思。根据函数参数存储的需求，要求存储的数据是先进先出，后进后出的。这就很好理解了。</p>]]></content>
    
    
    <summary type="html">🥯本文为 计算机原理 的教程和学习笔记</summary>
    
    
    
    <category term="编程" scheme="https://www.adunas.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="计算机原理" scheme="https://www.adunas.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>C语言：基础篇</title>
    <link href="https://www.adunas.top/posts/20240324a.html"/>
    <id>https://www.adunas.top/posts/20240324a.html</id>
    <published>2024-03-24T04:26:20.000Z</published>
    <updated>2024-04-01T03:06:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程导航"><a href="./20240221b.html#基础篇">编程导航</a></h1><h2 id="标准输入输出">标准输入输出</h2><p>  “stdio” 的全称是 “standard input/output”，表示标准输入输出，例如“printf” 打印函数就需要该头文件，这是最基本的头文件，必须要调用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="return和exit">return和exit</h1><p>  exit 是强制结束运行的程序，清理进程。return是返回函数，返回设定的参数，如果是在主函数里使用，返回值将给 exit。</p><h1 id="打印">打印</h1><p>  打印不同的类型的值，符号是不同的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//有符号整型</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> a = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//无符号整型</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> b = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;有符号整型：%d，无符号整型：%u\n&quot;</span>, a, b);</span><br><span class="line">    <span class="comment">//浮点型</span></span><br><span class="line">    <span class="type">double</span> c = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//字符型</span></span><br><span class="line">    <span class="type">char</span> d = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;浮点型：%lf，字符型：%c\n&quot;</span>, c, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="不要使用该方法">不要使用该方法</h2><p>  一行一行地打印，不要每次只打印几个字符。这样会拖慢整个运行效率，占用资源，并可能出现故障。禁止使用以下方法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组下标为：[&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;]\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正确的方法是转化为字符串，然后打印：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>] = <span class="string">&quot;数组下标为：[&quot;</span>;</span><br><span class="line">    <span class="type">char</span> temp[<span class="number">20</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d, &quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcat</span>(str, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcat</span>(str, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h1 id="字符和字符串">字符和字符串</h1><p>  字符变量是由 ASCII 码对应的二进制数存在内存里的。ASCII码可以表示基础的符号、数字和字母，占一个字节；汉字的编码占两个字节。字符串就是字符数组，字符串结尾含一个结束符。</p><h2 id="头文件">头文件</h2><p>  操作字符串使用的库函数为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>这是必须添加的。</p><h1 id="指针">指针</h1><h2 id="易错点1">易错点1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> arry[] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p;</span><br><span class="line">    p = arry;</span><br><span class="line">    <span class="comment">//打印第一个和第二个元素</span></span><br><span class="line">    <span class="comment">//错误写法</span></span><br><span class="line">    <span class="comment">// printf(&quot;数组下标为：%u %u\n&quot;, *ans, *ans + 1);</span></span><br><span class="line">    <span class="comment">//正确写法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组下标为：%u %u\n&quot;</span>, *ans, *(ans + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="易错点2">易错点2</h2><p>  初始化两个指针容易出现错误，导致第二个不是指针而是变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//错误写法</span></span><br><span class="line">    <span class="comment">// signed int* p = NULL, q = NULL;</span></span><br><span class="line">    <span class="comment">//正确写法</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = <span class="literal">NULL</span>,* q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="数组和指针">数组和指针</h2><h3 id="等价关系">等价关系</h3><p>  变量和数组是等价的。但是还是有细微区别。</p><p>  考虑一种情况：</p><table><thead><tr class="header"><th>数学符号</th><th>代码变量</th><th>说明</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(A\)</span></td><td>signed int A[] = { 1, 2, 3, 4, 5 }</td><td>给定矩阵</td></tr><tr class="even"><td><span class="math inline">\(N_A\)</span></td><td>unsigned int N_A</td><td>元素个数（矩阵计算）</td></tr><tr class="odd"><td>-</td><td>signed int* p = A</td><td>矩阵指针</td></tr><tr class="even"><td><span class="math inline">\(N_p\)</span></td><td>unsigned int N_p</td><td>元素个数（指针计算）</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> A[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//元素个数计算</span></span><br><span class="line">    <span class="comment">//矩阵法</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> N_A = <span class="keyword">sizeof</span>(A) / <span class="keyword">sizeof</span>(A[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//或者将 sizeof(A[0]) 写成 sizeof(signed int)，与数组元素变量定义保持一致即可</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵计算的元素个数为： %d\n&quot;</span>, N_A);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针法</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = A;</span><br><span class="line">    <span class="comment">//下面一行是错误的计算方法，因为用指针表示后，*p 指向数组当前元素，计算指针的长度就是当前元素的长度而不是数组的长度。</span></span><br><span class="line">    <span class="comment">//signed int N_p = sizeof(*p) / sizeof(signed int);</span></span><br><span class="line">    <span class="comment">//==========下面的方法也是错误的==========</span></span><br><span class="line">    <span class="comment">//对于指针指向的数组元素超出最后一个时，该地址内的值是随机的。只可能在像字符串数组中含结束符号的元素数组中使用。</span></span><br><span class="line">    <span class="comment">/*unsigned int N_p = 0;</span></span><br><span class="line"><span class="comment">    while (*p != NULL) &#123;</span></span><br><span class="line"><span class="comment">        p++;</span></span><br><span class="line"><span class="comment">        N_p = N_p + 1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    printf(&quot;指针计算的元素个数为： %d\n&quot;, N_p);*/</span></span><br><span class="line">    <span class="comment">//========================================</span></span><br><span class="line">    <span class="comment">//总结：指针法是无效的，这里就充分地看出了数组和指针地区别</span></span><br><span class="line">    <span class="comment">//正确地做法是用数组计算元素个数，作为参数进行传递</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h3 id="符号类型">符号类型</h3><p>  数组和指针本身都是无符号整型的。而定义数组时定义的类型是指定元素的类型。同理定义指针的类型是定义指针指向的地址内值的类型。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> C[<span class="number">2</span>] = &#123; <span class="number">-1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>* p = C;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组显示第一个元素为： %d，指针显示第一个元素为： %d\n&quot;</span>, C[<span class="number">0</span>], *p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><p>上面定义的数组是有符号整型，指针是无符号整型，指针指向的内存地址内的值不发生改变，但是指针无符号是没有负数的，所有都会显示一个正数。</p><h1 id="数组函数">数组函数</h1><p>  数组不能作为函数变量返回，但是可以返回数组的指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>* <span class="title function_">Array</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a, <span class="type">signed</span> <span class="type">int</span> b)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>* ans;</span><br><span class="line">    ans = Array(nums, n, target);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵计算的元素个数为： %d\n&quot;</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>* <span class="title function_">Array</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a, <span class="type">signed</span> <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//返回数组下标</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> C[<span class="number">2</span>] = &#123; i,j &#125;;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><ahref="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p>]]></content>
    
    
    <summary type="html">🥯本文为 C 语言基础的教程和学习笔记</summary>
    
    
    
    <category term="编程" scheme="https://www.adunas.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C" scheme="https://www.adunas.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>操作系统教程：Kali</title>
    <link href="https://www.adunas.top/posts/20240319d.html"/>
    <id>https://www.adunas.top/posts/20240319d.html</id>
    <published>2024-03-18T16:21:04.000Z</published>
    <updated>2024-03-18T16:21:04.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><ahref="./20240317b.html#Kali">系统软件导航</a></h1>]]></content>
    
    
    <summary type="html">🍰本文记录操作系统 Kali 的使用技巧</summary>
    
    
    
    <category term="系统软件" scheme="https://www.adunas.top/categories/%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件教程" scheme="https://www.adunas.top/tags/%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"/>
    
    <category term="Kali" scheme="https://www.adunas.top/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：移动端应用程序</title>
    <link href="https://www.adunas.top/posts/20240319c.html"/>
    <id>https://www.adunas.top/posts/20240319c.html</id>
    <published>2024-03-18T16:14:03.000Z</published>
    <updated>2024-03-18T16:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#移动端应用程序">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己学习设计移动端应用程序的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="应用程序" scheme="https://www.adunas.top/tags/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：传感器物联网</title>
    <link href="https://www.adunas.top/posts/20240319b.html"/>
    <id>https://www.adunas.top/posts/20240319b.html</id>
    <published>2024-03-18T16:10:42.000Z</published>
    <updated>2024-03-18T16:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#传感器物联网">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己学习搭建传感器物联网的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="传感器" scheme="https://www.adunas.top/tags/%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
    <category term="物联网" scheme="https://www.adunas.top/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：图像识别</title>
    <link href="https://www.adunas.top/posts/20240319a.html"/>
    <id>https://www.adunas.top/posts/20240319a.html</id>
    <published>2024-03-18T16:08:40.000Z</published>
    <updated>2024-03-18T16:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#图像识别">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己学习图像识别的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="图像识别" scheme="https://www.adunas.top/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：云台机械臂</title>
    <link href="https://www.adunas.top/posts/20240318zl.html"/>
    <id>https://www.adunas.top/posts/20240318zl.html</id>
    <published>2024-03-18T06:46:23.000Z</published>
    <updated>2024-03-18T06:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#云台机械臂">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己玩儿云台机械臂的内容</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="云台机械臂" scheme="https://www.adunas.top/tags/%E4%BA%91%E5%8F%B0%E6%9C%BA%E6%A2%B0%E8%87%82/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：PCB焊接技巧</title>
    <link href="https://www.adunas.top/posts/20240318zk.html"/>
    <id>https://www.adunas.top/posts/20240318zk.html</id>
    <published>2024-03-18T06:46:23.000Z</published>
    <updated>2024-03-18T06:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#PCB焊接技巧">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文总结自己的PCB焊接技巧</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="PCB焊接技巧" scheme="https://www.adunas.top/tags/PCB%E7%84%8A%E6%8E%A5%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：平衡车</title>
    <link href="https://www.adunas.top/posts/20240318zm.html"/>
    <id>https://www.adunas.top/posts/20240318zm.html</id>
    <published>2024-03-18T06:46:23.000Z</published>
    <updated>2024-03-18T06:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#平衡车">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己手动搭建平衡车的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="平衡车" scheme="https://www.adunas.top/tags/%E5%B9%B3%E8%A1%A1%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：遥控手柄</title>
    <link href="https://www.adunas.top/posts/20240318zi.html"/>
    <id>https://www.adunas.top/posts/20240318zi.html</id>
    <published>2024-03-18T06:46:23.000Z</published>
    <updated>2024-03-18T06:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#遥控手柄">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己手动制作遥控手柄的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="导航" scheme="https://www.adunas.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="人工智能" scheme="https://www.adunas.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="遥控手柄" scheme="https://www.adunas.top/tags/%E9%81%A5%E6%8E%A7%E6%89%8B%E6%9F%84/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：GNSS接收机</title>
    <link href="https://www.adunas.top/posts/20240318zj.html"/>
    <id>https://www.adunas.top/posts/20240318zj.html</id>
    <published>2024-03-18T06:46:23.000Z</published>
    <updated>2024-03-18T06:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#GNSS接收机">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己学习制作GNSS接收机的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="导航" scheme="https://www.adunas.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="人工智能" scheme="https://www.adunas.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="GNSS接收机" scheme="https://www.adunas.top/tags/GNSS%E6%8E%A5%E6%94%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：无人船</title>
    <link href="https://www.adunas.top/posts/20240318zh.html"/>
    <id>https://www.adunas.top/posts/20240318zh.html</id>
    <published>2024-03-18T06:35:35.000Z</published>
    <updated>2024-03-18T06:35:35.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#无人船">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己手动搭建无人船的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="导航" scheme="https://www.adunas.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="无人船" scheme="https://www.adunas.top/tags/%E6%97%A0%E4%BA%BA%E8%88%B9/"/>
    
    <category term="人工智能" scheme="https://www.adunas.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：无人机</title>
    <link href="https://www.adunas.top/posts/20240318zg.html"/>
    <id>https://www.adunas.top/posts/20240318zg.html</id>
    <published>2024-03-18T06:34:07.000Z</published>
    <updated>2024-03-18T06:34:07.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#无人机">工程实践导航</a></h1><h1 id="硬件">硬件</h1><p>  这一版，采用32单片机、空心杯电机、MOS管驱动、蓝牙模块、图传（备用）、摄像头、陀螺仪加速度计、OLED、电源模块、电池。</p><h1 id="设计思路">设计思路</h1><ul class="task-list"><li><label><input type="checkbox" />元器件选型</label></li><li><label><input type="checkbox" />原理图</label></li><li><label><input type="checkbox" />封装</label></li><li><label><input type="checkbox" />3D模型</label></li><li><label><input type="checkbox" />PCB布局</label></li><li><label><input type="checkbox" />PCB布线</label></li><li><label><input type="checkbox" />检查</label></li><li><label><input type="checkbox" />购买元器件</label></li><li><label><input type="checkbox" />检查</label></li><li><label><input type="checkbox" />发板</label></li><li><label><input type="checkbox" />检查</label></li></ul><p>最小系统连接器</p>]]></content>
    
    
    <summary type="html">🍱本文记录自己手动搭建无人机的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="导航" scheme="https://www.adunas.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="人工智能" scheme="https://www.adunas.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="无人机" scheme="https://www.adunas.top/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>工程实践：智能车</title>
    <link href="https://www.adunas.top/posts/20240318ze.html"/>
    <id>https://www.adunas.top/posts/20240318ze.html</id>
    <published>2024-03-18T06:22:39.000Z</published>
    <updated>2024-03-18T06:22:39.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><ol type="1"><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><ahref="./20240318zf.html#智能车">工程实践导航</a></h1>]]></content>
    
    
    <summary type="html">🍱本文记录自己手动搭建智能车的过程</summary>
    
    
    
    <category term="工程实践" scheme="https://www.adunas.top/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="自动化" scheme="https://www.adunas.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="导航" scheme="https://www.adunas.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="人工智能" scheme="https://www.adunas.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="智能车" scheme="https://www.adunas.top/tags/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
  </entry>
  
</feed>
