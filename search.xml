<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阅读：视觉SLAM十四讲</title>
      <link href="/posts/20240601a.html"/>
      <url>/posts/20240601a.html</url>
      
        <content type="html"><![CDATA[<h1 id="阅读导航"><a href="#阅读导航" class="headerlink" title="阅读导航"></a><a href="./20240224b.html#视觉SLAM十四讲">阅读导航</a></h1><h1 id="本书电子资源"><a href="#本书电子资源" class="headerlink" title="本书电子资源"></a>本书电子资源</h1><ol><li>视频：<a href="https://www.bilibili.com/video/BV1JK4y1s7xf">【【SLAM】高翔-视觉SLAM十四讲 配套视频】</a>。评论区含有视频配套的 PPT 资源和电子书。<ol><li>该视频不清晰，查看其他资源：<a href="https://www.bilibili.com/video/BV16t411g7FR">【高翔】视觉SLAM十四讲</a></li></ol></li><li>代码：<a href="https://github.com/gaoxiang12/slambook">slambook</a>。github 还有一些基于此的注释之类的；还有一个思维导图的。github 中搜索 <code>视觉SLAM十四讲</code> 即可。</li><li>习题：<a href="https://github.com/Philipcjh/HW-of-SLAMBOOK2">HW-of-SLAMBOOK2</a>。</li></ol><h1 id="阅读建议"><a href="#阅读建议" class="headerlink" title="阅读建议"></a>阅读建议</h1><ol><li><a href="https://blog.csdn.net/u011341856/article/details/103113999">解读《视觉SLAM十四讲》，带你一步一步入门视觉SLAM—— 第 1 讲 预备知识</a>。</li><li><a href="https://www.bilibili.com/video/BV1dD4y1Y7XH">【【一起读书】视觉SLAM十四讲 第1讲 加了个杜比音效 有没有变好听一点】</a>。</li></ol><h1 id="学习思路"><a href="#学习思路" class="headerlink" title="学习思路"></a>学习思路</h1><ol><li><h1 id="SLAM"><a href="#SLAM" class="headerlink" title="SLAM"></a>SLAM</h1></li></ol><p>&emsp;&emsp;<code>SLAM</code> 是 <code>Simultaneous Localization and Mapping</code> 的缩写，中文译作 “同时定位与地图构建”。它是指将搭载特定传感器的主体，在没有环境先验信息的情况下，于运动过程中建立环境的模型，同时估计自己的运动。</p><p>&emsp;&emsp;史莱姆！</p><h1 id="第1讲-预备知识"><a href="#第1讲-预备知识" class="headerlink" title="第1讲 预备知识"></a>第1讲 预备知识</h1><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><ol><li>有线性方程 $A \codt x = b$，若已知 $A$，$b$，需要求解 $x$，该如何求解？这对 $A$ 和 $b$ 有哪些要求？提示：从 $A$ 的维度和秩角度来分析。</li><li>高斯分布是什么？它的一维形式是什么样子？它的高维形式是什么样子？</li><li>你知道 C++ 的类吗？你知道 STL 吗？你使用过它们吗？</li><li>你以前怎样书写 C++ 程序？（你完全可以说只在 VC6.0 下写过 C++ 工程，只要你<br>有写 C++ 和 C 语言经验就行。）</li><li>你知道C++11标准吗？你听说过或用过其中哪些新特性？有没有其他的标准？</li><li>你知道 Linux 吗？你有没有至少使用过其中之一（安卓不算），比如 Ubuntu？</li><li>Linux的目录结构是什么样的？你知道哪些基本命令，比如ls，cat等？</li><li>如何在Ubuntu系统中安装软件（不打开软件中心的情况下）？这些软件被安装在什么地方？如果只知道模糊的软件名称（比如想要装一个名称中含有Eigen的库），应该如何安装它？</li><li><ul><li>花一个小时学习一下 Vim，因为你迟早会用它。你可以在终端中输入 vimtutor 阅<br>读一遍所有内容。我们不需要你非常熟练地操作它，只要在学习本书的过程中使用它<br>键入代码即可。不要在它的插件上浪费时间，不要想着把 vim 用成 IDE，我们只用<br>它做文本编辑的工作。</li></ul></li></ol><h1 id="第2讲-初识SLAM"><a href="#第2讲-初识SLAM" class="headerlink" title="第2讲 初识SLAM"></a>第2讲 初识SLAM</h1><h1 id="第2讲-三维空间刚体运行"><a href="#第2讲-三维空间刚体运行" class="headerlink" title="第2讲 三维空间刚体运行"></a>第2讲 三维空间刚体运行</h1><h1 id="第3讲-三维空间刚体转动"><a href="#第3讲-三维空间刚体转动" class="headerlink" title="第3讲 三维空间刚体转动"></a>第3讲 三维空间刚体转动</h1><h1 id="第4讲-李群与李代数"><a href="#第4讲-李群与李代数" class="headerlink" title="第4讲 李群与李代数"></a>第4讲 李群与李代数</h1><h1 id="第5讲-相机与图像"><a href="#第5讲-相机与图像" class="headerlink" title="第5讲 相机与图像"></a>第5讲 相机与图像</h1><h1 id="第6讲-非线性优化"><a href="#第6讲-非线性优化" class="headerlink" title="第6讲 非线性优化"></a>第6讲 非线性优化</h1><h1 id="第7讲-视觉里程计1"><a href="#第7讲-视觉里程计1" class="headerlink" title="第7讲 视觉里程计1"></a>第7讲 视觉里程计1</h1><h1 id="第8讲-视觉里程计2"><a href="#第8讲-视觉里程计2" class="headerlink" title="第8讲 视觉里程计2"></a>第8讲 视觉里程计2</h1><h1 id="第9讲-后端1"><a href="#第9讲-后端1" class="headerlink" title="第9讲 后端1"></a>第9讲 后端1</h1><h1 id="第10讲-后端2"><a href="#第10讲-后端2" class="headerlink" title="第10讲 后端2"></a>第10讲 后端2</h1><h1 id="第11讲-回环检测"><a href="#第11讲-回环检测" class="headerlink" title="第11讲 回环检测"></a>第11讲 回环检测</h1><h1 id="第12讲-建图"><a href="#第12讲-建图" class="headerlink" title="第12讲 建图"></a>第12讲 建图</h1><h1 id="第13讲-实践：设计-SLAM-系统"><a href="#第13讲-实践：设计-SLAM-系统" class="headerlink" title="第13讲 实践：设计 SLAM 系统"></a>第13讲 实践：设计 SLAM 系统</h1><h1 id="第14讲-SLAM：现在与未来"><a href="#第14讲-SLAM：现在与未来" class="headerlink" title="第14讲 SLAM：现在与未来"></a>第14讲 SLAM：现在与未来</h1><h1 id="附录A-高斯分布的性质"><a href="#附录A-高斯分布的性质" class="headerlink" title="附录A 高斯分布的性质"></a>附录A 高斯分布的性质</h1><h1 id="附录A-矩阵求导"><a href="#附录A-矩阵求导" class="headerlink" title="附录A 矩阵求导"></a>附录A 矩阵求导</h1><h1 id="附录A-ROS-入门"><a href="#附录A-ROS-入门" class="headerlink" title="附录A ROS 入门"></a>附录A ROS 入门</h1><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日程表：设计思路</title>
      <link href="/posts/20240531a.html"/>
      <url>/posts/20240531a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#设计思路">文章导航总览</a></h1><h1 id="E-R-关系模型"><a href="#E-R-关系模型" class="headerlink" title="E-R 关系模型"></a>E-R 关系模型</h1><p>&emsp;&emsp;日程，本质还是一个好用的数据库。所以要进行数据库设计，确定表和表关系。基本表有：</p><ol><li>主任务（大类、小类、内容、独立性、截止日期、重要程度、难易程度、耗时程度、期望值、完成度、已使用时间、完成质量、完成日期、id、引入时间、引入来源）<ol><li>子任务（主任务id、大类、小类、内容、独立性、截止日期、重要程度、难易程度、耗时程度、期望值、完成度、已使用时间、完成质量、完成日期、id、编辑时间、编辑年份）</li></ol></li><li>计划（日期、子任务id、大类、小类、内容、计划用时、已使用时间、子任务是否完成、完成质量、id、编辑时间）</li><li>日程表（日期、计划id、大类、小类、内容、开始时刻、停止时刻、用时、工作状态、子任务完成度、完成质量、id）</li></ol><p>注释第一版：</p><ol><li>任务只分主任务和子任务，正常逻辑是包含包含再包含，即一个主任务下多级子任务。但是这种东西在表格设计上来说是困难无比的。所以设计逻辑为：<ol><li>主任务之间可以是并列关系、也可以是包容关系。但是主任务具有完成性的象征意义，经过努力，完成主任务的全部子任务后，主任务完成。主任务的最小单元为可以为人说道的任务。</li><li>子任务是最小主任务的最小分解。子任务之间没有包含关系，全部为并列关系。子任务是对主任务的一个分解，分解到可以实施为止。</li><li>如果任务之间如有包含关系，则排序层级高的任务在层级低的任务之上。并列关系的任务无顺序。</li></ol></li></ol><p>注释第二版：</p><ol><li>主任务之间都是并列的，没有包含关系。一旦写出具有包含关系的主任务，作为上层级的任务作废，留存被包含的任务作为子任务。主任务是最小单元为可以为人说道的任务。主任务具有完成性的象征意义，经过努力，完成主任务的全部子任务后，主任务完成。</li><li>子任务是主任务的最小分解。子任务之间没有包含关系，全部为并列关系。子任务是对主任务的一个分解，分解到可以实施为止。子任务的目标是具有可操作性、可实施性，所以子任务根据实际实施过程中遇到的情况可以调整的。<ol><li>前置任务为单个最近前置任务。</li></ol></li><li>默认排序和id都是自动向下添加。为了增加可读性进行重新排序，可通过按某一标签进行排序。</li><li>上承梦想、下启成就。</li><li>至此第一版注释正式作废，以第二版注释为准。</li></ol><p>&emsp;&emsp;利用软件 Navicat 设计生成的 ER 图如下：</p><p><img src="https://picture.adunas.top/TaskPlanScheduleAdunasA.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 日程表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日程表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="/posts/20240530a.html"/>
      <url>/posts/20240530a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#MySQL">编程导航</a></h1><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>&emsp;&emsp;MySQL 是关系型数据库，每一列的数据中有关系，不同的表也可以有关系。</p><h1 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h1><h2 id="ER图"><a href="#ER图" class="headerlink" title="ER图"></a>ER图</h2><p>&emsp;&emsp;有个图叫 ER 图，它有三个图形符号：对象、属性、关系，能够很好的表示表之间的关系。参考<a href="https://blog.csdn.net/m0_72853403/article/details/134607123">【从删库到跑路】MySQL数据库 — E-R图 | 关系模型</a>。</p><h2 id="网页可视化"><a href="#网页可视化" class="headerlink" title="网页可视化"></a>网页可视化</h2><p>&emsp;&emsp;网页可视化一些思路：</p><ol><li><a href="https://www.bilibili.com/video/BV1Za4y1T7H7/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【计算机专业毕设之基于python+flask+mysql+天气可视化分析系统】</a>。</li><li><a href="https://www.bilibili.com/video/BV1VP4y1C7Wz/?p=29&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【2023最新 MySQL数据分析+数据可视化+数据分析实战全套学习课程教程】</a>。</li><li><a href="https://www.bilibili.com/video/BV1384y1P7tu/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【Java之集成Echarts图表可视化,数据可视化(LayUI+Echarts+SSM+Mysql)】</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Navicat</title>
      <link href="/posts/20240529a.html"/>
      <url>/posts/20240529a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href="https://www.bilibili.com/video/BV1AX4y147tA/?p=6&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【一小时MySQL教程】</a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Navicat">系统软件导航</a></h1><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>&emsp;&emsp;Navicat 不是开源的，是公认最好用的、最成熟的 SQL 软件。</p><h1 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h1><h2 id="1045"><a href="#1045" class="headerlink" title="1045"></a>1045</h2><p>&emsp;&emsp;该错误为密码错误，在安装 SQL 时会要求设置密码，记住即可。密码错误的话会出现以下错误：</p><p><img src="https://picture.adunas.top/NavicatSqlPasswordError1045.png" alt=""></p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p>&emsp;&emsp;你用 MySQL 建立了一个实例，在 Navicat 软件中尝试打开，新建一个 MySQL 链接，无论你新建几个，只要主机和端口号不变，仍然会链接到这里。</p><h1 id="绘制ER图"><a href="#绘制ER图" class="headerlink" title="绘制ER图"></a>绘制ER图</h1><p>&emsp;&emsp;参考：<a href="https://www.bilibili.com/video/BV16q4y1E7ct/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【navicat导出er图（含navicat添加mysql表外键解决导出的er图没关联关系）-杰凡IT】</a>，从2min50s开始看。</p><ol><li>设置外键。告诉两个表之间哪个字段是关联的。具体操作：<ol><li>右键表-设计表-外键-选择本表字段-选择要关联的表-选择字段。</li></ol></li><li>生成 ER 图。具体操作：<ol><li>右键数据库-逆向数据到模型。</li></ol></li></ol><h1 id="使用Navicat创建多张表的连接查询"><a href="#使用Navicat创建多张表的连接查询" class="headerlink" title="使用Navicat创建多张表的连接查询"></a>使用Navicat创建多张表的连接查询</h1><p>&emsp;&emsp;两张表有一列内容是相同的，利用这一列可以提取两张表所需的内容生成新表。参考：<a href="https://www.bilibili.com/video/BV1vU4y1N7zd/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【20211209_使用Navicat创建多张表的连接查询】</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Navicat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页PPT</title>
      <link href="/posts/20240513b.html"/>
      <url>/posts/20240513b.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#网页PPT">编程导航</a></h1><p>&emsp;&emsp;PPT 是什么？是演示文稿。它本来不是为了答辩而做得依托答辩。演示文稿以其独有的视觉冲击、精炼概括、重点突出，帮助演讲人向别人传达自己信息，包括知识、理念、工作展示，所以回归本质，它是很好的沟通桥梁，是不错的理解工具，所以请回归其本质。</p><p>&emsp;&emsp;我为什么要放弃 PPT。不是我放弃它，是它放弃了我，我是真学不会，手动对齐，手动拖拽真的很让人难受。卡顿、死机、崩溃！还要钱，或者下载盗版？真的很难受。最重要的缺点是什么呢？移植差、自动化差、批量化差、精确度差，说到精确度，这真的不符合理科生的美学理念。</p><p>&emsp;&emsp;我为什么要用网页 PPT？因为网页目前的发展来看，早已经到达一个空前的高度。网页的优点不必多说。而它的演示能力、动画能力，可以称之为前端，完全能够实现PPT 的所有功能。又有很多开源的工具，又能代码控制，弹性盒子适应不同的硬件设备。</p><p>&emsp;&emsp;题外话，本质是一样的东西。首先从表征上来看，都是在硬件设备显示文字、动画以及交互。PPT 主流软件御三家：微软、wps、苹果的，是软件对吧。而 web 引申的 web 应用，本质都会是一样的。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li>纯手搭建。直接来前端三件套呗。比如说网页上的轮播图swiper组件。轮播图很适合用来做PPT。</li><li>从 markdown 来。使用现成的工具，如 <a href="https://revealjs.com">reveal</a>。但是它太简陋了，至少在演示模板上是这样。</li><li>当然是要介绍本次使用的工具啦：<a href="https://cn.sli.dev/">Slidev</a></li></ol><p>其他：</p><ol><li>一个设计师免费 ppt 模板网站，有十来个 <a href="https://slidesppt.com/">https://slidesppt.com/</a></li></ol><h1 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h1><p>&emsp;&emsp;参考指南即可。在端口中常用以下几个命令：</p><p>使用的是 vue 构建的。启动渲染，修改保存后，浏览器同步渲染：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx slidev</span><br></pre></td></tr></table></figure><p>产生独立web应用，可以独立部署在其他服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx slidev build</span><br></pre></td></tr></table></figure><p>使用的是 vite 构建的web应用的，等价于：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build </span><br></pre></td></tr></table></figure><p>对于独立应用可以预览，即生成一个本地服务器驱动网页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx vite preview</span><br></pre></td></tr></table></figure><p>如果想要构建在同域名的子路径下，可以这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx slidev build --base=/yourpath/</span><br></pre></td></tr></table></figure><p>注意，你要把 dist 文件夹里面的所有内容复制到 ……/yourpath/ 下面，再上传到服务器即可。</p><p>导出为 pdf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx slidev <span class="built_in">export</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创业：创业灵感</title>
      <link href="/posts/20240513a.html"/>
      <url>/posts/20240513a.html</url>
      
        <content type="html"><![CDATA[<h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#创业灵感">工程实践导航</a></h1><h1 id="开放型公司计划"><a href="#开放型公司计划" class="headerlink" title="开放型公司计划"></a>开放型公司计划</h1><p>&emsp;&emsp;设计一个开放型公司，不限制工作时长，不会离职，没有基础工资，不按照效绩发放工资。按照贡献发放工资。不限制何时上班，不限制何时下班。账户里还有钱，账户里没钱了。账户有钱就继续发放工资，没钱就不发工资。优先保证公司的运营。公司整个生存压力，每个岗位压力，每个任务压力，由所有人来承担。所有工作必须做好归档，要求是随时可以开始，随时可以停下来。工资上限不封顶。不设置任何职位和权利，相互领导，相互促进。不搞形式主义，不开大会，不卡时间，不卡学历，不卡性别，不卡年龄，不卡国别，不卡背景。任务为悬榜式，哪些任务优先推，哪些任务后推，都是可以的。所有会议都要围绕具体的事情和目标去开会；讨论计划，修改计划，以及分工合作等等。把你所有的工作展现在别人面前，一起推动事情的完成。让公司有发展，每个人有成就，也不是要构建什么虚无缥缈的梦。公司有很多人可以运行，只有一个人也可以运行。工作替代性强，老板不在，也能正常工作。社保、医保、五险一金全交，但是不工作的话，先由工资抵扣，不够的话可以自己补。要制定严谨的规范，要有安检。承诺不使用不能商用、别人的商业机密，承诺我们公司的商业机密不能外泄。而其他的的能开源的都可以开源，能不能开源的，哪些是开源的，哪些是机密的，都是要通过内部讨论，严格制定文本规范的内容。属于我们的成果，一般就是付费的东西，工资就是一种付费，拿钱买了你的劳动成果。</p>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 灵感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汉语</title>
      <link href="/posts/20240512e.html"/>
      <url>/posts/20240512e.html</url>
      
        <content type="html"><![CDATA[<h1 id="语言导航"><a href="#语言导航" class="headerlink" title="语言导航"></a><a href="./20240318j.html#汉语">语言导航</a></h1><p>&emsp;&emsp;呵呵，你别觉得奇怪！汉语虽然是母语，但是我对这个的嘘唏总是有短板的。</p><h1 id="发音"><a href="#发音" class="headerlink" title="发音"></a>发音</h1><h2 id="鼻音"><a href="#鼻音" class="headerlink" title="鼻音"></a>鼻音</h2><p>&emsp;&emsp;前后鼻音分不清楚滴。</p><ol><li>qing 青苔，不是 qin。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 外语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汉语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>81925</title>
      <link href="/posts/20240512d.html"/>
      <url>/posts/20240512d.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1425d2671471e68f774a6d3e0cf9bbe34eaaf92cbbb3275f06187d45a17db072">1854c2ea95e214cfcf3cd4370f46f97e0ecaccfb373d68e20b365b27992cadcc011b0835df9f6c8559caed0c191ad905dda1670da1886a14b9f1f4959f650ab3efc257b00ca95acbb981c143f72e007a71ea15b11d3d7364bd45fabaf975347365fde6e4c92dce9dfc79f7e5e0c75458458ee1ca50ea9830057cce6ea260dc9232c075288657a72bc7d2fa74d6f89ae255705bd2def9095010144563d2882b453a903c9623d4f91c035f90bdeea17ef3ff1545a46cda55b31fa9867322b9d9d015f619ba13b32fd7050a5b95d02654173c261eabacbaac29ef58e698b6dabd569855e199d4fbdfb9a75fd7eaac1be2cdca006ffa51496249144bd93a6c4fc4bcb11a27d1ceb890784b000cc3769cea88e0061c5a4769a30594d8248122f660ae760d6bdd4e9da5015d05b06dcd25067240933014784941da855b1c0643aa1eaed935dd7444c64940aca34ec83505010d9e092650aed61db05ae723fa5d6f4a16</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>42420</title>
      <link href="/posts/20240512c.html"/>
      <url>/posts/20240512c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c156faba0c733fb785a08f8887b591a4e31ef73d25aa071838716c8935c3356e">6fd0ff34900db4efb795bd7463bf60283dabda5dc022728f6dd87f9a670bce58cf898e658d5a030633652201dae67ab050bde7fdb66cefe17c82778a67ec4ab75bfb01b8d847bee0a25a5ea07f4ed8a90343ab89dd2942b0925295b9d8394e38cf8848267e69f122eeb5598023e76420525e7cde90dad0ec6e67b0cf8a39c76ffc6156e077859aa01940e2694ff48d5e151fa08d697b517b974d22bd1b756d9b739fc5e966f5c051d0cebcf9b1603a02c8fb09d1f64f882002ab61e4c858e30b3228d9f9294c8b4f54a7863c7e8739e5000795d33556ba4ebd454351221b8e6079c9606b0db677e8704eec3427da2075ec33dca713bee768cafe69fffa6af2186a510862d64b2bedd139db3242bc96aae9514ec6a41765555e55704da08a3df771786bdb9df6bd6592afce7f75ba164f6ef05407169392cd5eb2aeaa9f9fd12abd5cd5fad37ca06937de4f1c46b35ede</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>82410</title>
      <link href="/posts/20240512b.html"/>
      <url>/posts/20240512b.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8b84ce57b7dfc28111b3d53dd5a70638b304dffd72b74dd1888ee0ec14bbae90">4ebbbcc2023f65fe7299ada77eb4d5e32262bfac13ad819606bde41e1396102025cf173e635ac38cc00abb31e03c9965ba0316093dc0ed9023b72616a5e99115c816872e4e057891f329d8df36b1da0a33c8e5a3b233088e43f8e51eb0eb88d75f681d07c2c2f0902e599adec7629a374a45bfcfc6e328ac50cfc9f06fe3b38342e3f6212c5a4fb6e1c0a016a3a9d1c2c3c2fbb2f46602c99aaff89c2e5354557b28ca4cc5eef9b514a0d2518a1ac3b4d9ff956a1cbc47045a2294057bb0dc1778ee9959570b8a1033fc008ff2242c7dd4372df1681c1e3d380677657e1b6b83bb598b326d6e89c57f4413534597cac4d1e560eaadc452d0229e0809e4298725082223c23b78de8bf79a6c2d7073db6f594f0118a097bbcff7bc5467ce9ca48c9b30adf5585c06b57ef344f248dcfc761fcfe32447c1a63fe7733e48dfdce9cec06c8114a0129efc95883d6a3f56046862093438939027ddb4c2ff781063ce2aa9f7826b6bd1c27227a5b9d9388ef9744eb1d808f7547c16e3af93bd6c8c0746be1618ca5e288e2b9e685012aeb479abdfd4d642b24e723bf30d8403d2a13ee0a690c09605af22359c126349539c6dc0e4b261e687c06941787fdb90a1774cee6972925a36f75320b99679f666e2fb422347867187207ccfbfe7b9ff2a56dffc8d1f32dd3e3f26f5a1b40e3e9c5bc0f3afb9bc273accf029afdbe7572d0401b4a7f64ab6814f43a1edc94c18e5599480ff624ae047c12413b16796fbcf0f96fc0cc1766013b1e039b7e9a5bbae7ec41fa7daef331a72b6a5796421a64e79ed129d5f72de0bd1e7418e4803e5dee39f2cc5502c71e636500f8ce5faeca6c635f73cdd77225b62990ee0c77a0e17d3942f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>122425</title>
      <link href="/posts/20240512a.html"/>
      <url>/posts/20240512a.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9f62dff581b984706c4a988d36c3230ac3869f45c4850992c9c845f8a417e09a">22c484ca95ae0490f41907c0f929904417b72766a72fc0ce7d27fabf16e1967a34e9988cda6e0e37d5de911cbe55f3a5ec9ffcc7a4f1d001ec3d340b92eb05c3a95e219fd6f706f66473fe64c64634551d4c7774b6aa1377c93856316c24126bcf670444180a7e636b43bdc840974e2a568c41874a6e55a39e0350a094c526b306cf4bbb0770b4dadab3e18fe72a884fa9847a3b10b2fe9f419f88aff354d1582d310360fc6279764dac87b41aaf18c37c9816663905c030fe8280147eb33bf6e7e4bcc2d87118cd6f5272ee2a509dc5b218e9962c922c1902e9c573f63256a17f955733420de758ec061e74c2432e76cbafd1d80dea86347aaf5eee02ec48fbd8f324792aa1eb4471fb19e6ff2ac79a9ca28b153e1e346139cd7e749e3242760c2217eeb0e597c7eebc18eae44f4c25</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运动健康（四）：认知成长篇</title>
      <link href="/posts/20240511a.html"/>
      <url>/posts/20240511a.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e6acecbd46742bd46b6b6470d7e2f8730317b335f66a54de7624ed7ddb2b76f3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 运动健康 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 健康 </tag>
            
            <tag> 心态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运动健康（三）：认真工作篇</title>
      <link href="/posts/20240503a.html"/>
      <url>/posts/20240503a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#认真工作篇">文章导航总览</a></h1><h1 id="自己便是一个最小团队"><a href="#自己便是一个最小团队" class="headerlink" title="自己便是一个最小团队"></a>自己便是一个最小团队</h1><p>&emsp;&emsp;害怕没有好团队？一个人做不好事情是团队的原因吗？别的不说，首先把自己的事情做好吧！自己就是一个有机的团队组合。自己有手有脚，有设备有工具，如何利用这些东西高效的去做、去学习才是关键。</p><h1 id="激情工作"><a href="#激情工作" class="headerlink" title="激情工作"></a>激情工作</h1><h2 id="考试型工作"><a href="#考试型工作" class="headerlink" title="考试型工作"></a>考试型工作</h2><h2 id="开麦指挥型游戏"><a href="#开麦指挥型游戏" class="headerlink" title="开麦指挥型游戏"></a>开麦指挥型游戏</h2><h1 id="科学统计"><a href="#科学统计" class="headerlink" title="科学统计"></a>科学统计</h1><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h1 id="后期总结"><a href="#后期总结" class="headerlink" title="后期总结"></a>后期总结</h1><h1 id="AI工具"><a href="#AI工具" class="headerlink" title="AI工具"></a>AI工具</h1><h1 id="自动化办公"><a href="#自动化办公" class="headerlink" title="自动化办公"></a>自动化办公</h1><h1 id="层次化执行"><a href="#层次化执行" class="headerlink" title="层次化执行"></a>层次化执行</h1><h1 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h1><h1 id="头脑风暴发散型"><a href="#头脑风暴发散型" class="headerlink" title="头脑风暴发散型"></a>头脑风暴发散型</h1><h1 id="读三遍论"><a href="#读三遍论" class="headerlink" title="读三遍论"></a>读三遍论</h1><h1 id="读两遍论"><a href="#读两遍论" class="headerlink" title="读两遍论"></a>读两遍论</h1><h1 id="咬牙坚持"><a href="#咬牙坚持" class="headerlink" title="咬牙坚持"></a>咬牙坚持</h1><h1 id="及时放弃"><a href="#及时放弃" class="headerlink" title="及时放弃"></a>及时放弃</h1><h1 id="手机科学反沉迷"><a href="#手机科学反沉迷" class="headerlink" title="手机科学反沉迷"></a>手机科学反沉迷</h1><h1 id="网页app工具"><a href="#网页app工具" class="headerlink" title="网页app工具"></a>网页app工具</h1><h1 id="可跟踪文档"><a href="#可跟踪文档" class="headerlink" title="可跟踪文档"></a>可跟踪文档</h1><h1 id="时钟与非时钟"><a href="#时钟与非时钟" class="headerlink" title="时钟与非时钟"></a>时钟与非时钟</h1><p>&emsp;&emsp;看时间真的会有帮助吗？会让你加快速度，抓紧时间吗？不会绝对不会，要么很长时间内不看时间，要么看时间，根本停不下来。反复看时间本身也是一个浪费时间的事情。</p><h2 id="朋友圈"><a href="#朋友圈" class="headerlink" title="朋友圈"></a>朋友圈</h2><p>&emsp;&emsp;一个引起焦虑的东西。越是屏蔽，越是害怕。</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>&emsp;&emsp;不要下app了，困在算法推荐的视频里</p><h2 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h2><p>&emsp;&emsp;触发情绪，引导情绪的一个工具。</p><h1 id="快与慢"><a href="#快与慢" class="headerlink" title="快与慢"></a>快与慢</h1><p>&emsp;&emsp;细细想来是做不快的，怎么做都是做不快，我要做快的前提是囫囵吞枣，缺点是要少接触无用的东西，会耗费很多精力，或者用改善模型取调整。</p><h1 id="积分奖励"><a href="#积分奖励" class="headerlink" title="积分奖励"></a>积分奖励</h1><p>&emsp;&emsp;积分奖励制，学习方法。</p><h1 id="不要碰"><a href="#不要碰" class="headerlink" title="不要碰"></a>不要碰</h1><p>&emsp;&emsp;有一点不好的东西都不要碰，没有很好的自制力的。</p><h1 id="认可"><a href="#认可" class="headerlink" title="认可"></a>认可</h1><p>&emsp;&emsp;自己认可自己是一件很重要的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 运动健康 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 健康 </tag>
            
            <tag> 心态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日程表：2024年05月</title>
      <link href="/posts/20240502a.html"/>
      <url>/posts/20240502a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#2024年5月">文章导航总览</a></h1><ol><li>主页 home 静态 密码<ol><li>hexo博客 </li><li>PPT页 home/ppt 静态</li><li>日程表 schedule 电脑服务器</li><li>word press网站 阿里云服务器</li><li>随写备忘录 和日程表一起</li><li>收支 和备忘录一起</li><li>物品统计 和备忘录一起</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日程表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日程表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏-星露谷物语</title>
      <link href="/posts/20240430a.html"/>
      <url>/posts/20240430a.html</url>
      
        <content type="html"><![CDATA[<!-- # [文章导航总览](./20240221a.html#ipa) --><h1 id="芋头种子"><a href="#芋头种子" class="headerlink" title="芋头种子"></a>芋头种子</h1><ol><li>姜岛商人</li></ol><h1 id="上古水果"><a href="#上古水果" class="headerlink" title="上古水果"></a>上古水果</h1><ol><li>春夏秋</li><li>28天成熟</li><li>7天结果</li><li>种子制造机做种子</li></ol><h1 id="龙虾"><a href="#龙虾" class="headerlink" title="龙虾"></a>龙虾</h1><p>海洋里放蟹笼</p><h1 id="下矿"><a href="#下矿" class="headerlink" title="下矿"></a>下矿</h1><p>奶酪和金星菠萝。</p><h2 id="农场布局"><a href="#农场布局" class="headerlink" title="农场布局"></a>农场布局</h2>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 星露谷物语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创业：自行车电子防盗系统</title>
      <link href="/posts/20240428a.html"/>
      <url>/posts/20240428a.html</url>
      
        <content type="html"><![CDATA[<h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#自行车电子防盗系统">工程实践导航</a></h1><h1 id="创业计划书书写帮助"><a href="#创业计划书书写帮助" class="headerlink" title="创业计划书书写帮助"></a>创业计划书书写帮助</h1><ol><li>写作要点：<a href="https://www.bilibili.com/video/BV1xb411k7Fd/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【十分钟教你学会创业计划书！】</a></li><li>模板：<a href="https://www.bilibili.com/video/BV1b34y177Zr/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【大学生创新创业计划书】</a></li></ol><p>零模块:项目状况，在做一件什么样的事，让投资人有大致了解<br>第一模块:市场概括，进入什么样的领域，市场空间有多大，增速如何.<br>第二模块:目标客户群存在什么样的需求和痛点，目标客户的需求是什么，存在需要解决的问题是什么。我们的机会所在。（表达清晰表达自己独到的眼光）<br>第三个模块:解决方案或产品，如何解决问题痛点，如何满足需求创造价值，产品或方案描述，业务模式描述，<br>第四模块:竞争对手，竞争对手情况，其他玩家提供什么样的产品，如何解决问题，我们和竞争对手的优势和差异。<br>第五模块，运营状况，目前公司运营状况如何，在哪个阶段，数字说话，前面是虚的东西，这里是实的。<br>第六模块未来规划，未来如何发展战略是什么，包括业务和财务规划。<br>第七模块，团队who 团队介绍<br>第八模块:融资计划，需要融多少钱，花在什么地方。</p><ol><li>脑子里有想法</li><li>查阅资料</li><li>写标题，关键字</li><li>分轻重，详略得当，给大概页数</li><li>概要，头脑风暴，面面俱到，想到什么写什么</li><li>展开详述，填充内容，有什么写什么，能写多少，写多少。<ol><li>插入 “草图”。音频、视频、图片、表格，有说服力的资料</li></ol></li><li>成文，去除废话，详略得当。<ol><li>优化图片，让其变成合适美丽的图片</li></ol></li><li>调整优化，反复增删查改。</li><li>通读、勘误、审核。</li></ol><h1 id="创业初心"><a href="#创业初心" class="headerlink" title="创业初心"></a>创业初心</h1><p>0.5 页</p><ol><li>车被偷过，喜欢骑车，害怕被偷，希望随停随放<ol><li>我对这个事情感兴趣</li></ol></li><li>很多身边的人的车也被偷过，就不想再买了。每年中国有大量的自行车被偷，维权成本大<ol><li>市场需求很大</li></ol></li><li>市面上的产品功能单一，主要是gps，没有车辆状态监控，没有自动充电、没有报警系统，没摄像头捕捉人脸<ol><li>市场竞争力强</li></ol></li><li>个人的技术积累，自动化，导航制导与控制。科创经历、科研经历<ol><li>个人能力强</li></ol></li><li>赚钱，做一个真正服务社会、体现自身价值，面向未来的一项神圣的工作。<ol><li>拔高，内涵正确。</li></ol></li><li>只有创业才能做自己真正喜欢的事情，并为之奋斗一生。</li></ol><p>&emsp;&emsp;身边经常有朋友车被偷，自己的自行车被偷过两次。每次出门的时候，自行车也不敢离开视线，用得很不舒心，不放心。如果能做一个产品，即用即开，即停即锁，那会是多好。再好的锁也会被撬开，被剪断，如果能有一个产品能够及时地监测，并报告给车主，同时能够拍下小偷地样貌那该多好呀。如果就算被偷，能够定位，并找到自己地自行车，那该多好呀。每年中国有大量的自行车被偷，但是根本找不到，维权成本很大，甚至超过了一辆自行车本身，且警察叔叔也非常忙，找回来的自行车屈指可数，就算找回来了，甚至都没有人认领。目前呢市场的产品是很单一的，没有一个好用、便宜、稳定的系统性产品；要是能把gps、自动充电、视频拍摄等一整套系统集成的话，一个车辆状态监控产品呢，那简直是完美中的完美了。我自己又是一个科技热爱者，深刻爱着这个行业，和手头的工作，导航控制出身，有丰富的科研经验和能力了。我希望能真正将科技用于实现自身的价值以及能够赚钱，赚到钱以后，做更多更好的项目。也只有创业这一条路，这条最难的路才是心中最想要的，也是性价比对于自己来说是最高的一个。你能理解吗？</p><h1 id="项目概要"><a href="#项目概要" class="headerlink" title="项目概要"></a>项目概要</h1><p>0.5 页</p><p>卖什么产品，提供什么服务，产品的构成，产品的主要特点（技术点），受众，以及未来规划。</p><ol><li>自行车电子防盗系统</li><li>主要为硬件产品，以及配套的软件服务</li><li>硬件包含多款：摄像头、导航定位系统、5G移动通信模块，以及一个微型监测控制单元。<ol><li>摄像头：拍照取证</li><li>卫星导航定位系统：粗略定位查找车辆</li><li>5G移动通信模块：向手机传递信息</li><li>陀螺仪、加速度计：监测车辆震动、摔倒</li><li>微型发电机：自动充电，解决续航问题</li><li>断开报警锁：锁被强行破拆，会报警</li><li>UWB 短距离定位：精确查找物体</li></ol></li><li>软件：手机app。提示、报警、定位、录像等监测功能。</li><li>产品提供完整的自行车监控报警服务，一旦车辆有异常，会及时通过手机通知用户。</li><li>受众：喜欢短距离代步的自行车爱好者，经常要锁车购物、吃饭等情况。</li><li>未来规划：智能门锁、电动车防盗系统等。</li><li>手机靠近自动连接，走了自动锁车，锁车系统和充电系统组合，线缆遭到破坏就会立刻报警</li><li>符合一整个低碳环节</li></ol><p>&emsp;&emsp;制作一个低成本的自行车智能电子防盗系统，系统中包含摄像头、导航定位系统、5G移动通信模块，以及一个微型监测控制单元。主要服务对象是喜欢骑中高档自行车，有短暂锁车防盗的需求客户。主要为硬件产品，以及配套的软件服务，硬件包含多款：摄像头、导航定位系统、5G移动通信模块，以及一个微型监测控制单元。 软件：手机app。提示、报警、定位、录像等监测功能。产品提供完整的自行车监控报警服务，一旦车辆有异常，会及时通过手机通知用户。手机靠近自动连接，走了自动锁车，锁车系统和充电系统组合，线缆遭到破坏就会立刻报警。其中：摄像头：拍照取证；卫星导航定位系统：粗略定位查找车辆；5G移动通信模块：向手机传递信息；陀螺仪、加速度计：监测车辆震动、摔倒；微型发电机：自动充电，解决续航问题；断开报警锁：锁被强行破拆，会报警；UWB 短距离定位：精确查找物体。受众：喜欢短距离代步的自行车爱好者，经常要锁车购物、吃饭等情况。应用前景广阔：智能锁、电动车防盗系统等。符合一整个低碳环节。</p><h1 id="市场调研"><a href="#市场调研" class="headerlink" title="市场调研"></a>市场调研</h1><p>1页</p><ol><li>偷盗犯罪率</li><li>被偷后的心理</li><li>共享单车的优势和劣势</li><li>市面上的竞品</li><li>市场的需求</li></ol><h1 id="产品方案"><a href="#产品方案" class="headerlink" title="产品方案"></a>产品方案</h1><p>3页</p><p>技术路线：主要硬件功能、软件（客户端）功能</p><ol><li>详述产品的构成，每个单元的具体功能<ol><li>得有产品大致得结构图</li></ol></li><li>每个模块的具体技术路线，核心竞争力</li><li>打造什么样的产品，产品的路线是什么</li><li>产品的迭代，未来的服务</li></ol><p>产品设计转绑定功能</p><h1 id="经营目标"><a href="#经营目标" class="headerlink" title="经营目标"></a>经营目标</h1><p>2页</p><h2 id="品牌概念"><a href="#品牌概念" class="headerlink" title="品牌概念"></a>品牌概念</h2><ol><li>零件<ol><li>降低被偷，爱上骑车，低碳生活，降低犯罪率，减轻警察负担，增加汽车销售</li><li>为学生提供打折服务</li></ol></li><li>整车<ol><li>自己做</li><li>和车企合作</li></ol></li></ol><h2 id="客户人群"><a href="#客户人群" class="headerlink" title="客户人群"></a>客户人群</h2><ol><li>全套系统：中高端自行车爱好者，能负担整套费用</li><li>喜欢通勤的人，短距离，经常临时停车用户</li><li>智能自行车爱好者，整车</li></ol><h2 id="营销策略"><a href="#营销策略" class="headerlink" title="营销策略"></a>营销策略</h2><ol><li>噱头：让人偷，能查，直接放在马路边，给人偷，没人有能力偷走。</li><li>自行车展。新能源车有新能源车的车展，自行车也有自己的智能车展</li><li>新媒体宣传：抖音、小红书、小程序、网站</li></ol><h2 id="市场计划"><a href="#市场计划" class="headerlink" title="市场计划"></a>市场计划</h2><ol><li>产品是要面世，要卖的，你的计划是什么要明确。</li><li>时间节点，做什么研发，做什么产品</li><li>每个产品出来，你的市场是什么，面向什么对象</li></ol><p>第一阶段：造一辆车（研发）</p><p>第二阶段：推送产品</p><p>第三阶段：扩展市场</p><p>怎么拓展，时间轴</p><p>合作</p><h2 id="投资与回报"><a href="#投资与回报" class="headerlink" title="投资与回报"></a>投资与回报</h2><p>预算多少钱，希望投资多少钱啊</p><p>？？？</p><ol><li>分门别类计算投资、分阶段投资；</li><li>产出：分阶段的产品，计划与产出</li></ol><h1 id="管理方案"><a href="#管理方案" class="headerlink" title="管理方案"></a>管理方案</h1><p>2页</p><h2 id="人事制度"><a href="#人事制度" class="headerlink" title="人事制度"></a>人事制度</h2><ol><li>团队介绍，目前就我一个人</li><li>人事架构、组织管理的结构的图</li><li>职务需求</li></ol><h2 id="风险预测"><a href="#风险预测" class="headerlink" title="风险预测"></a>风险预测</h2><h1 id="未来规划"><a href="#未来规划" class="headerlink" title="未来规划"></a>未来规划</h1><p>0.5页</p>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 防盗 </tag>
            
            <tag> 自行车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：STM32F103Cx最小系统设计</title>
      <link href="/posts/20240416b.html"/>
      <url>/posts/20240416b.html</url>
      
        <content type="html"><![CDATA[<h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#STM32F103Cx最小系统">工程实践导航</a></h1><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>&emsp;&emsp;STM32F103Cx 最小系统的设计。文章内容主要包含：设计指南、器件选型、实际设计、制作测试、归纳总结等。</p><p>&emsp;&emsp;STM32F103Cx 最小系统的设计原则是模块化，目的是方便验证、方便手动焊接、以及批量机器焊接、方便拆装更换，方便维修查找 PCB 的故障。相比于传统的最小系统设计，将传统的最小系统分化为两块板子，分别命名为最小系统核心板和最小系统底板，最小系统核心板，集成了最核心的部分，以及小型化、模块化，仅包含微控制器、晶振电路、控制器滤波电容电路、电源指示灯、全引脚板对板微型连接器；其中本来包含 LDO 电源电路，但是研究发现，对于不同的电源，LDO 的需求不同，无法找到通用合适的 LDO，尤其在电源容量紧张的场景，所以电源模块单独成模块设计，方便更换，但是最小系统核心板必须用独立的电源模块供电，即某电源模块给该核心板供电后，不能给其他模块使用。最小系统底板，也是必须配套的，和一般的底板有所不同，底板包含一些直插的器件和模块，主要是：核心板底座、USB接口、程序下载接口 JTGA、电源模块底座、2.54mm排插排母座、电源接线口等。最小系统底板提供对核心板核心功能的验证或使用：供电、下载程序、兼容洞洞板排针或排母等功能。即核心板和最小系统底板，以及电源模块构成市面上常见的最小系统。这样缺点当然是多了板对板连接器，尺寸和重量会些微增加，增加连接器等成本，但是用的都是手机电脑主板级别的连接器，尺寸和重量均很小。反而带了很多好处：1. 降低设计复杂度，小模块小模块的设计，比整板设计更容易。2. 缩短周期、提振信心。3. 方便焊接、维修。不用再重新做一整块板子，用哪个焊哪个，坏哪个修哪个。4. 降低成本，方便更换以及复用。5. 便于升级，可以重新设计某一个模块，以此增加它的性能。</p><h1 id="最小系统核心板"><a href="#最小系统核心板" class="headerlink" title="最小系统核心板"></a>最小系统核心板</h1><h2 id="设计指南和器件选型"><a href="#设计指南和器件选型" class="headerlink" title="设计指南和器件选型"></a>设计指南和器件选型</h2><p>&emsp;&emsp;主要依据元器件的手册、网上资料和个人经验总结设计指南，依据设计指南，选择合适低价的元器件。</p><h3 id="板对板连接器"><a href="#板对板连接器" class="headerlink" title="板对板连接器"></a>板对板连接器</h3><p>&emsp;&emsp;电流要求：</p><ol><li>单片机最大电流为 150mA</li><li>led 最大电流为 20mA</li></ol><p>&emsp;&emsp;所以连接器应该选择电流能力大于等于 0.3A的。</p><ol><li>板对板连接器 <a href="https://item.taobao.com/item.htm?id=675307456019&amp;scene=taobao_shop&amp;skuId=5028842742268&amp;spm=a1z10.1-c-s.w5003-25266276658.33.2cc66440jknhAW">SGD-05-M/F-020P-2X-G21</a> 单个引脚的最大电流为 0.5A。同时 3mm 的高度是最低的，价格最便宜的，只在淘宝卖，嘉立创无，不可用其他连接器替代，但是客服提供图纸和 3D 模型。2024年4月23日，单个的价格为 1 元。</li></ol><h3 id="双晶振"><a href="#双晶振" class="headerlink" title="双晶振"></a>双晶振</h3><p>&emsp;&emsp;STM32微控制器通常外接两个晶振，分别是低速晶振（32.768 kHz）和高速晶振（通常为8 MHz）。这两个晶振的作用如下：</p><ol><li>低速晶振（LSE）：提供外部低速时钟，通常用于实时时钟（RTC）电路的时钟源，以及为低功耗模式下的计时提供服务。如果设计中不需要RTC功能，可以选择不焊接此晶振。低速晶振的启动时间比高速晶振短，但在校准之后的时钟频率精度相对较差。</li><li>高速晶振（HSE）：提供外部高速时钟，用于生成更精确的系统时钟。这个时钟源对于需要高稳定度时钟的应用来说是非常重要的。高速晶振的频率通常为8 MHz，但可以根据产品需求选择其他频率，只需注意倍分频的设置。</li></ol><div class="note danger modern"><p>结论：两个晶振都要</p></div><p>&emsp;&emsp;晶振选型可参考本博客文章<a href="./20240416a.html#无源晶振详解">无源晶振详解</a>。</p><h3 id="低速晶振选型"><a href="#低速晶振选型" class="headerlink" title="低速晶振选型"></a>低速晶振选型</h3><p>&emsp;&emsp;设计无源晶振，手册第54页要求如下：</p><ol><li>CG 和 CL 选用高质量陶瓷电容，容值在 5pF-15pF。</li><li>晶振的选择上，频率为负载电容要小于等于 7pF，不要选择 12.5pF。</li><li>电路板典型的杂散电容值为：2-7pF，我们用 4pF 计算。</li></ol><p>&emsp;&emsp;晶振选型方案如下：</p><p>典型的，常见 MC-306、MC-405、MC-406 的这种 32.768 kHz 晶振不是不能选择，负载电容典型值为：12.5 pF，但是需要定制，常见为 6pF、7pF、9pF 和 12pF，所以要注意选择合适的负载电容值。尺寸还有更小的 MC-146、MC-146，以及更小的 FC-135、FC-145、FC-255。还有更小的 FC-12M，但是不是主流。</p><p>最终选择 <a href="https://item.taobao.com/item.htm?abbucket=12&amp;id=753850636251&amp;ns=1&amp;skuId=5371113711623&amp;spm=a21n57.1.item.326.1a3f523cwPiWmR">FC-135 32.768KHz ±20ppm 7pF</a>，因为在淘宝和嘉立创上常见，同时 AN2867 手册中也推荐了 FC-135。2024年4月23日价格为 0.5元，运费 2 元。</p><p>&emsp;&emsp;电容计算得到典型值是 6pF，范围是 0 - 10 pF。选择精度高的：5%。预留一个电阻位，控制驱动电流，默认先焊接 0 Ω。</p><h3 id="高速晶振选型"><a href="#高速晶振选型" class="headerlink" title="高速晶振选型"></a>高速晶振选型</h3><p>&emsp;&emsp;8MHz，需要查看 AN2867 手册。具体设计还挺麻烦的，这里进行简化：</p><ol><li>Load capacitance 负载电容。（控制震荡频率）<ol><li>这个晶振是工作晶振，不需要低功耗，手册对负载电容的大小无限制，这样 CG 和 CL 相比之前的低速晶振设计，容值就大一点，拉升频率能力更弱（期望和实际负载电容偏差时，频率变化越小）。</li><li>手册要求电容 CG 和 CL 容值在 5pF-25pF之间。</li><li>取杂散电容为 4pF，则匹配晶振的负载电容范围是 6.5-16.5 pF。</li></ol></li><li>Oscillator transconductance 振荡器跨导。（控制震荡稳定）<ol><li>为了使振荡开始并达到稳定相位，振荡器必须提供足够的增益来补偿回路损耗并为振荡积累提供能量。</li><li>振荡回路临界晶体增益 $g<em>{mcrit}$。$g</em>{mcrit} = 4 \cdot ESR \cdot (2πF)^2 \cdot (C0 + CL)^2$。ESR 值查看手册。</li><li>最大临界晶体跨导 $g_m$ 由芯片 STM32 手册给出。</li><li>最后计算收益边际公式：$gain<em>{margin} = g_m / g</em>{mcrit}$，设计要求确保该值大于 5。</li><li>暂不继续深入。暂不考虑本点要求。</li></ol></li><li>Drive level and external resistor calculation 驱动电平和外部电阻的计算<ol><li>预留一个电阻位，控制驱动电流。焊接 0 Ω 电阻即可，具体计算暂不了解。</li></ol></li><li>Crystal pullabilty 晶体的波动性，也被称为晶体灵敏度<ol><li>暂不考虑。</li></ol></li><li>PCB design guidelines PCB设计指南<ol><li>离芯片近，具体是什么近呢？中间不要有其他元器件，即芯片-晶振电路-其他元器件。</li><li>电容对称</li><li>电容还是晶振更靠近芯片，无这种说法。</li><li>不能太多测试点</li><li>正面 GND 包裹晶振电路，并通过多过孔连接 PCB 背后的 GND。背后的 GND 要求完全覆盖晶振电路，且不连接总 GND，而是通过正面的包裹的 GND 线条一个端点连接总 GND。</li><li>强烈建议晶振电路 PCB 区域应用保形涂层。特别是石英下方，以防止可能导致启动问题的潮湿，灰尘，湿度和极端温度。</li><li>如果使用金属封装的晶体，请勿将其连接到振荡器地。</li><li>高速信号线离晶体管电路保留间距，如 30 mils。</li></ol></li><li>焊接<ol><li>谨慎焊接，焊接是一个敏感的过程，特别是对于低频晶体。</li><li>温度过高会损坏 ESR。</li></ol></li></ol><p>&emsp;&emsp;晶振选型方案如下：</p><ol><li>扬兴科技 <a href="https://detail.tmall.com/item.htm?abbucket=12&amp;id=747734347715&amp;ns=1&amp;spm=a21n57.1.item.142.1a3f523cwPiWmR&amp;skuId=5157386133646">YSX321SL 3225 8M 12PF 10PPM</a>。价格最便宜，2024年4月23日单价0.5，无运费。</li><li>计算 CG 和 CL 容值电容为：16pF。</li></ol><h3 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h3><p>&emsp;&emsp;LED 没有什么电气的特殊要求。选择价格便宜的、有规格书的。 LED 注意额定电压和额定电流即可。XL-1608 系列电阻价格最便宜，在嘉立创上可购买。</p><div class="table-container"><table><thead><tr><th>型号</th><th>颜色</th><th>100+价格</th><th>1000+价格</th><th>链接</th><th>额定参数</th><th>3.3V限流电阻</th><th>5V限流电阻</th></tr></thead><tbody><tr><td>XL-1608UWC-04</td><td>白</td><td>0.035</td><td>0.028</td><td><a href="https://item.szlcsc.com/1051417.html">链接</a></td><td>5mA 2.6-3.0V</td><td>60-140Ω</td><td>400-400Ω</td></tr><tr><td>XL-1608SURC-04</td><td>红</td><td>0.029</td><td>0.023</td><td><a href="https://item.szlcsc.com/1051407.html">链接</a></td><td>20mA 2.0-2.4V</td><td>65-133.3Ω</td><td>130-150Ω</td></tr><tr><td>XL-1608UYC-04</td><td>黄</td><td>0.043</td><td>0.035</td><td><a href="https://item.szlcsc.com/1051412.html">链接</a></td><td>20mA 1.9-2.3V</td><td>50-70Ω</td><td>135-155Ω</td></tr><tr><td>XL-1608UBC-04</td><td>蓝</td><td>0.024</td><td>0.019</td><td><a href="https://item.szlcsc.com/1051416.html">链接</a></td><td>20mA 2.7-3.3V</td><td>0-30Ω</td><td>85-115Ω</td></tr><tr><td>XL-1608UGC-04</td><td>翠绿</td><td>0.027</td><td>0.022</td><td><a href="https://item.szlcsc.com/1051413.html">链接</a></td><td>20mA 2.7-3.3V</td><td>0-30Ω</td><td>85-115Ω</td></tr></tbody></table></div><p>2024年4月24日。其中 1608 代表封装尺寸，最后 04 或者 06 代表高度。C 前面的字母代表颜色。限流电阻计算的是理论值，电阻也是有额定最大功率的，在几十W到几百W之间，不同型号功率不一样。工作电流不用满额定值上运行，这样太亮了，一般可以是几 mA 的电流，所以电阻计算的在几百 Ω，常用默认选择最大 1KΩ 即可。另外考虑芯片 IO 引脚最大电流驱动力：25mA，电压 4v，所以用芯片控制 LED 的，也要用电源为 3.3V 的，不要用 5V 的驱动电压，以免LED损坏短路时，损坏芯片。电阻选择大于 200Ω，先默认 1 KΩ。</p><h3 id="电源模块"><a href="#电源模块" class="headerlink" title="电源模块"></a>电源模块</h3><p>&emsp;&emsp;查阅手册：</p><ol><li>单片机的最大工作电流为 150mA。</li><li>单片机电源电压范围为 2.4-3.6V，典型值为3.3V。</li><li>普通 I/O 接口输入电压范围为 0-5V，能充分兼容 5V 传感器。</li><li>LED 最大电流为 20mA，按照 20mA 计算。</li></ol><p>所以核心板按照负载 200mA电流计算。常见的电源电压为 5V 和 3.3V，输入和输出电压压差为 0 - 1.7V，开关稳压的稳压压差一般大于 2V，所以我们选择一款线性稳压 LDO，希望能在电源电压为 5V 和 3.3V时均能输出合适的电压供核心板工作，对于 LDO，我们的需求是：</p><ol><li>LDO 压降不能超过 3.3 - 2.4 = 0.9V。越小越好，越小效率越高。</li><li>LDO 最大电流不能低于 300mA。</li><li>5V输入，3.3V输出的情况下，温升不能超过50℃。计算温升系数要低于 50 ÷ ((5-3.3)*0.2) = 147.06 ℃/W 左右。</li><li>满足以上前提下选择尺寸更小的 LDO 型号和封装。</li></ol><p>这很难筛选，经常调查，LDO 的电流能力越大，对散热要求越高，尺寸越大，大一点常见的封装为 SOT-223-3，压降也随之增大，常见至少为 1.1V，无法适应 3.3V 的工作电压；LDO 尺寸越小，常见最小封装为 SOT-23-5，压降随之减小仅有几百 mV，但是电流能力大大降低，散热能力大大减弱，温升系数达到 200℃/W 以上，无法适应 5V 的工作电压，在该电压下发热将超标，甚至损坏电器。</p><p>虽然这个设计电源只供核心板使用，本想集成在核心板上，不得已单独执着电源模块。这样反而有好处：1. 适应不同的电源，不同的电源用不同的电源模块。2. 类似其他的核心板电源需求，也可以使用这种电源模块。</p><ol><li>5V 电源<ol><li><a href="https://item.szlcsc.com/5967328.html">AMS1117-3.3</a>，满足要求，为 150 ℃/W。2024年4月24日且价格便宜为 10+：0.24/个 100+：0.21/个。压降典型值为 1.3V。<ol><li>满足 3.8 - 5V电源的需求。</li></ol></li></ol></li><li>3.3V 电源<ol><li>可以直连<ol><li>2.5V - 3.5V 的电压可以直连</li></ol></li><li><a href="https://item.szlcsc.com/84106.html">ME6211C33M5G-N</a>，最大压降为 260mV，满足设计要求，具体参考本博客文章<a href="./20240416a.html#LDO">基础元器件-LDO</a>。2024年4月24日价格：10+：0.3 100+：0.25。</li></ol></li></ol><p>后面会分为两个电源模块进行设计，5V的可以用在最小系统底板上，3.3V的可以用在 1S 锂电 3.7V 电压电源的四旋翼上。</p><h2 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h2><p>&emsp;&emsp;查阅手册：</p><ol><li>STM32F103Cx 总共 48 个引脚，其中电源正极和电源负极总共 4 对，即 8 个引脚；晶振占用 4 个引脚；因此最少引脚数为 48-8-4+2=38个，两个2x10pin的板对板连接器即可。</li><li>除了 USB 以外全是低速信号线，PA11 和 PA12 固定作为 USB的引脚。</li><li>除了 BOOT0 还有 BOOT1。BOOT1 的引脚名为 PB2，PB2 固定作为 BOOT1 功能。</li><li>正好空了两个引脚，和 3.3V、GND 对应，防止板子插反方向，插反的话，核心板不工作，电源指示灯不亮。</li></ol><h2 id="PCB"><a href="#PCB" class="headerlink" title="PCB"></a>PCB</h2><ol><li>准备好元器件手册</li><li>每个元器件都应该有 3D 模型</li></ol><p>布局、走线设计思路：</p><ol><li>查看芯片手册，了解各个引脚的功能。<ol><li>引脚复用，多个引脚构成一组功能，应该连续走线，不要分开成两个底座走线<ol><li>上下拆分较为合理分配：29-7一组，8-28一组。</li></ol></li><li>区分高速信号线和低速信号线。优先走高速信号线，只有 USB 是高速信号线。</li></ol></li><li>晶振电路设计，额外增加 GND 包裹，用来屏蔽干扰。<ol><li>对于晶振走线等长，并没有很严格的要求，可以先更改网络名，跳过电阻，等长后在直线处替换电阻。</li></ol></li></ol><p>要求</p><ol><li>打板过孔最小内径为 0.3mm，最小外径为 0.4mm。</li></ol><p>设计过程：</p><ol><li>布局</li><li>联通走线</li><li>调整布局、更改线序</li><li>联通走线</li><li>调整丝印</li><li>设置原点，设置板子外形，更改板子形状</li><li>标注尺寸</li></ol><p>检查：</p><ol><li>是否 100% 联通</li><li>走线是否规范</li><li>电源检查、GND检查<ol><li>特别是线宽和过孔大小。</li></ol></li><li>元器件模型高度检查</li><li>间距检查，方便焊接</li></ol><p>额外工作</p><ol><li>添加丝印，如 logo、二维码</li><li>添加测试点<ol><li>电源正负极，加丝印</li><li>晶振输出（对于芯片是输入），加丝印</li></ol></li></ol><p>元器件 BOM</p><div class="table-container"><table><thead><tr><th>分类</th><th>描述</th><th>标号</th><th>封装</th><th>数量</th><th>供应商1</th><th>供应商2</th><th>价格</th><th>购买数量</th><th>支出</th></tr></thead><tbody><tr><td>贴片电容</td><td>100nF (104) 10% 50V</td><td>C1, C2, C3, C4</td><td>0603_C</td><td>4</td><td><a href="http://www.szlcsc.com/product/details_15331.html">嘉立创</a>0.014</td><td></td><td>0.056</td><td>0</td><td>0</td></tr><tr><td>贴片电容</td><td>6pF (6R0) 0.25pF 50V</td><td>C5, C6</td><td>0603_C</td><td>2</td><td><a href="http://www.szlcsc.com/product/details_38453.html">嘉立创</a>0.017</td><td></td><td>0.034</td><td>0</td><td>0</td></tr><tr><td>贴片电容</td><td>16pF (160) 5% 50V</td><td>C7, C8</td><td>0603_C</td><td>2</td><td><a href="http://www.szlcsc.com/product/details_1996.html">嘉立创</a>0.017</td><td></td><td>0.034</td><td>0</td><td>0</td></tr><tr><td>发光二极管</td><td>红灯 0603</td><td>D1</td><td>0603_LED_S1</td><td>1</td><td><a href="http://www.szlcsc.com/product/details_2659.html">嘉立创</a>0.035</td><td><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537/tb.1997196601.28.2f837484Q7YrnG&amp;id=732645214296">淘宝</a>0.02+3</td><td>0.035</td><td>100</td><td>5</td></tr><tr><td>板对板连接器</td><td>M 20p 2x10p 0.5mm 7.2-3.62-2.2mm 3mm 50V 0.5A 50mΩ -30-80℃</td><td>H1, H2</td><td>SGD-05-M-020P-22</td><td>2</td><td><a href="https://item.taobao.com/item.htm?id=675307456019&amp;scene=taobao_shop&amp;skuId=5028842742269&amp;spm=a1z10.1-c-s.w5003-25266276658.33.2cc66440jknhAW">淘宝</a>1+0.88</td><td></td><td>2</td><td>8</td><td>8.88</td></tr><tr><td>贴片电阻</td><td>0Ω (0R0) ±1%</td><td>R3, R4</td><td>0603_R</td><td>2</td><td><a href="http://www.szlcsc.com/product/details_21903.html">嘉立创</a>0.0067</td><td></td><td>0.0134</td><td>0</td><td>0</td></tr><tr><td>贴片电阻</td><td>1KΩ (1001) ±1%</td><td>R5</td><td>0603_R</td><td>1</td><td><a href="http://www.szlcsc.com/product/details_21904.html">嘉立创</a>0.0063</td><td></td><td>0.0126</td><td>0</td><td>0</td></tr><tr><td>ARM</td><td>STM32F103CBT6</td><td>U1</td><td>LQFP-48_19.6_393_58X11_SMD</td><td>1</td><td><a href="http://www.szlcsc.com/product/details_8796.html">嘉立创</a>9.83</td><td><a href="https://item.taobao.com/item.htm?abbucket=13&amp;id=678711305104&amp;ns=1&amp;skuId=5045356419703&amp;spm=a21n57.1.item.6.60c7523criexMT">淘宝</a>3.6</td><td>3.6</td><td>5</td><td>18</td></tr><tr><td>贴片晶振</td><td>32.768KHz ±20ppm 7pF</td><td>Y1</td><td>SMD-3215_2P FC - 135</td><td>1</td><td><a href="http://www.szlcsc.com/product/details_49622.html">嘉立创</a>1.56</td><td><a href="https://item.taobao.com/item.htm?abbucket=12&amp;id=753850636251&amp;ns=1&amp;skuId=5371113711623&amp;spm=a21n57.1.item.326.1a3f523cwPiWmR">淘宝</a>0.5+2</td><td>0.5</td><td>10</td><td>7</td></tr><tr><td>贴片晶振</td><td>8MHZ 12PF 10PPM</td><td>Y2</td><td>SMD-3225_4P</td><td>1</td><td><a href="http://www.szlcsc.com/product/details_2777872.html">嘉立创</a>0.88</td><td><a href="https://detail.tmall.com/item.htm?abbucket=12&amp;id=747734347715&amp;ns=1&amp;spm=a21n57.1.item.142.1a3f523cwPiWmR&amp;skuId=5157386133646">淘宝</a>0.5</td><td>0.5</td><td>10</td><td>5</td></tr></tbody></table></div><p>总计：0.56 + 0.034 + 0.034 + 0.02 + 2 + 0.0134 + 0.0126 + 3.47 +0.5 +0.5 + 0 = 7 元。</p><p>其他颜色也得买，白、红、黄、蓝、绿，都买一百个：5 * 2 + 3 = 13。母座也得买，12个共12元。13 + 12 + 8.8 + 18 + 7 + 5 + 0 = 63.8 元。</p><p>打板：20 元。总计：83.8 元。2024年4月25日打板，并购买元器件。</p><h1 id="检查入库"><a href="#检查入库" class="headerlink" title="检查入库"></a>检查入库</h1><h2 id="PCB检查"><a href="#PCB检查" class="headerlink" title="PCB检查"></a>PCB检查</h2><h1 id="焊接顺序"><a href="#焊接顺序" class="headerlink" title="焊接顺序"></a>焊接顺序</h1><p>&emsp;&emsp;3D 模型确定焊接顺序、实物确定焊接顺序。</p><h1 id="电源模块-1"><a href="#电源模块-1" class="headerlink" title="电源模块"></a>电源模块</h1><h2 id="AMS1117-3-3"><a href="#AMS1117-3-3" class="headerlink" title="AMS1117-3.3"></a>AMS1117-3.3</h2><h2 id="ME6211C33M5G-N"><a href="#ME6211C33M5G-N" class="headerlink" title="ME6211C33M5G-N"></a>ME6211C33M5G-N</h2><h1 id="最小系统底板"><a href="#最小系统底板" class="headerlink" title="最小系统底板"></a>最小系统底板</h1><h2 id="不同的-USB"><a href="#不同的-USB" class="headerlink" title="不同的 USB"></a>不同的 USB</h2><h2 id="不同的-JTGA"><a href="#不同的-JTGA" class="headerlink" title="不同的 JTGA"></a>不同的 JTGA</h2>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子电路 </tag>
            
            <tag> 单片机 </tag>
            
            <tag> 最小系统 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子电路：基础元器件</title>
      <link href="/posts/20240416a.html"/>
      <url>/posts/20240416a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href="https://www.stmcu.com.cn/Product/pro_detail/PRODUCTSTM32/product">官网</a>。</li></ol></div><h1 id="电子电路导航"><a href="#电子电路导航" class="headerlink" title="电子电路导航"></a><a href="./20240412a.html#基础元器件">电子电路导航</a></h1><h1 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h1><p>&emsp;&emsp;LED 在电路上是必须加限流电阻的。因为电源常见电压有 5V、3.3V。除了不同型号的 LED，不同颜色的 LED 的电压也存在差别，这要特别注意。</p><p>&emsp;&emsp;LED 就是发光二极管，在电气特性和普通的二极管相同，即伏安特性是曲线不是线性的。计算限流电阻很简单，考虑 LED 的典型电流和电压，计算限流电阻的大小，然后选择一个相近的标称电阻即可。即使计算电阻为 0，也不能省略限流电阻焊盘，因为实际电路板可能会与理论不同，或者更换 LED 的颜色。</p><p>&emsp;&emsp;所以手册上最重要的是看光电参数，在额定电流测试下的典型电压。</p><p>&emsp;&emsp;如果是用芯片引脚控制LED灯，由于芯片引脚驱动能力弱，采用芯片端拉低通电，拉高断电，即 LED 接 电源正极而不是地。</p><p>&emsp;&emsp;电源电压不能无限升高，一般就到 5V了。电压越高，限流电阻的功率越大，发热越大。</p><p>&emsp;&emsp;限流电阻还需要考虑芯片引脚的电流承受能力。</p><p>&emsp;&emsp;LED 额定最大电流一般为 20mA，但是一般不用这个电流，其中有个原因是，额定电流的亮度很高，指示灯的时候，亮度可以低一点，而带产品壳子，灯罩以后，亮度会降低，又需要拔高亮度减小电阻大小。而裸机一般考虑电阻图方便选在 1kΩ，因为经过计算一般在 100Ω以上。</p><p>&emsp;&emsp;LED 非常容易虚焊，导致接触不良，不够亮。表面材质容易机械损坏，不耐高温，要注意！</p><p>LED 用一个就好了，接通电源指示灯用。</p><h1 id="晶振"><a href="#晶振" class="headerlink" title="晶振"></a>晶振</h1><p>&emsp;&emsp;总是要区分有源晶振和无源晶振，而事实上，目前为止，我还没有使用过有源晶振。不讲的话容易弄混，其实很简单。</p><h2 id="无源晶振"><a href="#无源晶振" class="headerlink" title="无源晶振"></a>无源晶振</h2><p>&emsp;&emsp;无源晶振有两个引脚，不分正负极，内部就石英晶体，用来起振，起振电路来自芯片内部，都要配合两个合适的电容，以及中间的磁珠或者电感。而另外一种有四个引脚，这种并是把外围所需要的电阻电容放进去了，还是无源的，其中两个引脚起固定作用，内部没有任何连接；这种晶振和一些有源晶振的封装有点像，购买时看仔细。</p><p>&emsp;&emsp;要根据数据手册，判断多的两个引脚是悬空还是接地，一般是接地，抗干扰。还要注意四个引脚的晶振的引脚顺序，到底哪两个引脚是晶振脚，不同的晶振可能是不同的。</p><h2 id="有源晶振"><a href="#有源晶振" class="headerlink" title="有源晶振"></a>有源晶振</h2><p>&emsp;&emsp;有源晶振就更好理解了，只用和控制器的晶振输入引脚，这一个引脚连接。它就是里面再集成了起振电路，需要单独供电，所以叫有源晶振，内部剖开就像集成电路一样。</p><p>有源晶振的设计不同，它的频率稳定性就不同，往往好于无源晶振，成本高适合高精度时钟要求。而消费级的，无源晶振够用了。</p><h1 id="无源晶振详解"><a href="#无源晶振详解" class="headerlink" title="无源晶振详解"></a>无源晶振详解</h1><h2 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h2><p>本文参考：<a href="https://www.genuway.com/3287.html">关于不需要匹配外接电容的无源晶振电路说明</a>。</p><ol><li>负载电容 CL（Load Capacitance）：准确地来说是期望负载电容，当实际负载电容越靠近负载电容，频率越接近标称频率，频偏越小。参看：<a href="https://www.bilibili.com/video/BV18M4y1V7ek/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【晶振的负载电容到底怎么选择？】</a>。</li><li>静态电容 $C_0$（Shunt Capacitance）：归为杂散电容，不可忽略，一般有不到1pF大小。</li><li>动态电容 $C_1$（Motional Capacitance）：很小，可以忽略，一般是 fF 级别。1 fF = 10e-3 pF。</li></ol><p>一般会在晶振的两个引脚上加入电容：</p><ol><li>CG是无源晶振振荡电路输入管脚到GND的总电容（包括外置的CG电容、微乎其微的晶振引脚两部分）；</li><li>CD是晶体振荡电路输出管脚到GND的总电容（包括外置的CD电容、微乎其微的晶振引脚两部分）；</li><li>CS是杂散电容，包括：无源晶振两个管脚之间的静态电容静态电容 $C_0$，IC芯片两个引脚的寄生电容，以及来自PCB的杂散电容。是其他电容的总和。</li></ol><p>为了让频偏很小，总电容要求如下：</p><script type="math/tex; mode=display">CL = \frac{CG \cdot CD}{CG + CD} + CS</script><p>一般的，我们取 CG 和 CD 为两个想等的电容，所以上式化为：</p><script type="math/tex; mode=display">CL = \frac{C_{L0}}{2} + CS</script><p>&emsp;&emsp;一般微控制器的手册有相应要求，按照手册实行即可。但是因为寄生电路的不确定性，在PCB实际设计中最好还是为CG/CD预留位置。例如 STM32F103x 的电路设计：<a href="https://www.stmcu.com.cn/Designresource/detail/document/696086">数据手册</a>第53-56页、<a href="https://www.st.com/content/ccc/resource/technical/document/application_note/c6/eb/5e/11/e3/69/43/eb/CD00221665.pdf/files/CD00221665.pdf/jcr:content/translations/en.CD00221665.pdf">电路设计参考</a>。具体的设计过程可以查看我的博客<a href="./20240416b.html">STM32最小系统设计</a>。</p><p>&emsp;&emsp;PCB走线、布局等的杂散电容，以及温漂等因素，导致了频偏，所以长时间 RTC 实时时钟会偏差。芯片的时钟基准就来自晶振。分频或者倍频后按照频率基准运算干活。</p><h1 id="LDO"><a href="#LDO" class="headerlink" title="LDO"></a>LDO</h1><p>&emsp;&emsp;线性稳压。原理：输出反馈电路给放大器，调节 PMOS 从而稳定电压。等效于滑动变阻器，压降产生的功率全部转化为热量。由于压差较小，功率较低，纹波较小，非常适合给功耗不高的芯片供电。</p><p>基础参数</p><ol><li>输入电压范围</li><li>输出电压</li><li>工作电流</li><li>纹波：电源的稳定性</li></ol><p>重要参数：</p><ol><li>结温，最大耐受温度一般为 125℃。质量差的只有85 ℃。</li><li>Junction-to-ambient thermal resistance 热阻参数，单位为 ℃/W。表示损耗功率转化为温升的系数。热阻参数与封装类型有极大关系，以及PCB布局有关，由手册给出的计算即可。若手册中无此参数，建议选择其他品牌和型号的 LDO。比如室温 25℃，输入电压5V，输出电压3.3V，电流为500mA，热阻为 90℃/W，则芯片温度将达到：25+90<em>((5-3.3)</em>0.5)=101.5℃，显然，即使没有超过额定电压和电流，温度可能会超过结温，损坏 LDO。</li><li>Dropout Voltage 压降。输入和输出的最小电压差，若想稳定输出电压值不变，输入电压必须大于 输出电压+压差。当输入电压小于这个值时，输出电压会随着输入电压的降低而降低。手册不会给所有的电流下的压降，一般的，电流越大，压差就越高；所以在实际比手册电流低的情况下，保证压差满足即可。<ol><li>值得注意的是，芯片的额定电压为 3.3V，但是其工作电压是相对宽泛的，如 2.4V到3.6V。此时就可以利用LDO特性，接一个3.3V或者5V的电源都能正常工作。这也是使用LDO 的一个重要目的之一。</li></ol></li></ol><p>焊接注意：</p><ol><li>远离其他热源。</li></ol><h2 id="SOT-23-5封装"><a href="#SOT-23-5封装" class="headerlink" title="SOT-23-5封装"></a>SOT-23-5封装</h2><p>&emsp;&emsp;这种封装一般是低压差，小电流的时候，要不然散热根本跟不上，想都不用想，只能是低压差小电流。比如说 1S 锂电，电压为 3.7V，稳压到 3.3V。温升计算大约公式为：$0.5 \cdot I \cdot 温升系数$。这种封装温升系数在 200 出头，最多 300 ℃/W。按照 升温50摄氏度。50÷300÷0.5=0.33A，大概300多mA的电流也能承受。此时即使没有温升系数也可选购。</p><h3 id="德州仪器"><a href="#德州仪器" class="headerlink" title="德州仪器"></a>德州仪器</h3><div class="table-container"><table><thead><tr><th>型号</th><th>最大电流</th><th>压降</th><th>温升系数℃/W</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td><a href="https://www.ti.com/cn/lit/gpn/tps709">TPS70933DBVR</a></td><td>150mA</td><td>1.4 V</td><td>212.1</td><td>5+：1.5 50+：1.18</td><td><a href="https://item.szlcsc.com/90527.html">链接</a></td></tr><tr><td><a href="https://www.ti.com/cn/lit/gpn/tlv755p">TLV75533PDBVR</a></td><td>0.5A</td><td>238-325 mV</td><td>231.1</td><td>5+：1.5 50+：1.2</td><td><a href="https://item.szlcsc.com/391018.html">链接</a></td></tr><tr><td><a href="https://www.ti.com/cn/lit/gpn/tlv757p">TLV75733PDBVR</a></td><td>1A</td><td>475-650 mV</td><td>231.1</td><td>5+：1.42 50+：1.16</td><td><a href="https://item.szlcsc.com/493903.html">链接</a></td></tr></tbody></table></div><p>压降考虑的是输入电压在 2.5V 到额定最大电压之间，电流为最大额定电流。注意：输入电压越小，压降越大、输出电流越大，压降越大。价格2024年4月24日。</p><h3 id="MICRONE-南京微盟"><a href="#MICRONE-南京微盟" class="headerlink" title="MICRONE(南京微盟)"></a>MICRONE(南京微盟)</h3><div class="table-container"><table><thead><tr><th>型号</th><th>最大电流</th><th>压降</th><th>温升系数℃/W</th><th>价格</th></tr></thead><tbody><tr><td><a href="https://item.szlcsc.com/84106.html">ME6211C33M5G-N</a></td><td>500mA</td><td>260 mV</td><td>没给</td><td>10+：0.3 100+：0.25</td></tr></tbody></table></div><p>压降为电流是200 mA。价格2024年4月24日。</p><h3 id="RICHTEK-立锜"><a href="#RICHTEK-立锜" class="headerlink" title="RICHTEK(立锜)"></a>RICHTEK(立锜)</h3><div class="table-container"><table><thead><tr><th>型号</th><th>最大电流</th><th>压降</th><th>温升系数℃/W</th><th>价格</th></tr></thead><tbody><tr><td><a href="https://item.szlcsc.com/16332.html">RT9193-33GB</a></td><td>300mA</td><td>300 mV</td><td>250</td><td>5+：0.71 50+：0.59</td></tr><tr><td><a href="https://item.szlcsc.com/48778.html">RT9013-33GB</a></td><td>500mA</td><td>400 mV</td><td>250</td><td>5+：1.05 50+：0.85</td></tr></tbody></table></div><p>压降为电流是额定值。价格2024年4月24日。</p><h1 id="板对板连接器"><a href="#板对板连接器" class="headerlink" title="板对板连接器"></a>板对板连接器</h1><ol><li>HRS广濑连接器 <a href="https://www.hirose.com/zh/product/series?category=Board-to-Board-Board-to-FPC_Mezzanine-Connection">https://www.hirose.com/zh/product/series?category=Board-to-Board-Board-to-FPC_Mezzanine-Connection</a></li><li>TXGA连接器 <a href="https://www.txga.com/m18series/FBB04009-M.html">https://www.txga.com/m18series/FBB04009-M.html</a></li><li>得捷电子 JST 连接器，没卖的？<a href="https://www.jst-mfg.com/">https://www.jst-mfg.com/</a></li><li>松下连接器 <a href="https://device.panasonic.cn/ac/c/dl/cad/index.jsp?series_cd=1293">https://device.panasonic.cn/ac/c/dl/cad/index.jsp?series_cd=1293</a><ol><li>买过 AXK5F80547YG</li></ol></li><li>中国星坤 <a href="https://www.helloxkb.com/Home/Goods/goodsList/id/21.html">https://www.helloxkb.com/Home/Goods/goodsList/id/21.html</a><ol><li>这家店和国外的店，如松下，广濑价格没有优势</li><li>2024年4月20日官网很多器件手册和资料、图片都空的</li></ol></li><li>Molex莫仕 <a href="https://www.molex.com/zh-cn/products/connectors/board-to-board-connectors">https://www.molex.com/zh-cn/products/connectors/board-to-board-connectors</a></li><li>YXT(益鑫通) <a href="http://www.yxt-pretech.com/官网上不给图纸，不予考虑。">http://www.yxt-pretech.com/官网上不给图纸，不予考虑。</a></li><li>其他<ol><li><a href="https://www.digikey.cn/">https://www.digikey.cn/</a></li></ol></li><li>淘宝这家，官网垃圾，但是客服给力啊，资料都给、价格便宜：深圳山谷道连接器。</li></ol><p>连接器很难具有完全替代性。因为引脚一样，但是固定孔可能不同。配对口可能不同。</p><p>常见类型</p><p>最少10pin（2x5）（没卖的）。0.8mm <em> 5mm（引脚</em>组装高度）</p><p>0.5mm<em> 2、0.5mm</em>3mm，QFP 封装芯片引脚的间距就是 0.5mm。</p><p>根据计算，这个单片机 48 个引脚，去除电源总计9个，和4个晶振引脚，总计35个，再额外加至少一对电源，所以 用 20 pin 用两个够用。</p><h2 id="20pin-05mm"><a href="#20pin-05mm" class="headerlink" title="20pin 05mm"></a>20pin 05mm</h2><ol><li>深圳山谷道连接器<ol><li>定位孔 2 个</li><li>安装有方向</li><li>5.2 1.6 2  4.6 3.6</li></ol></li><li>松下<ol><li>无</li><li>安装有方向</li><li>公母推荐焊盘不同</li></ol></li></ol><p>本来还想兼容多种座子的，确实有工作量，且宽度有不同，工作量大，没必要。这次就用 山谷道。</p><p>连接器有个很容易出错的问题，就是镜像问题。一旦搞错，会出现板子的方向问题出错、线序出错等严重低级错误。特别是是否对称。设计准则是：</p><ol><li>原理图上公母引脚1to1，2to2···</li><li>这个好像是对称的，即旋转180°仍然能放进去，尊崇手册里的方向，即装配好是固定点重合</li><li>PCB板画好箭头方向，重合即可。</li><li>母座为顺序，改公座的封装引脚顺序。</li></ol><p>连接器接线准则：</p><ol><li>芯片引脚复用，即除了基本普通的IO口，还复用其他值，经常存在几个引脚成对复用。<ol><li>相邻的同符号脚可能存在同功能组（如 IIC），相邻边中间隔了电源也算相邻。如 PA3、PA4。</li><li>相邻的不同符号脚不存在同功能组，如PA8、PB0。</li><li>成对复用应优先保证等长。</li></ol></li><li>观察发现，芯片不用旋转45°，而是横竖中间拆分比较合适，而上下结构连接器，正好覆盖两个角，像个宝盖头一样。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 电子电路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子元器件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子电路：STM32单片机</title>
      <link href="/posts/20240412b.html"/>
      <url>/posts/20240412b.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2befebcf3ef2f32d8fcdb1fb115efdec333d79186953f00e8d1d1dc558fa8ff4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 电子电路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 微控制器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子电路导航</title>
      <link href="/posts/20240412a.html"/>
      <url>/posts/20240412a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#电子电路">文章导航总览</a></h1><h1 id="电子元器件"><a href="#电子元器件" class="headerlink" title="电子元器件"></a>电子元器件</h1><h2 id="基础元器件"><a href="#基础元器件" class="headerlink" title="基础元器件"></a><a href="./20240416a">基础元器件</a></h2><h1 id="意法半导体"><a href="#意法半导体" class="headerlink" title="意法半导体"></a>意法半导体</h1><h2 id="STM32单片机"><a href="#STM32单片机" class="headerlink" title="STM32单片机"></a><a href="./20240412b.html">STM32单片机</a></h2>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日程表：2024年04月</title>
      <link href="/posts/20240411a.html"/>
      <url>/posts/20240411a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#2024年4月">文章导航总览</a></h1><h1 id="2024年4月11日"><a href="#2024年4月11日" class="headerlink" title="2024年4月11日"></a>2024年4月11日</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>运动1小时</p>            </div><ul><li>[ ] 四旋翼发板、元器件购买</li></ul><div class='checkbox red'><input type="checkbox" />            <p>写一篇阅读论文的博客</p>            </div><details class="folding-tag" blue><summary> 日程表 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11点54分-16点15分</p></div></div><div class='timeline-item-content'><ol><li>四旋翼资料查找</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>17点45分-19点03分</p></div></div><div class='timeline-item-content'><ol><li>四旋翼资料查找</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>20点48分-23点59分</p></div></div><div class='timeline-item-content'><ol><li>微信小程序</li></ol></div></div></div>              </div>            </details><h1 id="2024年4月12日"><a href="#2024年4月12日" class="headerlink" title="2024年4月12日"></a>2024年4月12日</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>运动1小时</p>            </div><ul><li>[ ] 四旋翼发板、元器件购买</li></ul><div class='checkbox red'><input type="checkbox" />            <p>写一篇阅读论文的博客</p>            </div><details class="folding-tag" blue><summary> 日程表 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>00点00分-02点35分</p></div></div><div class='timeline-item-content'><ol><li>微信小程序</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>09点13分-12点15分</p></div></div><div class='timeline-item-content'><ol><li>微信小程序</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>13点46分-18点53分</p></div></div><div class='timeline-item-content'><ol><li>四旋翼</li></ol></div></div></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 日程表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日程表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Doxygen</title>
      <link href="/posts/20240403a.html"/>
      <url>/posts/20240403a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#Doxygen">编程导航</a></h1><h1 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h1><p>&emsp;&emsp;doxygen是非常重要的代码阅读工具。按照一定的规范书写注释，能够快速帮助我们阅读代码。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>&emsp;&emsp;参考这个<a href="https://www.bilibili.com/video/BV1ZE411F7kW/?p=4&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【AXin带你学Doxygen 生成文档超简单！】</a>视频学习基本语法。</p><p>&emsp;&emsp;实体，是指函数、变量等对象。是我们要注释的对象。</p><p>&emsp;&emsp;注释的格式有很多种。统一采用 C++ 的注释格式，比较熟悉方便。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 注释内容</span></span><br></pre></td></tr></table></figure><p>为了方便阅读，不省略参数标志。</p><h1 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h1><h2 id="brief"><a href="#brief" class="headerlink" title="brief"></a>brief</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @brief 简要的描述</span></span><br></pre></td></tr></table></figure><h2 id="details"><a href="#details" class="headerlink" title="details"></a>details</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @details 详细的描述</span></span><br></pre></td></tr></table></figure><h2 id="see"><a href="#see" class="headerlink" title="see"></a>see</h2><p>&emsp;&emsp;当函数名和其他函数名一致时，点击生成的 doxygen 网页能够实现实现跳转。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @see [函数名]</span></span><br></pre></td></tr></table></figure><h2 id="param"><a href="#param" class="headerlink" title="param"></a>param</h2><p>&emsp;&emsp;当参数名和其他参数名一致时，生成的 doxygen 网页会高亮。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 函数注释</span></span><br><span class="line"><span class="comment">/// @param [参数名] 参数简述</span></span><br></pre></td></tr></table></figure><h2 id="return"><a href="#return" class="headerlink" title="return"></a>return</h2><p>&emsp;&emsp;当变量名和其他变量名一致时，点击生成的 doxygen 网页能够实现实现跳转。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @return [变量名]</span></span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>&emsp;&emsp;不同级别的提示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @note 记录</span></span><br><span class="line"><span class="comment">/// @attention  注意</span></span><br><span class="line"><span class="comment">/// @warning 警告</span></span><br></pre></td></tr></table></figure><h2 id="在实体之后注释"><a href="#在实体之后注释" class="headerlink" title="在实体之后注释"></a>在实体之后注释</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///&lt; 变量1注释</span></span><br><span class="line"><span class="comment">///&lt; 变量2注释</span></span><br></pre></td></tr></table></figure><h1 id="源文件和头文件"><a href="#源文件和头文件" class="headerlink" title="源文件和头文件"></a>源文件和头文件</h1><p>&emsp;&emsp;头文件存放了一些声明函数，起到接口作用。不同的源文件可能都会调用头文件里的函数，因此头文件具有一定的 “公共属性”。所以将简要的说明和必要的参数放在头文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @brief 函数注释</span></span><br><span class="line"><span class="comment">/// @param [参数名] </span></span><br><span class="line"><span class="comment">/// @return [变量名]</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;源文件中的函数是具体算法的实现，有时我们会更改算法，提示和说明就会产生变动。所以将详细的说明和提示放在源文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// @details 详细的描述</span></span><br><span class="line"><span class="comment">/// @see [函数名]</span></span><br><span class="line"><span class="comment">/// @note 注释 </span></span><br><span class="line"><span class="comment">/// @attention 注意 </span></span><br><span class="line"><span class="comment">/// @warning 警告 </span></span><br><span class="line"><span class="comment">///&lt; 变量1注释</span></span><br></pre></td></tr></table></figure><h1 id="生成方法"><a href="#生成方法" class="headerlink" title="生成方法"></a>生成方法</h1><p>&emsp;&emsp;用图形化界面生成。</p><h2 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h2><p>&emsp;&emsp;存放项目配置文件。</p><h2 id="Wizard：向导"><a href="#Wizard：向导" class="headerlink" title="Wizard：向导"></a>Wizard：向导</h2><p>&emsp;&emsp;基础配置。包含源文件地址、是否递归（所有文件夹检索）、输出文件夹等。</p><h3 id="工程"><a href="#工程" class="headerlink" title="工程"></a>工程</h3><p>&emsp;&emsp;一定要选择递归，检索所有子文件。</p><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><ol><li>一定要选择所有实体，要不然网页可能不会显示文件。</li><li>选择对应的编程语言。</li></ol><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>&emsp;&emsp;可以选择关闭 LaTex 文件输出。</p><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><p>&emsp;&emsp;选择 GraphViz，打上所有勾，需要安装 GraphViz 软件，就能自动绘制函数和文件调用关系图。</p><h2 id="Expert：专家"><a href="#Expert：专家" class="headerlink" title="Expert：专家"></a>Expert：专家</h2><p>&emsp;&emsp;高级配置。包含 Html 设置。是完包含 Wizard 中的设置，并大于 Wizard。</p><h3 id="工程-1"><a href="#工程-1" class="headerlink" title="工程"></a>工程</h3><p>&emsp;&emsp;可以设置语言为中文。</p><h3 id="Source-Browser"><a href="#Source-Browser" class="headerlink" title="Source Browser"></a>Source Browser</h3><p>&emsp;&emsp;源码设置。</p><ol><li>SOURCE_BROWSER：显示实体函数所在位置，这个要勾选。</li><li>INLINE_SOURCES；嵌入源码，不要勾选。太影响阅读了。</li></ol><h3 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h3><p>&emsp;&emsp;目录栏，横向换纵向：<code>DISABLE_INDEX</code> 和 <code>GRNERATE_TREEVIEW</code> 打勾。</p><h3 id="Dot语言"><a href="#Dot语言" class="headerlink" title="Dot语言"></a>Dot语言</h3><p>&emsp;&emsp;DOT语言是一种文本图形描述语言。我们用 GraphViz 软件。</p><p>DOT_PATH：dot.exe 文件的路径，在 GraphViz 软件安装的位置下的 bin 里。如果 GraphViz 已经添加了全局变量，这个就不用设置。</p><h2 id="Run：运行"><a href="#Run：运行" class="headerlink" title="Run：运行"></a>Run：运行</h2><p>&emsp;&emsp;运行和跳转网页。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Doxygen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/posts/20240330a.html"/>
      <url>/posts/20240330a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#个人笔记">编程导航</a></h1><h1 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h1><ol><li>汉字字符：<code>[\u4e00-\u9fa5]</code></li></ol><h1 id="前后字符"><a href="#前后字符" class="headerlink" title="前后字符"></a>前后字符</h1><h2 id="必须为"><a href="#必须为" class="headerlink" title="必须为"></a>必须为</h2><p>&emsp;&emsp;没找到，但是可以直接匹配呀，然后再整体替换，例如 <code>a123b 123</code> 替换为 <code>ab 123</code> 。</p><h2 id="不能为"><a href="#不能为" class="headerlink" title="不能为"></a>不能为</h2><ol><li>前面：<code>(?&lt;![A-Za-z0-9])n</code>。字母 n 前面不能为数字和字母。</li><li>后面：<code>n(?![A-Za-z0-9])</code>。字母 n 后面不能为数字和字母。</li></ol><h1 id="匹配字符不能为"><a href="#匹配字符不能为" class="headerlink" title="匹配字符不能为"></a>匹配字符不能为</h1><p>&emsp;&emsp;匹配非汉字且非英文字母：<code>[^\u4e00-\u9fa5a-zA-Z]</code>。</p><h1 id="删除编号"><a href="#删除编号" class="headerlink" title="删除编号"></a>删除编号</h1><p>&emsp;&emsp;删除编号：<code>#\s[0-9](\s|\.([0-9](\s|\.[0-9]\s)))</code></p><pre>"#\s[0-9](\s|\.([0-9](\s|\.[0-9]\s)))" => <a href="#learn-regex"><strong># 1 </strong></a>基本匹配=> #<a href="#learn-regex"><strong># 2.1 </strong></a>点运算符 `.`=> ##<a href="#learn-regex"><strong># 2.2.1 </strong></a>否定字符集</pre><p>变式：<code>#\s[0-9].(\s|([0-9](\s|\.[0-9]\s)))</code>，不规范的编号格式示例。</p><pre>"#\s[0-9].(\s|([0-9](\s|\.[0-9]\s)))" => <a href="#learn-regex"><strong># 1. </strong></a>基本匹配=> #<a href="#learn-regex"><strong># 2.1 </strong></a>点运算符 `.`=> ##<a href="#learn-regex"><strong># 2.2.1 </strong></a>否定字符集</pre><h1 id="匹配变量"><a href="#匹配变量" class="headerlink" title="匹配变量"></a>匹配变量</h1><p>&emsp;&emsp;在程序中，我们经常要批量修改变量，如变量 <code>n</code> 但是不想修改其他含有 n 字符的变量等其他符号元素，方法为：<code>\sn(?![a-z])</code></p><pre>"\sn(?![a-z])" => int<a href="#learn-regex"><strong> n</strong></a> = sizeof(nums); printf("Hello!\n"); if (n == 10){a = 0;}</pre><pre>"\(n(?![a-z])" => int n = sizeof(nums); printf("Hello!\n"); if <a href="#learn-regex"><strong>(n</strong></a> == 10){a = 0;}</pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言：进阶篇</title>
      <link href="/posts/20240328a.html"/>
      <url>/posts/20240328a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#进阶篇">编程导航</a></h1><h1 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h1><p>&emsp;&emsp;将不同类型的变量放到一个字符串里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27;a&#x27;</span>;    </span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span>(str, <span class="string">&quot;%d, %lf, %c&quot;</span>, a, b, c);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h1 id="动态内存分配"><a href="#动态内存分配" class="headerlink" title="动态内存分配"></a>动态内存分配</h1><p>&emsp;&emsp;malloc 函数是动态内存分配函数，使用数组和指针的时候可以用到。目的是，初始化数组时会占用一定的内存，而为了保证数组能兼容多种情况，初始化的长度往往很大，容易造成浪费，这时就可以利用动态内存分配函数，用多少给多少。但是分配的内存的数组用完了以后要及时清理，否则会堆积。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 引入标准库stdlib.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">// 或者引入库 malloc.h</span></span><br><span class="line"><span class="comment">// #include &lt;malloc.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分配动态内存</span></span><br><span class="line">    <span class="comment">//方法一</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = <span class="literal">NULL</span>,* q = <span class="literal">NULL</span>;</span><br><span class="line">    p = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(*p) * n);</span><br><span class="line">    <span class="comment">//方法二</span></span><br><span class="line">    <span class="comment">//int* p = malloc(sizeof(*p) * n);</span></span><br><span class="line">    <span class="comment">//signed int* q = NULL;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//地址备份</span></span><br><span class="line">        q = p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">signed</span> <span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *p = -i;</span><br><span class="line">            p = p + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印输出</span></span><br><span class="line">        p = q;</span><br><span class="line">        p = p + <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;指针指向的值为：%d\n&quot;</span>, *p);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//清理动态内存</span></span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;malloc error!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清理</span></span><br><span class="line">    p = <span class="literal">NULL</span>; q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><p>在清理动态内存的时候，就会把这一段内存里的所有数据初始化，指针地址不变。清理动态内存需要让指针指向最开始定义时的地址，所以对地址进行了备份。</p><p>增加了判断函数，判断是否成功分配内存空间，使程序更加严谨。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机原理</title>
      <link href="/posts/20240325a.html"/>
      <url>/posts/20240325a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#计算机原理">编程导航</a></h1><h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><p>&emsp;&emsp;程序运行时会产生一些中间变量，尤其是调用函数时，往往会调用多个函数，在此期间就会产生临时存储的参数，而 cpu 的内存是远远不够的，这个时候需要调用一个速度快且容量大的存储空间，此时运行内存就非常合适。栈就是存放货物仓库的意思。根据函数参数存储的需求，要求存储的数据是先进先出，后进后出的。这就很好理解了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言：基础篇</title>
      <link href="/posts/20240324a.html"/>
      <url>/posts/20240324a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#基础篇">编程导航</a></h1><h2 id="标准输入输出"><a href="#标准输入输出" class="headerlink" title="标准输入输出"></a>标准输入输出</h2><p>&emsp;&emsp;“stdio” 的全称是 “standard input/output”，表示标准输入输出，例如 “printf” 打印函数就需要该头文件，这是最基本的头文件，必须要调用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="return和exit"><a href="#return和exit" class="headerlink" title="return和exit"></a>return和exit</h1><p>&emsp;&emsp;exit 是强制结束运行的程序，清理进程。return 是返回函数，返回设定的参数，如果是在主函数里使用，返回值将给 exit。</p><h1 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h1><p>&emsp;&emsp;打印不同的类型的值，符号是不同的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//有符号整型</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> a = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//无符号整型</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> b = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;有符号整型：%d，无符号整型：%u\n&quot;</span>, a, b);</span><br><span class="line">    <span class="comment">//浮点型</span></span><br><span class="line">    <span class="type">double</span> c = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//字符型</span></span><br><span class="line">    <span class="type">char</span> d = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;浮点型：%lf，字符型：%c\n&quot;</span>, c, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="不要使用该方法"><a href="#不要使用该方法" class="headerlink" title="不要使用该方法"></a>不要使用该方法</h2><p>&emsp;&emsp;一行一行地打印，不要每次只打印几个字符。这样会拖慢整个运行效率，占用资源，并可能出现故障。禁止使用以下方法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组下标为：[&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;]\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正确的方法是转化为字符串，然后打印：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>] = <span class="string">&quot;数组下标为：[&quot;</span>;</span><br><span class="line">    <span class="type">char</span> temp[<span class="number">20</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d, &quot;</span>, a + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcat</span>(str, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcat</span>(str, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h1 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h1><p>&emsp;&emsp;字符变量是由 ASCII 码对应的二进制数存在内存里的。ASCII 码可以表示基础的符号、数字和字母，占一个字节；汉字的编码占两个字节。字符串就是字符数组，字符串结尾含一个结束符。</p><h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><p>&emsp;&emsp;操作字符串使用的库函数为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>这是必须添加的。</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><h2 id="易错点1"><a href="#易错点1" class="headerlink" title="易错点1"></a>易错点1</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> arry[] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p;</span><br><span class="line">    p = arry;</span><br><span class="line">    <span class="comment">//打印第一个和第二个元素</span></span><br><span class="line">    <span class="comment">//错误写法</span></span><br><span class="line">    <span class="comment">// printf(&quot;数组下标为：%u %u\n&quot;, *ans, *ans + 1);</span></span><br><span class="line">    <span class="comment">//正确写法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组下标为：%u %u\n&quot;</span>, *ans, *(ans + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="易错点2"><a href="#易错点2" class="headerlink" title="易错点2"></a>易错点2</h2><p>&emsp;&emsp;初始化两个指针容易出现错误，导致第二个不是指针而是变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//错误写法</span></span><br><span class="line">    <span class="comment">// signed int* p = NULL, q = NULL;</span></span><br><span class="line">    <span class="comment">//正确写法</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = <span class="literal">NULL</span>,* q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="数组和指针"><a href="#数组和指针" class="headerlink" title="数组和指针"></a>数组和指针</h2><h3 id="等价关系"><a href="#等价关系" class="headerlink" title="等价关系"></a>等价关系</h3><p>&emsp;&emsp;变量和数组是等价的。但是还是有细微区别。</p><p>&emsp;&emsp;考虑一种情况：</p><div class="table-container"><table><thead><tr><th>数学符号</th><th>代码变量</th><th>说明</th></tr></thead><tbody><tr><td>$A$</td><td>signed int A[] = { 1, 2, 3, 4, 5 }</td><td>给定矩阵</td></tr><tr><td>$N_A$</td><td>unsigned int N_A</td><td>元素个数（矩阵计算）</td></tr><tr><td>-</td><td>signed int* p = A</td><td>矩阵指针</td></tr><tr><td>$N_p$</td><td>unsigned int N_p</td><td>元素个数（指针计算）</td></tr></tbody></table></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> A[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//元素个数计算</span></span><br><span class="line">    <span class="comment">//矩阵法</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> N_A = <span class="keyword">sizeof</span>(A) / <span class="keyword">sizeof</span>(A[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//或者将 sizeof(A[0]) 写成 sizeof(signed int)，与数组元素变量定义保持一致即可</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵计算的元素个数为： %d\n&quot;</span>, N_A);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针法</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span>* p = A;</span><br><span class="line">    <span class="comment">//下面一行是错误的计算方法，因为用指针表示后，*p 指向数组当前元素，计算指针的长度就是当前元素的长度而不是数组的长度。</span></span><br><span class="line">    <span class="comment">//signed int N_p = sizeof(*p) / sizeof(signed int);</span></span><br><span class="line">    <span class="comment">//==========下面的方法也是错误的==========</span></span><br><span class="line">    <span class="comment">//对于指针指向的数组元素超出最后一个时，该地址内的值是随机的。只可能在像字符串数组中含结束符号的元素数组中使用。</span></span><br><span class="line">    <span class="comment">/*unsigned int N_p = 0;</span></span><br><span class="line"><span class="comment">    while (*p != NULL) &#123;</span></span><br><span class="line"><span class="comment">        p++;</span></span><br><span class="line"><span class="comment">        N_p = N_p + 1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    printf(&quot;指针计算的元素个数为： %d\n&quot;, N_p);*/</span></span><br><span class="line">    <span class="comment">//========================================</span></span><br><span class="line">    <span class="comment">//总结：指针法是无效的，这里就充分地看出了数组和指针地区别</span></span><br><span class="line">    <span class="comment">//正确地做法是用数组计算元素个数，作为参数进行传递</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h3 id="符号类型"><a href="#符号类型" class="headerlink" title="符号类型"></a>符号类型</h3><p>&emsp;&emsp;数组和指针本身都是无符号整型的。而定义数组时定义的类型是指定元素的类型。同理定义指针的类型是定义指针指向的地址内值的类型。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> C[<span class="number">2</span>] = &#123; <span class="number">-1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>* p = C;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组显示第一个元素为： %d，指针显示第一个元素为： %d\n&quot;</span>, C[<span class="number">0</span>], *p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><p>上面定义的数组是有符号整型，指针是无符号整型，指针指向的内存地址内的值不发生改变，但是指针无符号是没有负数的，所有都会显示一个正数。</p><h1 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h1><p>&emsp;&emsp;数组不能作为函数变量返回，但是可以返回数组的指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>* <span class="title function_">Array</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a, <span class="type">signed</span> <span class="type">int</span> b)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>* ans;</span><br><span class="line">    ans = Array(nums, n, target);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵计算的元素个数为： %d\n&quot;</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>* <span class="title function_">Array</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a, <span class="type">signed</span> <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//返回数组下标</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> C[<span class="number">2</span>] = &#123; i,j &#125;;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：Kali</title>
      <link href="/posts/20240319d.html"/>
      <url>/posts/20240319d.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Kali">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：移动端应用程序</title>
      <link href="/posts/20240319c.html"/>
      <url>/posts/20240319c.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#移动端应用程序">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：传感器物联网</title>
      <link href="/posts/20240319b.html"/>
      <url>/posts/20240319b.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#传感器物联网">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 传感器 </tag>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：图像识别</title>
      <link href="/posts/20240319a.html"/>
      <url>/posts/20240319a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#图像识别">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 图像识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：GNSS接收机</title>
      <link href="/posts/20240318zj.html"/>
      <url>/posts/20240318zj.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#GNSS接收机">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> GNSS接收机 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：PCB焊接技巧</title>
      <link href="/posts/20240318zk.html"/>
      <url>/posts/20240318zk.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#PCB焊接技巧">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCB焊接技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：云台机械臂</title>
      <link href="/posts/20240318zl.html"/>
      <url>/posts/20240318zl.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#云台机械臂">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 云台机械臂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：平衡车</title>
      <link href="/posts/20240318zm.html"/>
      <url>/posts/20240318zm.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#平衡车">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 平衡车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：遥控手柄</title>
      <link href="/posts/20240318zi.html"/>
      <url>/posts/20240318zi.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#遥控手柄">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 遥控手柄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：无人船</title>
      <link href="/posts/20240318zh.html"/>
      <url>/posts/20240318zh.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#无人船">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 无人船 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：无人机</title>
      <link href="/posts/20240318zg.html"/>
      <url>/posts/20240318zg.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#无人机">工程实践导航</a></h1><h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><p>&emsp;&emsp;这一版，采用32单片机、空心杯电机、MOS管驱动、蓝牙模块、图传（备用）、摄像头、陀螺仪加速度计、OLED、电源模块、电池。GPS，光流传感器。</p><h1 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h1><ul><li>[ ] 元器件选型</li><li>[ ] 原理图</li><li>[ ] 封装</li><li>[ ] 3D模型</li><li>[ ] PCB布局</li><li>[ ] PCB布线</li><li>[ ] 检查</li><li>[ ] 购买元器件</li><li>[ ] 检查</li><li>[ ] 发板</li><li>[ ] 检查</li></ul><p>最小系统连接器</p><h2 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h2><ol><li>STM32F103C8T6 参考：<a href="https://www.bilibili.com/video/BV1xY4y1J7jQ/?p=3&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810&amp;t=226">【【自制飞控】从零开始造四旋翼无人机新手教程——快速实现无人机硬件及STM32编程】</a></li><li>STC15W4K60S4，LQPF32参考：<a href="https://www.bilibili.com/video/BV1dk4y1P7oH/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810&amp;t=82">【15小四轴-1电路原理】</a>。</li><li>STM32F103C8T6 参考：<a href="https://www.bilibili.com/video/BV1Bj411j7Be/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810&amp;t=80">【从零开始自制无人机-04硬件绘制板框、电路原理图、pcb绘制】</a></li><li>STM32F103C8T6 参考：<a href="https://www.bilibili.com/video/BV1114y1v7cJ/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810&amp;t=12">【自学飞控成功起飞】</a></li></ol><h1 id="基础版"><a href="#基础版" class="headerlink" title="基础版"></a>基础版</h1><p>&emsp;&emsp;遥控版，起飞即可。</p><h2 id="器件选型"><a href="#器件选型" class="headerlink" title="器件选型"></a>器件选型</h2><p>STM32F103C8T6，价格是几块钱，很基础。</p><ol><li>STM32F103C8T6 最小系统</li><li>MOS 单向驱动</li><li>空心杯电机和桨叶</li><li>锂电</li><li>蓝牙</li><li>6050</li><li>电源模块</li></ol><div class="table-container"><table><thead><tr><th>分类</th><th>型号</th><th>封装</th><th>价格</th><th>链接</th><th>备注</th><th>数目</th><th>A模块</th><th>B模块</th></tr></thead><tbody><tr><td>单片机</td><td>STM32F103CBT6</td><td>LQFP-48</td><td>3.63、3.47(0417)</td><td><a href="https://item.taobao.com/item.htm?abbucket=13&amp;id=678711305104&amp;ns=1&amp;skuId=5045356419703&amp;spm=a21n57.1.item.6.60c7523criexMT">链接</a></td><td><a href="#note1">备注1</a></td><td>1</td><td>-</td><td>-</td></tr><tr><td>连接器</td><td>SGD08M060PH46G2</td><td>LQFP-48</td><td>3.63</td><td><a href="https://item.taobao.com/item.htm?id=676307115504&amp;spm=a21m98.27004841">链接</a></td><td><a href="#note1">备注1</a></td><td>1</td><td>-</td><td>-</td></tr><tr><td></td><td>SGD08F060PH38G2</td><td>LQFP-48</td><td>3.63</td><td><a href="https://item.taobao.com/item.htm?id=676307115504&amp;spm=a21m98.27004841">链接</a></td><td><a href="#note1">备注1</a></td><td>1</td><td>-</td><td>-</td></tr></tbody></table></div><p><note id="note1"></note><br>备注1：STM32F103CBT6 比 STM32F103C8T6 的闪存更大，其他的都不变，价格只高了一点，更合适。</p><h2 id="A模块"><a href="#A模块" class="headerlink" title="A模块"></a>A模块</h2><p>&emsp;&emsp;STM32F103Cx 最小系统。</p><h3 id="电流能力"><a href="#电流能力" class="headerlink" title="电流能力"></a>电流能力</h3><ol><li>板对板连接器单个引脚的最大电流为 0.5A。</li><li>单片机最大电流为 150mA</li><li>led 最大电流为 30mA</li></ol><p>总结：板对板连接器一个引脚供电是够的。</p><h1 id="双晶振"><a href="#双晶振" class="headerlink" title="双晶振"></a>双晶振</h1><p>&emsp;&emsp;STM32微控制器通常外接两个晶振，分别是低速晶振（32.768 kHz）和高速晶振（通常为8 MHz）。这两个晶振的作用如下：</p><ol><li>低速晶振（LSE）：提供外部低速时钟，通常用于实时时钟（RTC）电路的时钟源，以及为低功耗模式下的计时提供服务。如果设计中不需要RTC功能，可以选择不焊接此晶振。低速晶振的启动时间比高速晶振短，但在校准之后的时钟频率精度相对较差。</li><li>高速晶振（HSE）：提供外部高速时钟，用于生成更精确的系统时钟。这个时钟源对于需要高稳定度时钟的应用来说是非常重要的。高速晶振的频率通常为8 MHz，但可以根据产品需求选择其他频率，只需注意倍分频的设置。</li></ol><p>结论：两个晶振都要。</p>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践：智能车</title>
      <link href="/posts/20240318ze.html"/>
      <url>/posts/20240318ze.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="工程实践导航"><a href="#工程实践导航" class="headerlink" title="工程实践导航"></a><a href="./20240318zf.html#智能车">工程实践导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 工程实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 智能车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：Android</title>
      <link href="/posts/20240318t.html"/>
      <url>/posts/20240318t.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Android">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：IOS</title>
      <link href="/posts/20240318r.html"/>
      <url>/posts/20240318r.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#IOS">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOS </tag>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：MacOS</title>
      <link href="/posts/20240318r.html"/>
      <url>/posts/20240318r.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#MacOS">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> MacOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：Linux</title>
      <link href="/posts/20240318q.html"/>
      <url>/posts/20240318q.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Linux">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程：Windows</title>
      <link href="/posts/20240318p.html"/>
      <url>/posts/20240318p.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Windows">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：PS</title>
      <link href="/posts/20240318O.html"/>
      <url>/posts/20240318O.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#PS">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Keil</title>
      <link href="/posts/20240318l.html"/>
      <url>/posts/20240318l.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Keil">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Keil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Multisim</title>
      <link href="/posts/20240318m.html"/>
      <url>/posts/20240318m.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Multisim">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Multisim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Quartus II</title>
      <link href="/posts/20240318n.html"/>
      <url>/posts/20240318n.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Quartus II">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Quartus II </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日语</title>
      <link href="/posts/20240318k.html"/>
      <url>/posts/20240318k.html</url>
      
        <content type="html"><![CDATA[<h1 id="语言导航"><a href="#语言导航" class="headerlink" title="语言导航"></a><a href="./20240318j.html#日语">语言导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 外语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>俄语</title>
      <link href="/posts/20240318i.html"/>
      <url>/posts/20240318i.html</url>
      
        <content type="html"><![CDATA[<h1 id="语言导航"><a href="#语言导航" class="headerlink" title="语言导航"></a><a href="./20240318j.html#俄语">语言导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 外语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 俄语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程实践导航</title>
      <link href="/posts/20240318zf.html"/>
      <url>/posts/20240318zf.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#工程实践">文章导航总览</a></h1><h1 id="PCB设计"><a href="#PCB设计" class="headerlink" title="PCB设计"></a>PCB设计</h1><h2 id="STM32F103Cx最小系统"><a href="#STM32F103Cx最小系统" class="headerlink" title="STM32F103Cx最小系统"></a><a href="./20240416b.html">STM32F103Cx最小系统</a></h2><h1 id="智能车"><a href="#智能车" class="headerlink" title="智能车"></a><a href="./20240318ze.html">智能车</a></h1><h1 id="无人机"><a href="#无人机" class="headerlink" title="无人机"></a><a href="./20240318zg.html">无人机</a></h1><h1 id="无人船"><a href="#无人船" class="headerlink" title="无人船"></a><a href="./20240318zh.html">无人船</a></h1><h1 id="遥控手柄"><a href="#遥控手柄" class="headerlink" title="遥控手柄"></a><a href="./20240318zi.html">遥控手柄</a></h1><h1 id="GNSS接收机"><a href="#GNSS接收机" class="headerlink" title="GNSS接收机"></a><a href="./20240318zj.html">GNSS接收机</a></h1><h1 id="PCB焊接技巧"><a href="#PCB焊接技巧" class="headerlink" title="PCB焊接技巧"></a><a href="./20240318zk.html">PCB焊接技巧</a></h1><h1 id="云台机械臂"><a href="#云台机械臂" class="headerlink" title="云台机械臂"></a><a href="./20240318zl.html">云台机械臂</a></h1><h1 id="平衡车"><a href="#平衡车" class="headerlink" title="平衡车"></a><a href="./20240318zm.html">平衡车</a></h1><h1 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a><a href="./20240319a.html">图像识别</a></h1><h1 id="传感器物联网"><a href="#传感器物联网" class="headerlink" title="传感器物联网"></a><a href="./20240319b.html">传感器物联网</a></h1><h1 id="移动端应用程序"><a href="#移动端应用程序" class="headerlink" title="移动端应用程序"></a><a href="./20240319c.html">移动端应用程序</a></h1>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工程实践导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语言导航</title>
      <link href="/posts/20240318j.html"/>
      <url>/posts/20240318j.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#语言">文章导航总览</a></h1><h1 id="汉语"><a href="#汉语" class="headerlink" title="汉语"></a><a href="./20240512e.html">汉语</a></h1><h1 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h1><h2 id="单词"><a href="#单词" class="headerlink" title="单词"></a><a href="./20231208a.html">单词</a></h2><h1 id="俄语"><a href="#俄语" class="headerlink" title="俄语"></a><a href="./20240318i.html">俄语</a></h1><h1 id="日语"><a href="#日语" class="headerlink" title="日语"></a><a href="./20240318k.html">日语</a></h1>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA</title>
      <link href="/posts/20240318h.html"/>
      <url>/posts/20240318h.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#FPGA">编程导航</a></h1><p>&emsp;&emsp;FPGA </p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：SolidWorks</title>
      <link href="/posts/20240318f.html"/>
      <url>/posts/20240318f.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#SolidWorks">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> SolidWorks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Matlab</title>
      <link href="/posts/20240318e.html"/>
      <url>/posts/20240318e.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Matlab">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Cadence</title>
      <link href="/posts/20240318d.html"/>
      <url>/posts/20240318d.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#Cadence">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Cadence </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：KiCad</title>
      <link href="/posts/20240318c.html"/>
      <url>/posts/20240318c.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#KiCad">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> KiCad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Altium Designer</title>
      <link href="/posts/20240318b.html"/>
      <url>/posts/20240318b.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#AltiumDesigner">系统软件导航</a></h1><h1 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h1><p>&emsp;&emsp;添加库文件的方式有几种，用哪种最方便且便于管理库文件呢？这是值得商榷的。</p><p>如果使用别人的工程，和别人的库。最简单的方法还是向工程中添加库文件，因为名字是对应的，就直接能找到。</p><p>&emsp;&emsp;但是管理起来确实是一件麻烦的事情。例如，不同项目，同一个芯片，封装相同，结果封装名字不同。</p><h1 id="旋转-45°"><a href="#旋转-45°" class="headerlink" title="旋转 45°"></a>旋转 45°</h1><p>&emsp;&emsp;工具-优先选项-PCB Editor-Genral-其他-旋转步进，改成 45 ，就是45°。</p><h1 id="差分线"><a href="#差分线" class="headerlink" title="差分线"></a>差分线</h1><ol><li>原理图<ol><li>引脚网络必须命名为 _P 和 _N。</li><li>原理图 快捷键 P-H-E。起点和终点我都放置差分对。</li></ol></li><li>PCB<ol><li>布线快捷键U-I。</li><li>等长<ol><li>差分线等长，快捷键U-P，测量差分线的长度。不太会设计规则调节，只会用来看长度，这个是准确的。然后手动选择短线的中点进行调节，直至等长。</li><li>不够准确的测量方法，快捷键S-P，选中一根线，然后测量对象的距离 R-S。这种方法虽然会选中焊盘，但是只会测量走线，焊盘距离不会记录在内，但是焊盘和走线连接点有杂余走线的话，要删除，要不然不准。这样测量时，用差分线测量是等长，而这个会差1-2个mil，所以这个方法参考，不准确，以为差分测量为准。原因是端点不准。因为走线的端点不一定是焊盘的中点，造成了很大的误差。</li></ol></li></ol></li></ol><h1 id="手动等长"><a href="#手动等长" class="headerlink" title="手动等长"></a>手动等长</h1><ol><li>调整布局，线的方向确定</li><li>测量距离，整体块上下或者左右移动，确定和芯片的距离</li><li>更改原点，方便微调内部对称电容的距离</li><li>走线，整体块上下或者左右移动，保证走线等距</li><li>若走线含有电阻，应该更改网络，先当网络等距，然后改回来网络，把电阻插入到上下直线，或者左右直线之间，不改变等长。</li></ol><h1 id="如何设置板子厚度"><a href="#如何设置板子厚度" class="headerlink" title="如何设置板子厚度"></a>如何设置板子厚度</h1><p>&emsp;&emsp;设计-层叠管理器。</p><h1 id="PCB多板互连装配设计"><a href="#PCB多板互连装配设计" class="headerlink" title="PCB多板互连装配设计"></a>PCB多板互连装配设计</h1><p>【利用altium designer进行多板拼接设计，三维多板拼接装配图，multiboard】 <a href="https://www.bilibili.com/video/BV1uE411c7ph/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">https://www.bilibili.com/video/BV1uE411c7ph/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
            <tag> Altium Designer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件科普：PCB绘制类软件科普</title>
      <link href="/posts/20240318a.html"/>
      <url>/posts/20240318a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#PCB绘制软件">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> PCB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件科普：编程类软件科普</title>
      <link href="/posts/20240317d.html"/>
      <url>/posts/20240317d.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#编程软件">系统软件导航</a></h1><p>&emsp;&emsp;Windows 下 C++ 最火的编程软件为 Visual Studio。在创建工程添加文件时，把 cpp 后缀的文件改名为 c 后缀的文件，就可以从写 C++ 代码，写成 c 代码了。</p>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统&amp;软件导航</title>
      <link href="/posts/20240317b.html"/>
      <url>/posts/20240317b.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#系统软件">文章导航总览</a></h1><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><a href="./20240318p.html">Windows</a></h2><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><a href="./20240318q.html">Linux</a></h2><h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a><a href="./20240318r.html">MacOS</a></h2><h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a><a href="./20240318s.html">IOS</a></h2><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a><a href="./20240318t.html">Android</a></h2><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><h2 id="软件科普"><a href="#软件科普" class="headerlink" title="软件科普"></a>软件科普</h2><h3 id="编程软件"><a href="#编程软件" class="headerlink" title="编程软件"></a><a href="./20240317d.html">编程软件</a></h3><h3 id="PCB绘制软件"><a href="#PCB绘制软件" class="headerlink" title="PCB绘制软件"></a><a href="./20240318a.html">PCB绘制软件</a></h3><h2 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a><a href="./20240317a.html">VSCode</a></h2><h2 id="Visual-Studio"><a href="#Visual-Studio" class="headerlink" title="Visual Studio"></a><a href="./20240317c.html">Visual Studio</a></h2><h2 id="Altium-Designer"><a href="#Altium-Designer" class="headerlink" title="Altium Designer"></a><a href="./20240318b.html">Altium Designer</a></h2><h2 id="KiCad"><a href="#KiCad" class="headerlink" title="KiCad"></a><a href="./20240318c.html">KiCad</a></h2><h2 id="Cadence"><a href="#Cadence" class="headerlink" title="Cadence"></a><a href="./20240318d.html">Cadence</a></h2><h2 id="Matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a><a href="./20240318e.html">Matlab</a></h2><h2 id="SolidWorks"><a href="#SolidWorks" class="headerlink" title="SolidWorks"></a><a href="./20240318f.html">SolidWorks</a></h2><h2 id="Keil"><a href="#Keil" class="headerlink" title="Keil"></a><a href="./20240318l.html">Keil</a></h2><h2 id="Multisim"><a href="#Multisim" class="headerlink" title="Multisim"></a><a href="./20240318m.html">Multisim</a></h2><h2 id="QuartusII"><a href="#QuartusII" class="headerlink" title="QuartusII"></a><a href="./20240318n.html">QuartusII</a></h2><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a><a href="./20240318o.html">PS</a></h2><h2 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a><a href="./20240529a.html">Navicat</a></h2>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：VSCode</title>
      <link href="/posts/20240317a.html"/>
      <url>/posts/20240317a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#VSCode">系统软件导航</a></h1>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件教程：Visual Studio</title>
      <link href="/posts/20240317c.html"/>
      <url>/posts/20240317c.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href=""></a>。</li></ol></div><h1 id="系统软件导航"><a href="#系统软件导航" class="headerlink" title="系统软件导航"></a><a href="./20240317b.html#VisualStudio">系统软件导航</a></h1><h1 id="变量内存"><a href="#变量内存" class="headerlink" title="变量内存"></a>变量内存</h1><ol><li>打断点，在 debug 时，选择：调试-窗口-内存，输入相关地址即可。</li><li>同时可以选择：调试-窗口-自动窗口，可以查看变量名称、值和类型。会显示数组和指针的地址，而整型变量的地址不会显示。</li><li>将数组和指针的变量符号复制粘贴到内存窗口会自动跳转正确的内存地址，并显示值。</li><li>而整型变量的地址会出现错误，正确的方法是使用取地址符号 <code>&amp;</code> 进行打印。</li></ol><h1 id="反汇编"><a href="#反汇编" class="headerlink" title="反汇编"></a>反汇编</h1><ol><li>打断点，在 debug 时，在代码栏鼠标右键-转到反汇编，即可查看汇编代码。</li></ol><h1 id="sprintf报错"><a href="#sprintf报错" class="headerlink" title="sprintf报错"></a>sprintf报错</h1><p>报错内容：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">严重性代码说明项目文件行禁止显示状态详细信息</span><br><span class="line">错误C4996<span class="symbol">&#x27;sprintf</span>&#x27;: This function or variable may be <span class="keyword">unsafe</span>. Consider using sprintf_s instead. To disable deprecation, <span class="keyword">use</span> _CRT_SECURE_NO_WARNINGS. See online help <span class="keyword">for</span> <span class="title class_">details</span>.VS2022CP:\ProgramLearn\Test\VS\VS2022\VS2022C\VS2022C\VS2022C.c<span class="number">11</span></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">解决方法：</span><br><span class="line"></span><br><span class="line">右键工程名<span class="punctuation">-&gt;</span>属性<span class="punctuation">-&gt;</span>C/C++<span class="punctuation">-&gt;</span>预处理器<span class="punctuation">-&gt;</span>预处理器定义，编辑右边输入框加入:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>_CRT_SECURE_NO_WARNINGS<br>```</p>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣算法训练</title>
      <link href="/posts/20240316a.html"/>
      <url>/posts/20240316a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>链接：<a href="https://leetcode.cn/problems/two-sum/description/">1. 两数之和</a>。</li></ol></div><div class="note info flat"><p>我对算法的学习要求和思路为：</p><ol><li>算法我认为脱胎于数学，先走数学公式，再写算法。</li><li>每个算法要求做成函数的形式，方便将来使用。</li></ol></div><h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#算法训练">编程导航</a></h1><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>&emsp;&emsp;给定一个整数数组 <code>IntA</code> 和一个整数目标值 <code>IntTarget</code>，请你在该数组中找出和为目标值 IntTarget 的那两个整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><h1 id="数学建模"><a href="#数学建模" class="headerlink" title="数学建模"></a>数学建模</h1><h2 id="题目重述"><a href="#题目重述" class="headerlink" title="题目重述"></a>题目重述</h2><p>&emsp;&emsp;设一维数组的名称为 $A$，数组的元素个数为 $n<em>A$，其中 $n_A \geq 2$，元素分别为 $a_0$、$a_1$、···、$a</em>{n-1}$，且均为整数，并记为 $a_i$，其中 $0 \leq i \leq (n_A - 1)$，整数目标值为 $b$。取出的两个整数中，其中一个可以同记为 $a_i$，另外一个整数记为 $a_j$，其中 $0 \leq j \leq (n_A - 1)$，且 $j \neq i$，$n_A$、$i$、$j$ 均为整数，若存在 $i$ 和 $j$，使得 $a_i + a_j = b$，求 $i$ 和 $j$的值。并表示为数组 $C$。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>&emsp;&emsp;这个没有很深的公式了，直接写就好了。我们可以做差和 $0$ 比较：</p><script type="math/tex; mode=display">b - a_i - a_j = 0</script><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>&emsp;&emsp;数学公式符号和程序变量名称有自己的特点，不能要求保持一致，符号首要特点是可读性。数学符号是简短的，有上下标；而程序变量应该能望文生义，由英文单词或者缩写拼装而成。下表仅表示该算法对应的函数里的变量。</p><div class="table-container"><table><thead><tr><th>数学符号</th><th>取值范围</th><th>代码变量</th><th>说明</th></tr></thead><tbody><tr><td>$A$</td><td>-</td><td>int* ArryInput</td><td>输入矩阵</td></tr><tr><td>$n_A$</td><td>$n_A \geq 2$</td><td>int arrySize</td><td>元素个数</td></tr><tr><td>$b$</td><td>-</td><td>int target</td><td>输入目标值</td></tr><tr><td>$i$</td><td>$0 \leq i \leq (n_A - 1)$</td><td>int i</td><td>第 $i$ 个元素</td></tr><tr><td>$j$</td><td>$0 \leq j \leq (n_A - 1)$、$j \neq i$</td><td>int j</td><td>第 $j$ 个元素</td></tr><tr><td>$C$</td><td>-</td><td>int* arryTwoSum</td><td>输出矩阵</td></tr><tr><td>$n_C$</td><td>-</td><td>int* returnSize</td><td>元素个数</td></tr></tbody></table></div><h1 id="算法代码"><a href="#算法代码" class="headerlink" title="算法代码"></a>算法代码</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><div class="table-container"><table><thead><tr><th>函数名</th><th>数据类型</th><th>main</th><th>twoSum</th><th>arryTwoSum</th></tr></thead><tbody><tr><td>说明</td><td>-</td><td><em>主函数</em></td><td><em>力扣</em></td><td><em>自定义</em></td></tr><tr><td>输入矩阵</td><td>int*</td><td>nums</td><td>nums</td><td>ArryInput</td></tr><tr><td>元素个数</td><td>int</td><td>numsSize</td><td>numsSize</td><td>arrySize</td></tr><tr><td>输入目标值</td><td>int</td><td>target</td><td>target</td><td>target</td></tr><tr><td>输出矩阵</td><td>int*</td><td>ans</td><td>twoSum</td><td>arryTwoSum</td></tr><tr><td>元素个数</td><td>int*</td><td>returnSize</td><td>returnSize</td><td>returnSize</td></tr></tbody></table></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// @brief 在数组中寻找两个数的和等于目标值</span></span><br><span class="line"><span class="comment">/// @param ArryInput    一维输入数组</span></span><br><span class="line"><span class="comment">/// @param arrySize     数组元素个数</span></span><br><span class="line"><span class="comment">/// @param target       目标值</span></span><br><span class="line"><span class="comment">/// @param returnSize   返回数组的元素个数</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">arryTwoSum</span><span class="params">(<span class="type">int</span>* ArryInput, <span class="type">int</span> arrySize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// @brief 在数组中寻找两个数的和等于目标值</span></span><br><span class="line"><span class="comment">/// @param nums         一维输入数组</span></span><br><span class="line"><span class="comment">/// @param numsSize     数组元素个数</span></span><br><span class="line"><span class="comment">/// @param target       目标值</span></span><br><span class="line"><span class="comment">/// @param returnSize   返回数组的元素个数</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">twoSum</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// @brief      主函数</span></span><br><span class="line"><span class="comment">/// @details    给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那两个整数，并返回它们的数组下标。</span></span><br><span class="line"><span class="comment">/// 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</span></span><br><span class="line"><span class="comment">/// 你可以按任意顺序返回答案。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 输入</span></span><br><span class="line">    <span class="type">int</span> nums[] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;; <span class="comment">// 给定一个一维数组</span></span><br><span class="line">    <span class="type">int</span> target = <span class="number">3</span>; <span class="comment">// 目标值</span></span><br><span class="line">    <span class="type">int</span> numsSize = <span class="keyword">sizeof</span>(nums) / <span class="keyword">sizeof</span>(nums[<span class="number">0</span>]); <span class="comment">// 计算元素个数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="type">int</span>* ans = <span class="literal">NULL</span>, * ansCopy = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> returnNum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span>* returnSize = &amp;returnNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算</span></span><br><span class="line">    ans = twoSum(nums, numsSize, target, returnSize);</span><br><span class="line">    ansCopy = ans;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印</span></span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>] = <span class="string">&quot;数组下标为：[&quot;</span>;</span><br><span class="line">    <span class="type">char</span> temp[<span class="number">20</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; returnNum; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == returnNum - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d&quot;</span>, *(ans + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(temp, <span class="string">&quot;%d, &quot;</span>, *(ans + i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcat</span>(str, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcat</span>(str, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理</span></span><br><span class="line">    returnNum = <span class="number">0</span>;</span><br><span class="line">    returnSize = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">free</span>(ansCopy);</span><br><span class="line">    ans = <span class="literal">NULL</span>, ansCopy = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拷贝到力扣要声明 arryTwoSum 函数</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">arryTwoSum</span><span class="params">(<span class="type">int</span>* ArryInput, <span class="type">int</span> arrySize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// @details    一维整数数组两元素求和等于目标值，返回两元素所在位置</span></span><br><span class="line"><span class="comment">/// @see        arryTwoSum</span></span><br><span class="line"><span class="comment">/// @note       这是需要在力扣里跑的，所以重新封装了函数名称和变量名</span></span><br><span class="line"><span class="comment">/// @warning    复制到力扣里时，需要重新在该函数前面声明 arryTwoSum 函数：int* arryTwoSum(int* ArryInput, int arrySize, int target, int* returnSize);</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">twoSum</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> arryTwoSum(nums, numsSize, target, returnSize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// @details 一维整数数组两元素求和等于目标值，返回两元素所在位置</span></span><br><span class="line"><span class="comment">/// @see twoSum</span></span><br><span class="line"><span class="comment">/// @note 这是不能直接在力扣里跑的，因为定义自己喜欢的函数名和变量名</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">arryTwoSum</span><span class="params">(<span class="type">int</span>* ArryInput, <span class="type">int</span> arrySize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 匹配状态</span></span><br><span class="line">    <span class="type">int</span> State = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arrySize; i = i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; arrySize; j = j + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (target - ArryInput[i] - ArryInput[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                State = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (State == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回数组下标</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span>* ArryReturn = <span class="literal">NULL</span>, * ArryRetCopy = <span class="literal">NULL</span>;</span><br><span class="line">    ArryReturn = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">    ArryRetCopy = ArryReturn;</span><br><span class="line">    <span class="keyword">if</span> (ArryReturn != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 赋值</span></span><br><span class="line">        ArryReturn[<span class="number">0</span>] = i; ArryReturn[<span class="number">1</span>] = j;</span><br><span class="line">        *returnSize = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> ArryRetCopy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;malloc error!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *returnSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">ArrayTwoSum</span> <span class="params">(<span class="type">signed</span> <span class="type">int</span> *A, <span class="type">signed</span> <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//输入</span></span><br><span class="line">  <span class="comment">//矩阵</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> nums[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">  <span class="comment">//目标值</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> target = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//输出</span></span><br><span class="line">  cout &lt;&lt; <span class="built_in">ArrayTwoSum</span> (nums, target)&lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line"><span class="comment">//一维整数数组两元素求和等于目标值，返回两元素所在位置</span></span><br><span class="line"><span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">ArrayTwoSum</span> <span class="params">(<span class="type">signed</span> <span class="type">int</span> *A, <span class="type">signed</span> <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//匹配状态</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> State = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//计算元素个数</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> n = <span class="built_in">sizeof</span>(A)/<span class="built_in">sizeof</span>(<span class="type">signed</span> <span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//输出</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//计算</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i = i + <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j = j + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(b - A[i] - A[j] == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        State = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(State == <span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//返回数组下标</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> C[<span class="number">2</span>] = &#123;i,j&#125;;</span><br><span class="line">  <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
            <tag> 力扣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 变量</title>
      <link href="/posts/20240315b.html"/>
      <url>/posts/20240315b.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#变量">编程导航</a></h1><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>&emsp;&emsp;变量的类型有：</p><ol><li>整数类型：int</li><li>浮点类型（小数类型）：double、float</li><li>字符类型：char</li><li>布尔类型：bool</li><li>字符串类型：string</li><li>数组类型：arry</li><li>对象类型：object</li></ol><h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><h2 id="查询变量信息"><a href="#查询变量信息" class="headerlink" title="查询变量信息"></a>查询变量信息</h2><p>&emsp;&emsp;查询值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TestNumber 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> IntC = TestNumber;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; IntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; IntC &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p>&emsp;&emsp;查询地址，采用指针的方法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TestNumber 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> IntC = TestNumber;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;IntC &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p>这种变量会在每次运行程序时随机分配，所以地址会发生变化。</p><p>&emsp;&emsp;查询所占内存大小，使用函数 <code>sizeof</code>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TestNumber 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> IntC = TestNumber;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(IntC) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><h3 id="无符号"><a href="#无符号" class="headerlink" title="无符号"></a>无符号</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> UnsignedIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span> UnsignedShortIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> UnsignedShortC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> UnsignedLongC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> UnsignedLongLongC = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="未说明符号"><a href="#未说明符号" class="headerlink" title="未说明符号"></a>未说明符号</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> IntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">short</span> <span class="type">int</span> ShortIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">short</span> ShortC = <span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">int</span> LongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> LongC = <span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> LongLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> LongLongC = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="有符号"><a href="#有符号" class="headerlink" title="有符号"></a>有符号</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">signed</span> <span class="type">int</span> SignedIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">short</span> <span class="type">int</span> SignedShortIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">short</span> SignedShortC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> <span class="type">int</span> SignedLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> SignedLongC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> SignedLongLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> <span class="type">long</span> SignedLongLongC = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TestNumber -1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    <span class="comment">//无符号</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> UnsignedIntC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span> UnsignedShortIntC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> UnsignedShortC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongIntC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> UnsignedLongC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongLongIntC = TestNumber;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> UnsignedLongLongC = TestNumber;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无特殊说明</span></span><br><span class="line">    <span class="type">int</span> IntC = TestNumber;</span><br><span class="line">    <span class="type">short</span> <span class="type">int</span> ShortIntC = TestNumber;</span><br><span class="line">    <span class="type">short</span> ShortC = TestNumber;</span><br><span class="line">    <span class="type">long</span> <span class="type">int</span> LongIntC = TestNumber;</span><br><span class="line">    <span class="type">long</span> LongC = TestNumber;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> LongLongIntC = TestNumber;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> LongLongC = TestNumber;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有符号</span></span><br><span class="line">    <span class="type">signed</span> <span class="type">int</span> SignedIntC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">short</span> <span class="type">int</span> SignedShortIntC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">short</span> SignedShortC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">long</span> <span class="type">int</span> SignedLongIntC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">long</span> SignedLongC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> SignedLongLongIntC = TestNumber;</span><br><span class="line">    <span class="type">signed</span> <span class="type">long</span> <span class="type">long</span> SignedLongLongC = TestNumber;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//变量</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;变量&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;|&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;|_&quot;</span> &lt;&lt; <span class="string">&quot;整型，取值为：&quot;</span> &lt;&lt; TestNumber &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//无符号</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//整型 unsigned int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号整型 unsigned int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短整型 unsigned short int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号短整型 unsigned short int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedShortIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短型 unsigned short</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号短型 unsigned short&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedShortC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长整型 unsigned long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号长整型 unsigned long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedLongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长型 unsigned long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号长型 unsigned long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedLongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长整型 unsigned long long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号长长整型 unsigned long long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedLongLongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长型 unsigned long long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;无符号长长型 unsigned long long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;UnsignedLongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(UnsignedLongLongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; UnsignedLongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; UnsignedLongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无特殊说明</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;无特殊说明&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//整型 int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;整型 int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;IntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(IntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; IntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; IntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短整型 short int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;短整型 short int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;ShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ShortIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; ShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; ShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短型 short</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;短型 short&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;ShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ShortC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; ShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; ShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长整型 long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;长整型 long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;LongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(LongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; LongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; LongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长型 long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;长型 long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;LongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(LongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; LongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; LongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长整型 long long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;长长整型 long long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;LongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(LongLongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; LongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; LongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长型 long long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;长长型 long long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;LongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(LongLongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; LongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; LongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有符号</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//整型 signed int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号整型 signed int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短整型 signed short int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号短整型 signed short int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedShortIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedShortIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//短型 signed short</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号短型 signed short&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedShortC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedShortC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长整型 signed long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号长整型 signed long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedLongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长型 signed long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号长型 signed long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedLongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长整型 signed long long int</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号长长整型 signed long long int&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedLongLongIntC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedLongLongIntC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//长长型 signed long long</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;有符号长长型 signed long long&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;地址：&quot;</span> &lt;&lt; &amp;SignedLongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;长度：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(SignedLongLongC) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;十六进制值：&quot;</span> &lt;&lt; std::hex &lt;&lt; SignedLongLongC &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;表达值：&quot;</span> &lt;&lt; std::dec &lt;&lt; SignedLongLongC &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>无论有符号或者无符号，都可以初始化位一个十进制的负数，都会用相同的补码存储下来，只是表达值不同而已。</li><li>无特殊说明的都是有符号的整型。</li><li>短型不会超过普通的整型，长型不会短于普通的整型。但是具体长度会因为系统位数发生改变。</li></ol><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><p>&emsp;&emsp;其中，Signed 可以省略，默认就是有符号的。而对于长短整型，int 就可以省略。但是后面就不进行省略（缩写）了，写全拼。因为虽然简化了，但是可读性变差了。总结下来就是以下内容：</p><h4 id="无符号-1"><a href="#无符号-1" class="headerlink" title="无符号"></a>无符号</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> UnsignedIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span> UnsignedShortIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> UnsignedLongLongIntC = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h4 id="有符号-1"><a href="#有符号-1" class="headerlink" title="有符号"></a>有符号</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">signed</span> <span class="type">int</span> SignedIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">short</span> <span class="type">int</span> SignedShortIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> <span class="type">int</span> SignedLongIntC = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> SignedLongLongIntC = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>四个无符号的，四个有符号的。核心是四个：整型、短整型、长整型、长长整型。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> variable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原码反码和补码</title>
      <link href="/posts/20240315a.html"/>
      <url>/posts/20240315a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#原码反码和补码">编程导航</a></h1><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>&emsp;&emsp;原码、反码和补码是符合计算机硬件中逻辑单元的规则，需要从这个角度去理解。直接构成二进制加减乘除的规则。</p><p>根据实际硬件的最简化原则，最小单元为二进制，且一定是二的倍数。简化考虑一个四位二进制数。这一般与内存的位数有关，但必须是成倍增加，常见的为 8 位、16 位和 32 位。</p><p>&emsp;&emsp;所有计算都是二进制数，用 0 和 1 计算。这符合高低电平的一个物理规律。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><div class="table-container"><table><thead><tr><th>内存十六进制</th><th>原码</th><th>有符号</th><th>无符号</th><th>反码</th><th>补码（内存二进制）</th><th>人逻辑有符号二进制</th></tr></thead><tbody><tr><td>8</td><td>1000</td><td>-8</td><td>8</td><td>1111</td><td>1000</td><td>-0</td></tr><tr><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td></td></tr><tr><td>7</td><td>0111</td><td>7</td><td>7</td><td>0111</td><td>0111</td><td>7</td></tr><tr><td>6</td><td>0110</td><td>6</td><td>6</td><td>0110</td><td>0110</td><td>6</td></tr><tr><td>5</td><td>0101</td><td>5</td><td>5</td><td>0101</td><td>0101</td><td>5</td></tr><tr><td>4</td><td>0100</td><td>4</td><td>4</td><td>0100</td><td>0100</td><td>4</td></tr><tr><td>3</td><td>0011</td><td>3</td><td>3</td><td>0011</td><td>0011</td><td>3</td></tr><tr><td>2</td><td>0010</td><td>2</td><td>2</td><td>0010</td><td>0010</td><td>2</td></tr><tr><td>1</td><td>0001</td><td>1</td><td>1</td><td>0001</td><td>0001</td><td>1</td></tr><tr><td>0</td><td>0000</td><td>0</td><td>0</td><td>0000</td><td>0000</td><td>0</td></tr><tr><td>F</td><td>1001</td><td>-1</td><td>15</td><td>1110</td><td>1111</td><td>-7</td></tr><tr><td>E</td><td>1010</td><td>-2</td><td>14</td><td>1101</td><td>1110</td><td>-6</td></tr><tr><td>D</td><td>1011</td><td>-3</td><td>13</td><td>1100</td><td>1101</td><td>-5</td></tr><tr><td>C</td><td>1100</td><td>-4</td><td>12</td><td>1011</td><td>1100</td><td>-4</td></tr><tr><td>B</td><td>1101</td><td>-5</td><td>11</td><td>1010</td><td>1011</td><td>-3</td></tr><tr><td>A</td><td>1110</td><td>-6</td><td>10</td><td>1001</td><td>1010</td><td>-2</td></tr><tr><td>9</td><td>1111</td><td>-7</td><td>9</td><td>1000</td><td>1001</td><td>-1</td></tr><tr><td>8</td><td>1000</td><td>-8</td><td>8</td><td>1111</td><td>1000</td><td>-0</td></tr><tr><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td>7</td><td>0111</td><td>7</td><td>7</td><td>0111</td><td>0111</td><td>7</td></tr></tbody></table></div><ol><li>从 <code>有符号</code> 列入手，以 0 位起始，向上增加，向下减小。</li><li>对应 <code>原码</code> 列，其中最高位为符号位，<code>0</code> 代表正数，<code>1</code> 代表负数，剩下的全为数值位，三位二进制能表示 “0-7”；向上或者向下封顶后会循环，按照计算机的计算逻辑，符号位也会进位，所以最上面一行和最小面一行，发生符号变换，数字进行循环。</li><li>不考虑符号时，可以直接写出 <code>无符号</code> 列。</li><li>对于非负原码，反码就是原码；对于负数原码，反码是将原码除了一位符号位，剩余位全部取反，得到 <code>反码</code> 列。</li><li>对于非负原码，补码就是反码，也是原码；对于负数原码，补码是将反码加一，得到 <code>补码（内存二进制）</code> 列。</li><li>计算机内存存储的数字位补码，写成十六进制的数，得到 <code>内存十六进制</code> 列。</li><li>按照人类书写规则，从补码出发，得到  <code>人逻辑有符号二进制</code> 列。</li></ol><p>结论和说明：</p><ol><li>人类的逻辑和机器的逻辑在负数上有很大的差异，这是原码和补码产生的初衷。原码代表人的思维，补码代表机器的逻辑。而反码时人转化原码和补码的中间产物，视为工具。<ol><li><code>原码</code> 列的思维前面提到。</li><li><code>补码（内存二进制）</code> 列可以看出，数字是连续的，从 0 到 -1 编码数字没有突变，是符合机器的。</li></ol></li><li>补码的补码是原码，也就是说原码和补码是一个互逆过程。同理，原码的反码和补码的反码相同。</li><li>“进位”和“溢出”，对于有符号数，其中除了符号位以外位进位循环，多余的数会溢出，可以假设它会向高位无限借位或进位，因为超出的范围我们并不关心。而在计算机中，用补码表示后，符号位也会参与进位或者借位 “循环”，不便于用人类十进制理解了，但是方便了机器。无论如何就像一个时钟一样，是一种循环的规则。</li></ol><h1 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h1><p>&emsp;&emsp;有了原码、反码和补码后，就可以很方便的进行计算。</p><h2 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h2><p>&emsp;&emsp;同位相加，与门连接下一位，同为一则进位，以此循环。当然是用计算机存储模式——补码 进行计算。</p><h2 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h2><p>&emsp;&emsp;相减就是相加一个负数。化为加法即可。</p><h2 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h2><p>&emsp;&emsp;向前移位。</p><h2 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h2><p>&emsp;&emsp;向后移位。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>&emsp;&emsp;即无论是有符号还是无符号，计算机内存储的数字的形式不变，有符号和无符号相当于一种转译，显示给人看的。所以计算机计算的时候是一样的。而选择错误的范围和符号后就会导致结果错误。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马教程-C++基础入门</title>
      <link href="/posts/20240312a.html"/>
      <url>/posts/20240312a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>源文本为黑马程序员的 C++ 教程，未来会根据自身的学习需求进行编辑调整。视频地址：<a href="https://www.bilibili.com/video/BV1et411b73Z/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难】</a>。</p></div><h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#黑马程序员-C++">编程导航</a></h1><h1 id="C-初识"><a href="#C-初识" class="headerlink" title="C++初识"></a>C++初识</h1><h2 id="第一个C-程序"><a href="#第一个C-程序" class="headerlink" title="第一个C++程序"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=2&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">第一个C++程序</a></h2><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>​    Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><p><img src="https://picture.adunas.top/Article/20240312a/1541383178746.png" alt=""></p><p><img src="https://picture.adunas.top/Article/20240312a/1541384366413.png" alt=""></p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>右键源文件，选择添加-&gt;新建项</p><p><img src="https://picture.adunas.top/Article/20240312a/1541383817248.png" alt=""></p><p>给C++文件起个名称，然后点击添加即可。</p><p><img src="https://picture.adunas.top/Article/20240312a/1541384140042.png" alt=""></p><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p><img src="https://picture.adunas.top/Article/20240312a/1541384818688.png" alt=""></p><style>  .container1 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 100%; /* 16大格 * 5大格，高宽比为：0.3125 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }    .container-iframe {      position: absolute; /* 设置iframe的定位方式为绝对定位 */      top: 0; /* 将iframe定位到容器的顶部 */      left: 0; /* 将iframe定位到容器的左侧 */      width: 100%; /* 设置iframe的宽度为100% */      height: 100%; /* 设置iframe的高度为100% */      border: none; /* 可选：移除iframe的边框 */  }</style><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCv.html" frameborder="0">    </iframe>  </div><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，==对该行代码说明==</li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，==对该段代码做整体说明==</li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCw.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code><ul><li>==通常在文件上方定义==，表示一个常量</li></ul></li></ol><ol><li><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code><ul><li>==通常在变量定义前加关键字const==，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一周里总共有 &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; 天&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const修饰变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一年里总共有 &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; 个月份&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCA.html" frameborder="0">    </iframe>  </div><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><div class="table-container"><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>template</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td></tr></tbody></table></div><p><code>提示：在给变量或者常量起名称时候，不要用C++的关键字，否则会产生歧义。</code></p><h2 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h2><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=8&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">整型</a></h2><p><strong>作用</strong>：整型变量表示的是==整数类型==的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><div class="table-container"><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th>取值范围</th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int(整型)</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table></div><h2 id="sizeof关键字"><a href="#sizeof关键字" class="headerlink" title="sizeof关键字"></a>sizeof关键字</h2><p><strong>作用：</strong>利用 sizeof 关键字可以==统计数据类型所占内存大小==，单位为字节。</p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCB.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p><strong>整型结论</strong>：==short &lt; int &lt;= long &lt;= long long==</p></blockquote><h2 id="实型（浮点型）"><a href="#实型（浮点型）" class="headerlink" title="实型（浮点型）"></a>实型（浮点型）</h2><p><strong>作用</strong>：用于==表示小数==</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><div class="table-container"><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table></div><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; d1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;float  sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;double sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCC.html" frameborder="0">    </iframe>  </div><h2 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h2><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = &#39;a&#39;;</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用==1个字节==。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ch = &quot;abcde&quot;; //错误，不可以用双引号</span></span><br><span class="line"><span class="comment">//ch = &#x27;abcde&#x27;; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCD.html" frameborder="0">    </iframe>  </div><p>ASCII码表格：</p><div class="table-container"><table><thead><tr><th><strong>ASCII</strong>值</th><th><strong>控制字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>/</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>/</td><td>124</td><td>\</td><td></td></tr><tr><td>29</td><td>GS</td><td>61</td><td>=</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>`</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table></div><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p><strong>作用：</strong>用于表示一些==不能显示出来的ASCII字符==</p><p>现阶段我们常用的转义字符有：<code>\n  \\  \t</code></p><div class="table-container"><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>警报</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td><strong>010</strong></td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td><strong>\t</strong></td><td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td><strong>009</strong></td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td><strong>\\</strong></td><td><strong>代表一个反斜线字符”\”</strong></td><td><strong>092</strong></td></tr><tr><td>\’</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>\”</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>\?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0~9，a~f，A~F</td><td>3位16进制</td></tr></tbody></table></div><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\tHello&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCE.html" frameborder="0">    </iframe>  </div><h2 id="字符串型"><a href="#字符串型" class="headerlink" title="字符串型"></a>字符串型</h2><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><strong>C风格字符串</strong>： <code>char 变量名[] = &quot;字符串值&quot;</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCG.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><strong>C++风格字符串</strong>：  <code>string  变量名 = &quot;字符串值&quot;</code></li></ol><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   string str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">   cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCI.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;   ​</p><blockquote><p>注意：C++风格字符串，需要加入头文件==#include\<string>==</p></blockquote><h2 id="布尔类型-bool"><a href="#布尔类型-bool" class="headerlink" title="布尔类型 bool"></a>布尔类型 bool</h2><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  —- 真（本质是1）</li><li>false —- 假（本质是0）</li></ul><p><strong>bool类型占==1个字节==大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of bool = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCK.html" frameborder="0">    </iframe>  </div><h2 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h2><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入整型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入浮点型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> ch = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符串型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔类型输入</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p><strong>作用：</strong>用于执行代码的运算</p><p>本章我们主要讲解以下几类运算符：</p><div class="table-container"><table><thead><tr><th><strong>运算符类型</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>算术运算符</td><td>用于处理四则运算</td></tr><tr><td>赋值运算符</td><td>用于将表达式的值赋给变量</td></tr><tr><td>比较运算符</td><td>用于表达式的比较，并返回一个真值或假值</td></tr><tr><td>逻辑运算符</td><td>用于根据表达式的值返回真值或假值</td></tr></tbody></table></div><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=16&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">算术运算符</a></h2><p><strong>作用</strong>：用于处理四则运算 </p><p>算术运算符包括以下符号：</p><div class="table-container"><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10 + 5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10 - 5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10 * 5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10 / 5</td><td>2</td></tr><tr><td>%</td><td>取模(取余)</td><td>10 % 3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2; b=++a;</td><td>a=3; b=3;</td></tr><tr><td>++</td><td>后置递增</td><td>a=2; b=a++;</td><td>a=3; b=2;</td></tr><tr><td>—</td><td>前置递减</td><td>a=2; b=—a;</td><td>a=1; b=1;</td></tr><tr><td>—</td><td>后置递减</td><td>a=2; b=a—;</td><td>a=1; b=2;</td></tr></tbody></table></div><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a1 + b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 - b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 * b1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; a1 / b1 &lt;&lt; endl;  <span class="comment">//两个整数相除结果依然是整数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a2 / b2 &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 / b3 &lt;&lt; endl; //报错，除数不可以为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数可以相除</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">0.5</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">0.25</span>;</span><br><span class="line">cout &lt;&lt; d1 / d2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCM.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p>总结：在除法运算中，除数不能为0</p></blockquote><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取模</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="number">10</span> % <span class="number">3</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; a2 % b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; a3 % b3 &lt;&lt; endl; //取模运算时，除数也不能为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个小数不可以取模</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">double</span> d2 = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; d1 % d2 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCN.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p>总结：只有整型变量可以进行取模运算</p></blockquote><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递增</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a++; <span class="comment">//等价于a = a + 1</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置递增</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line">++b;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl; <span class="comment">// 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//区别</span></span><br><span class="line"><span class="comment">//前置递增先对变量进行++，再计算表达式</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b2 = ++a2 * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置递增先计算表达式，后对变量进行++</span></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b3 = a3++ * <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; b3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="container1">      <iframe class="container-iframe" src="https://tool.lu/coderunner/embed/eCO.html" frameborder="0">    </iframe>  </div><p>&lt;/b&gt;</p><blockquote><p>总结：前置递增先对变量进行++，再计算表达式，后置递增相反</p></blockquote><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p><strong>作用：</strong>用于将表达式的值赋给变量</p><p>赋值运算符包括以下几个符号：</p><div class="table-container"><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2; b=3;</td><td>a=2; b=3;</td></tr><tr><td>+=</td><td>加等于</td><td>a=0; a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5; a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2; a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4; a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3; a%2;</td><td>a=1;</td></tr></tbody></table></div><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值运算符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a += <span class="number">2</span>; <span class="comment">// a = a + 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a -= <span class="number">2</span>; <span class="comment">// a = a - 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a *= <span class="number">2</span>; <span class="comment">// a = a * 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a /= <span class="number">2</span>;  <span class="comment">// a = a / 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// %=</span></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">a %= <span class="number">2</span>;  <span class="comment">// a = a % 2;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p><strong>作用：</strong>用于表达式的比较，并返回一个真值或假值</p><p>比较运算符有以下符号：</p><div class="table-container"><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4 == 3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4 != 3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4 &lt; 3</td><td>0</td></tr><tr><td>></td><td>大于</td><td>4 &gt; 3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4 &lt;= 3</td><td>0</td></tr><tr><td>>=</td><td>大于等于</td><td>4 &gt;= 1</td><td>1</td></tr></tbody></table></div><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a == b) &lt;&lt; endl; <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a != b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt; b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt; b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &gt;= b) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &lt;= b) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意：C和C++ 语言的比较运算中， ==“真”用数字“1”来表示， “假”用数字“0”来表示。== </p></blockquote><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p><strong>作用：</strong>用于根据表达式的值返回真值或假值</p><p>逻辑运算符有以下符号：</p><div class="table-container"><table><thead><tr><th><strong>运算符</strong></th><th><strong>术语</strong></th><th><strong>示例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a为假，则!a为真；  如果a为真，则!a为假。</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a &amp;&amp; b</td><td>如果a和b都为真，则结果为真，否则为假。</td></tr><tr><td>\</td><td>\</td><td></td><td>或</td><td>a \</td><td>\</td><td>b</td><td>如果a和b有一个为真，则结果为真，二者都为假时，结果为假。</td></tr></tbody></table></div><p><strong>示例1：</strong>逻辑非</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 非</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !a &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; !!a &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结： 真变假，假变真</p></blockquote><p><strong>示例2：</strong>逻辑与</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 与</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a &amp;&amp; b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：逻辑==与==运算符总结： ==同真为真，其余为假==</p></blockquote><p><strong>示例3：</strong>逻辑或</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑运算符  --- 或</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 1 </span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a || b) &lt;&lt; endl;<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>逻辑==或==运算符总结： ==同假为假，其余为真==</p></blockquote><h1 id="程序流程结构"><a href="#程序流程结构" class="headerlink" title="程序流程结构"></a>程序流程结构</h1><p>C/C++支持最基本的三种程序运行结构：==顺序结构、选择结构、循环结构==</p><ul><li>顺序结构：程序按顺序执行，不发生跳转</li><li>选择结构：依据条件是否满足，有选择的执行相应功能</li><li>循环结构：依据条件是否满足，循环多次执行某段代码</li></ul><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=24&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">选择结构</a></h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p><strong>作用：</strong>执行满足条件的语句</p><p>if语句的三种形式</p><ul><li><p>单行格式if语句</p></li><li><p>多行格式if语句</p></li><li><p>多条件的if语句</p><p>​</p></li></ul><ol><li>单行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;</code></li></ol><p><img src="https://picture.adunas.top/Article/20240312a/clip_image002.png" alt=""></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//选择结构-单行if语句</span></span><br><span class="line">   <span class="comment">//输入一个分数，如果分数大于600分，视为考上一本大学，并在屏幕上打印</span></span><br><span class="line"></span><br><span class="line">   <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">   cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;您输入的分数为： &quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//if语句</span></span><br><span class="line">   <span class="comment">//注意事项，在if判断语句后面，不要加分号</span></span><br><span class="line">   <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">   &#123;</span><br><span class="line">   cout &lt;&lt; <span class="string">&quot;我考上了一本大学！！！&quot;</span> &lt;&lt; endl;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a>   ​</p><blockquote><p>注意：if条件表达式后不要加分号</p></blockquote><ol><li>多行格式if语句：<code>if(条件)&#123; 条件满足执行的语句 &#125;else&#123; 条件不满足执行的语句 &#125;;</code></li></ol><p><img src="https://picture.adunas.top/Article/20240312a/clip_image002-1541662519170.png" alt=""></p><p>​</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><ol><li>多条件的if语句：<code>if(条件1)&#123; 条件1满足执行的语句 &#125;else if(条件2)&#123;条件2满足执行的语句&#125;... else&#123; 都不满足执行的语句&#125;</code></li></ol><p><img src="https://picture.adunas.top/Article/20240312a/clip_image002-1541662566808.png" alt=""></p><p>​</p><p>​</p><p>​</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>嵌套if语句</strong>：在if语句中，可以嵌套使用if语句，达到更精确的条件判断</p><p>案例需求：</p><ul><li>提示用户输入一个高考考试分数，根据分数做如下判断</li><li>分数如果大于600分视为考上一本，大于500分考上二本，大于400考上三本，其余视为未考上本科；</li><li>在一本分数中，如果大于700分，考入北大，大于650分，考入清华，大于600考入人大。</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了北大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了清华&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了人大&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;我未考上本科&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>练习案例：</strong> 三只小猪称体重</p><p>有三只小猪ABC，请分别输入三只小猪的体重，并且判断哪只小猪最重？<img src="https://picture.adunas.top/Article/20240312a/三只小猪.jpg" alt=""></p><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><p><strong>作用：</strong> 通过三目运算符实现简单的判断</p><p><strong>语法：</strong><code>表达式1 ? 表达式2 ：表达式3</code></p><p><strong>解释：</strong></p><p>如果表达式1的值为真，执行表达式2，并返回表达式2的结果；</p><p>如果表达式1的值为假，执行表达式3，并返回表达式3的结果。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c = a &gt; b ? a : b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++中三目运算符返回的是变量,可以继续赋值</span></span><br><span class="line"></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：和if语句比较，三目运算符优点是短小整洁，缺点是如果用嵌套，结构不清晰</p></blockquote><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><p><strong>作用：</strong>执行多条件分支语句</p><p><strong>语法：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">1</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 结果<span class="number">2</span>：执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请给电影评分 </span></span><br><span class="line"><span class="comment">//10 ~ 9   经典   </span></span><br><span class="line"><span class="comment">// 8 ~ 7   非常好</span></span><br><span class="line"><span class="comment">// 6 ~ 5   一般</span></span><br><span class="line"><span class="comment">// 5分以下 烂片</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (score)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;烂片&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意1：switch语句中表达式类型只能是整型或者字符型</p><p>注意2：case里如果没有break，那么程序会一直向下执行</p><p>总结：与if语句比，对于多条件判断时，switch的结构清晰，执行效率高，缺点是switch不可以判断区间</p></blockquote><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h3><p><strong>作用：</strong>满足循环条件，执行循环语句</p><p><strong>语法：</strong><code>while(循环条件)&#123; 循环语句 &#125;</code></p><p><strong>解释：</strong>==只要循环条件的结果为真，就执行循环语句==</p><p><img src="https://picture.adunas.top/Article/20240312a/clip_image002-1541668640382.png" alt=""></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意：在执行循环语句时候，程序必须提供跳出循环的出口，否则出现死循环</p></blockquote><p><strong>while循环练习案例：</strong>==猜数字==</p><p><strong>案例描述：</strong>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家数字过大或过小，如果猜对恭喜玩家胜利，并且退出游戏。</p><p><img src="https://picture.adunas.top/Article/20240312a/猜数字.jpg" alt=""></p><h3 id="do…while循环语句"><a href="#do…while循环语句" class="headerlink" title="do…while循环语句"></a>do…while循环语句</h3><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong> <code>do&#123; 循环语句 &#125; while(循环条件);</code></p><p><strong>注意：</strong>与while的区别在于==do…while会先执行一次循环语句==，再判断循环条件</p><p><img src="https://picture.adunas.top/Article/20240312a/clip_image002-1541671163478.png" alt=""></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">num++;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：与while循环区别在于，do…while先执行一次循环语句，再判断循环条件</p></blockquote><p><strong>练习案例：水仙花数</strong></p><p><strong>案例描述：</strong>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身</p><p>例如：1^3 + 5^3+ 3^3 = 153</p><p>请利用do…while语句，求出所有3位数中的水仙花数</p><h3 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h3><p><strong>作用：</strong> 满足循环条件，执行循环语句</p><p><strong>语法：</strong><code>for(起始表达式;条件表达式;末尾循环体) &#123; 循环语句; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>详解：</strong></p><p><img src="https://picture.adunas.top/Article/20240312a/1541673704101.png" alt=""></p><blockquote><p>注意：for循环中的表达式，要用分号进行分隔</p><p>总结：while , do…while, for都是开发中常用的循环语句，for循环结构比较清晰，比较常用</p></blockquote><p><strong>练习案例：敲桌子</strong></p><p>案例描述：从1开始数到数字100， 如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，我们打印敲桌子，其余数字直接打印输出。</p><p><img src="https://picture.adunas.top/Article/20240312a/timg.gif" alt=""></p><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p><strong>作用：</strong> 在循环体中再嵌套一层循环，解决一些实际问题</p><p>例如我们想在屏幕中打印如下图片，就需要利用嵌套循环</p><p><img src="https://picture.adunas.top/Article/20240312a/1541676003486.png" alt=""></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外层循环执行1次，内层循环执行1轮</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>练习案例：</strong>乘法口诀表</p><p>案例描述：利用嵌套循环，实现九九乘法表</p><p><img src="https://picture.adunas.top/Article/20240312a/0006018857256120_b.jpg" alt=""></p><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h3><p><strong>作用:</strong> 用于跳出==选择结构==或者==循环结构==</p><p>break使用的时机：</p><ul><li>出现在switch条件语句中，作用是终止case并跳出switch</li><li>出现在循环语句中，作用是跳出当前的循环语句</li><li>出现在嵌套循环中，跳出最近的内层循环语句</li></ul><p><strong>示例1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1、在switch 语句中使用break</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请选择您挑战副本的难度：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、普通&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、中等&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、困难&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是普通难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是中等难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;您选择的是困难难度&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>示例2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//2、在循环语句中用break</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//跳出循环语句</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>示例3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//在嵌套循环语句中使用break，退出内层循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h3><p><strong>作用：</strong>在==循环语句==中，跳过本次循环中余下尚未执行的语句，继续执行下一次循环</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意：continue并没有使整个循环终止，而break会跳出循环</p></blockquote><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><p><strong>作用：</strong>可以无条件跳转语句</p><p><strong>语法：</strong> <code>goto 标记;</code></p><p><strong>解释：</strong>如果标记的名称存在，执行到goto语句时，会跳转到标记的位置</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> FLAG;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;4&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">FLAG:</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;5&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意：在程序中不建议使用goto语句，以免造成程序流程混乱</p></blockquote><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>所谓数组，就是一个集合，里面存放了相同类型的数据元素</p><p><strong>特点1：</strong>数组中的每个==数据元素都是相同的数据类型==</p><p><strong>特点2：</strong>数组是由==连续的内存==位置组成的</p><p><img src="https://picture.adunas.top/Article/20240312a/1541748375356.png" alt=""></p><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="一维数组定义方式"><a href="#一维数组定义方式" class="headerlink" title="一维数组定义方式"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=42&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">一维数组定义方式</a></h3><p>一维数组定义的三种方式：</p><ol><li><code>数据类型  数组名[ 数组长度 ];</code></li><li><code>数据类型  数组名[ 数组长度 ] = &#123; 值1，值2 ...&#125;;</code></li><li><code>数据类型  数组名[ ] = &#123; 值1，值2 ...&#125;;</code></li></ol><p>示例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式1</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数];</span></span><br><span class="line"><span class="type">int</span> score[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标赋值</span></span><br><span class="line">score[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">score[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">score[<span class="number">2</span>] = <span class="number">85</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用下标输出</span></span><br><span class="line">cout &lt;&lt; score[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; score[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种定义方式</span></span><br><span class="line"><span class="comment">//数据类型 数组名[元素个数] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="comment">//如果&#123;&#125;内不足10个数据，剩余数据用0补全</span></span><br><span class="line"><span class="type">int</span> score2[<span class="number">10</span>] = &#123; <span class="number">100</span>, <span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逐个输出</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[0] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; score2[1] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个一个输出太麻烦，因此可以利用循环进行输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[] =  &#123;值1，值2 ，值3 ...&#125;;</span></span><br><span class="line"><span class="type">int</span> score3[] = &#123; <span class="number">100</span>,<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>,<span class="number">40</span>,<span class="number">30</span>,<span class="number">20</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; score3[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结1：数组名的命名规范与变量名命名规范一致，不要和变量重名</p><p>总结2：数组中下标是从0开始索引</p></blockquote><h3 id="一维数组数组名"><a href="#一维数组数组名" class="headerlink" title="一维数组数组名"></a>一维数组数组名</h3><p>一维数组名称的<strong>用途</strong>：</p><ol><li>可以统计整个数组在内存中的长度</li><li>可以获取数组在内存中的首地址</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组名用途</span></span><br><span class="line"><span class="comment">//1、可以获取整个数组占用内存空间大小</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;整个数组所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;每个元素所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组的元素个数为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、可以通过数组名获取到数组首地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组首地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第一个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组中第二个元素地址为： &quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//arr = 100; 错误，数组名是常量，因此不可以赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>注意：数组名是常量，不可以赋值</p><p>总结1：直接打印数组名，可以查看数组所占内存的首地址</p><p>总结2：对数组名进行sizeof，可以获取整个数组占内存空间的大小</p></blockquote><p><strong>练习案例1</strong>：五只小猪称体重</p><p><strong>案例描述：</strong></p><p>在一个数组中记录了五只小猪的体重，如：int arr[5] = {300,350,200,400,250};</p><p>找出并打印最重的小猪体重。</p><p><strong>练习案例2：</strong>数组元素逆置</p><p><strong>案例描述：</strong>请声明一个5个元素的数组，并且将元素逆置.</p><p>(如原数组元素为：1,3,2,5,4;逆置后输出结果为:4,5,2,3,1);</p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>作用：</strong> 最常用的排序算法，对数组内元素进行排序</p><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值。</li><li>重复以上的步骤，每次比较次数-1，直到不需要比较</li></ol><p><img src="https://picture.adunas.top/Article/20240312a/1541905327273.png" alt=""></p><p><strong>示例：</strong> 将数组 { 4,2,8,0,5,7,1,3,9 } 进行升序排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span> - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span> - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>二维数组就是在一维数组上，多加一个维度。</p><p><img src="https://picture.adunas.top/Article/20240312a/1541905559138.png" alt=""></p><h3 id="二维数组定义方式"><a href="#二维数组定义方式" class="headerlink" title="二维数组定义方式"></a>二维数组定义方式</h3><p>二维数组定义的四种方式：</p><ol><li><code>数据类型  数组名[ 行数 ][ 列数 ];</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</code></li><li><code>数据类型  数组名[ 行数 ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li><li><code>数据类型  数组名[  ][ 列数 ] = &#123; 数据1，数据2，数据3，数据4&#125;;</code></li></ol><blockquote><p>建议：以上4种定义方式，利用==第二种更加直观，提高代码的可读性==</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式1  </span></span><br><span class="line"><span class="comment">//数组类型 数组名 [行数][列数]</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; &#123;数据1，数据2 &#125; ，&#123;数据3，数据4 &#125; &#125;;</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3</span></span><br><span class="line"><span class="comment">//数据类型 数组名[行数][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">//方式4 </span></span><br><span class="line"><span class="comment">//数据类型 数组名[][列数] = &#123; 数据1，数据2 ,数据3，数据4  &#125;;</span></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：在定义二维数组时，如果初始化了数据，可以省略行数</p></blockquote><h3 id="二维数组数组名"><a href="#二维数组数组名" class="headerlink" title="二维数组数组名"></a>二维数组数组名</h3><ul><li>查看二维数组所占内存空间</li><li>获取二维数组首地址</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组数组名</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组一行大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组元素大小： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组行数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组列数： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组首地址：&quot;</span> &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行地址：&quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行地址：&quot;</span> &lt;&lt; arr[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二个元素地址：&quot;</span> &lt;&lt; &amp;arr[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结1：二维数组名就是这个数组的首地址</p><p>总结2：对二维数组名进行sizeof时，可以获取整个二维数组占用的内存空间大小</p></blockquote><h3 id="二维数组应用案例"><a href="#二维数组应用案例" class="headerlink" title="二维数组应用案例"></a><strong>二维数组应用案例</strong></h3><p><strong>考试成绩统计：</strong></p><p>案例描述：有三名同学（张三，李四，王五），在一次考试中的成绩分别如下表，<strong>请分别输出三名同学的总成绩</strong></p><div class="table-container"><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table></div><p><strong>参考答案：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> scores[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">string names[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += scores[i][j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; names[i] &lt;&lt; <span class="string">&quot;同学总成绩为： &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=50&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">概述</a></h2><p><strong>作用：</strong>将一段经常使用的代码封装起来，减少重复代码</p><p>一个较大的程序，一般分为若干个程序块，每个模块实现特定的功能。</p><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>函数的定义一般主要有5个步骤：</p><p>1、返回值类型 </p><p>2、函数名</p><p>3、参数表列</p><p>4、函数体语句 </p><p>5、return 表达式</p><p><strong>语法：</strong> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">       函数体语句</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span>表达式</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回值类型 ：一个函数可以返回一个值。在函数定义中</li><li>函数名：给函数起个名称</li><li>参数列表：使用该函数时，传入的数据</li><li>函数体语句：花括号内的代码，函数内需要执行的语句</li><li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li></ul><p><strong>示例：</strong>定义一个加法函数，实现两个数相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数的调用"><a href="#函数的调用" class="headerlink" title="函数的调用"></a>函数的调用</h2><p><strong>功能：</strong>使用定义好的函数</p><p><strong>语法：</strong><code>函数名（参数）</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> <span class="comment">//定义中的num1,num2称为形式参数，简称形参</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//调用add函数</span></span><br><span class="line"><span class="type">int</span> sum = <span class="built_in">add</span>(a, b);<span class="comment">//调用时的a，b称为实际参数，简称实参</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">sum = <span class="built_in">add</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sum = &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：函数定义里小括号内称为形参，函数调用时传入的参数称为实参</p></blockquote><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><ul><li>所谓值传递，就是函数调用时实参将数值传入给形参</li><li>值传递时，==如果形参发生，并不会影响实参==</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> temp = num1;</span><br><span class="line">num1 = num2;</span><br><span class="line">num2 = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return ; 当函数声明时候，不需要返回值，可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;mian中的 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结： 值传递时，形参是修饰不了实参的</p></blockquote><h2 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a><strong>函数的常见样式</strong></h2><p>常见的函数样式有4种</p><ol><li>无参无返</li><li>有参无返</li><li>无参有返</li><li>有参有返</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数常见样式</span></span><br><span class="line"><span class="comment">//1、 无参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//void a = 10; //无类型不可以创建变量,原因无法分配内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//test01(); 函数调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、 有参无返</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test02&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、无参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、有参有返</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04 &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> sum = a + b;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h2><p><strong>作用：</strong> 告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><ul><li>函数的<strong>声明可以多次</strong>，但是函数的<strong>定义只能有一次</strong></li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明可以多次，定义只能一次</span></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a, b) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h2><p><strong>作用：</strong>让代码结构更加清晰</p><p>函数分文件编写一般有4个步骤</p><ol><li>创建后缀名为.h的头文件  </li><li>创建后缀名为.cpp的源文件</li><li>在头文件中写函数的声明</li><li>在源文件中写函数的定义</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.h文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现两个数字交换的函数声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap.cpp文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><h2 id="指针的基本概念"><a href="#指针的基本概念" class="headerlink" title="指针的基本概念"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=56&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">指针的基本概念</a></h2><p><strong>指针的作用：</strong> 可以通过指针间接访问内存</p><ul><li>内存编号是从0开始记录的，一般用十六进制数字表示</li><li><p>可以利用指针变量保存地址</p><p>​</p></li></ul><h2 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h2><p>指针变量定义语法： <code>数据类型 * 变量名；</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、指针的定义</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//定义整型变量a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针定义语法： 数据类型 * 变量名 ;</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量赋值</span></span><br><span class="line">p = &amp;a; <span class="comment">//指针指向变量a的地址</span></span><br><span class="line">cout &lt;&lt; &amp;a &lt;&lt; endl; <span class="comment">//打印数据a的地址</span></span><br><span class="line">cout &lt;&lt; p &lt;&lt; endl;  <span class="comment">//打印指针变量p</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、指针的使用</span></span><br><span class="line"><span class="comment">//通过*操作指针变量指向的内存</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p>指针变量和普通变量的区别</p><ul><li>普通变量存放的是数据,指针变量存放的是地址</li><li>指针变量可以通过” * “操作符，操作指针变量指向的内存空间，这个过程称为解引用</li></ul><blockquote><p>总结1： 我们可以通过 &amp; 符号 获取变量的地址</p><p>总结2：利用指针可以记录地址</p><p>总结3：对指针变量解引用，可以操作指针指向的内存</p></blockquote><h2 id="指针所占内存空间"><a href="#指针所占内存空间" class="headerlink" title="指针所占内存空间"></a>指针所占内存空间</h2><p>提问：指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line">p = &amp;a; <span class="comment">//指针指向数据a的地址</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl; <span class="comment">//* 解引用</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">float</span> *) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> *) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：所有指针类型在32位操作系统下是4个字节</p></blockquote><h2 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h2><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间</p><p><strong>用途：</strong>初始化指针变量</p><p><strong>注意：</strong>空指针指向的内存是不可以访问的</p><p><strong>示例1：空指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0的空间</span></span><br><span class="line"><span class="type">int</span> * p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问空指针报错 </span></span><br><span class="line"><span class="comment">//内存编号0 ~255为系统占用内存，不允许用户访问</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><p><strong>野指针</strong>：指针变量指向非法的内存空间</p><p><strong>示例2：野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针变量p指向内存地址编号为0x1100的空间</span></span><br><span class="line"><span class="type">int</span> * p = (<span class="type">int</span> *)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问野指针报错 </span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：空指针和野指针都不是我们申请的空间，因此不要访问。</p></blockquote><h2 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h2><p>const修饰指针有三种情况</p><ol><li>const修饰指针   —- 常量指针</li><li>const修饰常量   —- 指针常量</li><li>const即修饰指针，又修饰常量</li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是指针，指针指向可以改，指针指向的值不可以更改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * p1 = &amp;a; </span><br><span class="line">p1 = &amp;b; <span class="comment">//正确</span></span><br><span class="line"><span class="comment">//*p1 = 100;  报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const修饰的是常量，指针指向不可以改，指针指向的值可以更改</span></span><br><span class="line"><span class="type">int</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line"><span class="comment">//p2 = &amp;b; //错误</span></span><br><span class="line">*p2 = <span class="number">100</span>; <span class="comment">//正确</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//const既修饰指针又修饰常量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> * <span class="type">const</span> p3 = &amp;a;</span><br><span class="line"><span class="comment">//p3 = &amp;b; //错误</span></span><br><span class="line"><span class="comment">//*p3 = 100; //错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>技巧：看const右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量</p></blockquote><h2 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h2><p><strong>作用：</strong>利用指针访问数组中元素</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> * p = arr;  <span class="comment">//指向数组的指针</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素： &quot;</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针访问第一个元素： &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h2><p><strong>作用：</strong>利用指针作函数参数，可以修改实参的值</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap1</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = a;</span><br><span class="line">a = b; </span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap2</span><span class="params">(<span class="type">int</span> * p1, <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap1</span>(a, b); <span class="comment">// 值传递不会改变实参</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">swap2</span>(&amp;a, &amp;b); <span class="comment">//地址传递会改变实参</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：如果不想修改实参，就用值传递，如果想修改实参，就用地址传递</p></blockquote><h2 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h2><p><strong>案例描述：</strong>封装一个函数，利用冒泡排序，实现对整型数组的升序排序</p><p>例如数组：int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span> * arr, <span class="type">int</span> len)</span>  <span class="comment">//int * arr 也可以写为int arr[]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：当数组名传入到函数作为参数时，被退化为指向首元素的指针</p></blockquote><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><h2 id="结构体基本概念"><a href="#结构体基本概念" class="headerlink" title="结构体基本概念"></a>结构体基本概念</h2><p>结构体属于用户==自定义的数据类型==，允许用户存储不同的数据类型</p><h2 id="结构体定义和使用"><a href="#结构体定义和使用" class="headerlink" title="结构体定义和使用"></a><a href="https://www.bilibili.com/video/BV1et411b73Z/?p=64&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">结构体定义和使用</a></h2><p><strong>语法：</strong><code>struct 结构体名 &#123; 结构体成员列表 &#125;；</code></p><p>通过结构体创建变量的方式有三种：</p><ul><li>struct 结构体名 变量名</li><li>struct 结构体名 变量名 = { 成员1值 ， 成员2值…}</li><li>定义结构体时顺便创建变量</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;stu3; <span class="comment">//结构体变量创建方式3 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式1</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu1; <span class="comment">//struct 关键字可以省略</span></span><br><span class="line"></span><br><span class="line">stu1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">stu1.age = <span class="number">18</span>;</span><br><span class="line">stu1.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu1.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu1.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu1.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量创建方式2</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu2 = &#123; <span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu2.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu2.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu2.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stu3.name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line">stu3.age = <span class="number">18</span>;</span><br><span class="line">stu3.score = <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu3.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu3.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu3.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结1：定义结构体时的关键字是struct，不可省略</p><p>总结2：创建结构体变量时，关键字struct可以省略</p><p>总结3：结构体变量利用操作符 ‘’.’’  访问成员</p></blockquote><h2 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h2><p><strong>作用：</strong>将自定义的结构体放入到数组中方便维护</p><p><strong>语法：</strong><code>struct  结构体名 数组名[元素个数] = &#123;  &#123;&#125; , &#123;&#125; , ... &#123;&#125; &#125;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体数组</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> arr[<span class="number">3</span>]=</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">80</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;李四&quot;</span>,<span class="number">19</span>,<span class="number">60</span> &#125;,</span><br><span class="line">&#123;<span class="string">&quot;王五&quot;</span>,<span class="number">20</span>,<span class="number">70</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; arr[i].age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; arr[i].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h2><p><strong>作用：</strong>通过指针访问结构体中的成员</p><ul><li>利用操作符 <code>-&gt;</code>可以通过结构体指针访问结构体属性</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> * p = &amp;stu;</span><br><span class="line"></span><br><span class="line">p-&gt;score = <span class="number">80</span>; <span class="comment">//指针通过 -&gt; 操作符可以访问成员</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：结构体指针可以通过 -&gt; 操作符 来访问结构体中的成员</p></blockquote><h2 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h2><p><strong>作用：</strong> 结构体中的成员可以是另一个结构体</p><p><strong>例如：</strong>每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//成员列表</span></span><br><span class="line"><span class="type">int</span> id; <span class="comment">//职工编号</span></span><br><span class="line">string name;  <span class="comment">//教师姓名</span></span><br><span class="line"><span class="type">int</span> age;   <span class="comment">//教师年龄</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> stu; <span class="comment">//子结构体 学生</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">teacher</span> t1;</span><br><span class="line">t1.id = <span class="number">10000</span>;</span><br><span class="line">t1.name = <span class="string">&quot;老王&quot;</span>;</span><br><span class="line">t1.age = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">t1.stu.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">t1.stu.age = <span class="number">18</span>;</span><br><span class="line">t1.stu.score = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;教师 职工编号： &quot;</span> &lt;&lt; t1.id &lt;&lt; <span class="string">&quot; 姓名： &quot;</span> &lt;&lt; t1.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; t1.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;辅导学员 姓名： &quot;</span> &lt;&lt; t1.stu.name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; t1.stu.age &lt;&lt; <span class="string">&quot; 考试分数： &quot;</span> &lt;&lt; t1.stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><p><strong>总结：</strong>在结构体中可以定义另一个结构体作为成员，用来解决实际问题</p><h2 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h2><p><strong>作用：</strong>将结构体作为参数向函数中传递</p><p>传递方式有两种：</p><ul><li>值传递</li><li>地址传递</li></ul><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(student stu )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu.age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent2</span><span class="params">(student *stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stu-&gt;age = <span class="number">28</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子函数中 姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu-&gt;age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span>&#125;;</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="built_in">printStudent</span>(stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址传递</span></span><br><span class="line"><span class="built_in">printStudent2</span>(&amp;stu);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;主函数中 姓名：&quot;</span> &lt;&lt; stu.name &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; stu.age  &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu.score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><blockquote><p>总结：如果不想修改主函数中的数据，用值传递，反之用地址传递</p></blockquote><h2 id="结构体中-const使用场景"><a href="#结构体中-const使用场景" class="headerlink" title="结构体中 const使用场景"></a>结构体中 const使用场景</h2><p><strong>作用：</strong>用const来防止误操作</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生结构体定义</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//成员列表</span></span><br><span class="line">string name;  <span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> age;      <span class="comment">//年龄</span></span><br><span class="line"><span class="type">int</span> score;    <span class="comment">//分数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const使用场景</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(<span class="type">const</span> student *stu)</span> <span class="comment">//加const防止函数体中的误操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//stu-&gt;age = 100; //操作失败，因为加了const修饰</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; stu-&gt;name &lt;&lt; <span class="string">&quot; 年龄：&quot;</span> &lt;&lt; stu-&gt;age &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; stu-&gt;score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">student stu = &#123; <span class="string">&quot;张三&quot;</span>,<span class="number">18</span>,<span class="number">100</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(&amp;stu);</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h2 id="结构体案例"><a href="#结构体案例" class="headerlink" title="结构体案例"></a>结构体案例</h2><h3 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h3><p><strong>案例描述：</strong></p><p>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，需求如下</p><p>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员</p><p>学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值</p><p>最终打印出老师数据以及老师所带的学生数据。</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line">Student sArray[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocateSpace</span><span class="params">(Teacher tArray[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string tName = <span class="string">&quot;教师&quot;</span>;</span><br><span class="line">string sName = <span class="string">&quot;学生&quot;</span>;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].name = tName + nameSeed[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArray[i].sArray[j].name = sName + nameSeed[j];</span><br><span class="line">tArray[i].sArray[j].score = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeachers</span><span class="params">(Teacher tArray[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; tArray[i].name &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span> &lt;&lt; tArray[i].sArray[j].name &lt;&lt; <span class="string">&quot; 分数：&quot;</span> &lt;&lt; tArray[i].sArray[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>)); <span class="comment">//随机数种子 头文件 #include &lt;ctime&gt;</span></span><br><span class="line"></span><br><span class="line">Teacher tArray[<span class="number">3</span>]; <span class="comment">//老师数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArray) / <span class="built_in">sizeof</span>(Teacher);</span><br><span class="line"></span><br><span class="line"><span class="built_in">allocateSpace</span>(tArray, len); <span class="comment">//创建数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeachers</span>(tArray, len); <span class="comment">//打印数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p><h3 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h3><p><strong>案例描述：</strong></p><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。</p><p>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//英雄结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(hero arr[] , <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j].age &gt; arr[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printHeros</span><span class="params">(hero arr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名： &quot;</span> &lt;&lt; arr[i].name &lt;&lt; <span class="string">&quot; 性别： &quot;</span> &lt;&lt; arr[i].sex &lt;&lt; <span class="string">&quot; 年龄： &quot;</span> &lt;&lt; arr[i].age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span> arr[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(hero); <span class="comment">//获取数组元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr, len); <span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printHeros</span>(arr, len); <span class="comment">//打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ros</title>
      <link href="/posts/20240318g.html"/>
      <url>/posts/20240318g.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#Ros">编程导航</a></h1><p>&emsp;&emsp;Ros </p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编</title>
      <link href="/posts/20240320a.html"/>
      <url>/posts/20240320a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#汇编">编程导航</a></h1><h1 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h1><p>&emsp;&emsp;明确学习汇编语言的目的。</p><ol><li>接触计算机原理，理解代码的底层逻辑。</li><li>不要求专门学习，目标是能看懂一些核心、关键代码。</li><li>方便在调试 c 语言时，进行反汇编，深入理解 c 语言内涵，方便查找 bug。</li></ol><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>&emsp;&emsp;每一条汇编语言都对应一个机器码，汇编语言相当于机器码的助记符。不同机器有不同的机器码，所以汇编语言不能移植，但是执行效率高，实行性好。</p><p>&emsp;&emsp;重点介绍语法。</p><h1 id="push"><a href="#push" class="headerlink" title="push"></a>push</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">push ebp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov         ; 传送指令</span><br><span class="line">mov ax, 8   ; (ax) = 8</span><br><span class="line">mov ax, bx  ; (ax) = (bx)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandoc</title>
      <link href="/posts/20240304b.html"/>
      <url>/posts/20240304b.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#Pandoc">编程导航</a></h1><p>&emsp;&emsp;Pandoc 是一个开源的文本转换工具。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离骚（节选）</title>
      <link href="/posts/20240304a.html"/>
      <url>/posts/20240304a.html</url>
      
        <content type="html"><![CDATA[<h1 id="阅读导航"><a href="#阅读导航" class="headerlink" title="阅读导航"></a><a href="./20240224b.html#离骚（节选）">阅读导航</a></h1><div class='poem'><div class='poem-title'>离骚（节选）</div><div class='poem-author'>屈原</div><p>长太息以掩涕兮，哀民生之多艰。余虽好修姱以鞿羁兮，謇朝谇而夕替。</p><p>既替余以蕙纕兮，又申之以揽茝。亦余心之所善兮，虽九死其犹未悔。</p><p>怨灵修之浩荡兮，终不察夫民心。众女嫉余之蛾眉兮，谣诼谓余以善淫。</p><p>固时俗之工巧兮，偭规矩而改错。背绳墨以追曲兮，竞周容以为度。</p><p>忳郁邑余侘傺兮，吾独穷困乎此时也。宁溘死以流亡兮，余不忍为此态也。</p><p>鸷鸟之不群兮，自前世而固然。何方圜之能周兮，夫孰异道而相安？</p><p>屈心而抑志兮，忍尤而攘诟。伏清白以死直兮，固前圣之所厚。</p><p>悔相道之不察兮，延伫乎吾将反。回朕车以复路兮，及行迷之未远。</p><p>步余马于兰皋兮，驰椒丘且焉止息。进不入以离尤兮，退将复修吾初服。</p><p>制芰荷以为衣兮，集芙蓉以为裳。不吾知其亦已兮，苟余情其信芳。</p><p>高余冠之岌岌兮，长余佩之陆离。芳与泽其杂糅兮，唯昭质其犹未亏。</p><p>忽反顾以游目兮，将往观乎四荒。佩缤纷其繁饰兮，芳菲菲其弥章。</p><p>民生各有所乐兮，余独好修以为常。虽体解吾犹未变兮，岂余心之可惩。</p></div><p>情感过头：</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/Read/LiSaoAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><p>朗读勘误：背绳墨以追曲兮，其中 “曲” 为二声，和直相对。</p><p>情感不足，改正读音错误，补全最后一句：</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/Read/LiSaoAdunasB.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex</title>
      <link href="/posts/20240225c.html"/>
      <url>/posts/20240225c.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#Latex">编程导航</a></h1><p>&emsp;&emsp;易用难精。<a href="https://youtu.be/HPSK7q13-40?si=-mt3QWOA63NQ4pvm">How to Convert a Word Document to Markdown for Free using Pandoc</a></p><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">α A <span class="keyword">\alpha</span> A <span class="keyword">\\</span></span><br><span class="line">β B <span class="keyword">\beta</span> B <span class="keyword">\\</span></span><br><span class="line">γ Γ <span class="keyword">\gamma</span> <span class="keyword">\Gamma</span> <span class="keyword">\\</span></span><br><span class="line">δ Δ <span class="keyword">\delta</span> <span class="keyword">\Delta</span> <span class="keyword">\\</span></span><br><span class="line">ϵ ε E <span class="keyword">\epsilon</span> <span class="keyword">\varepsilon</span> E <span class="keyword">\\</span></span><br><span class="line">ζ Z <span class="keyword">\zeta</span> Z <span class="keyword">\\</span></span><br><span class="line">η H <span class="keyword">\eta</span> H <span class="keyword">\\</span></span><br><span class="line">θ ϑ Θ <span class="keyword">\theta</span> <span class="keyword">\vartheta</span> <span class="keyword">\Theta</span> <span class="keyword">\\</span></span><br><span class="line">ι I <span class="keyword">\iota</span> I <span class="keyword">\\</span></span><br><span class="line">κ K <span class="keyword">\kappa</span> K <span class="keyword">\\</span></span><br><span class="line">λ Λ <span class="keyword">\lambda</span> <span class="keyword">\Lambda</span> <span class="keyword">\\</span></span><br><span class="line">μ M <span class="keyword">\mu</span> M <span class="keyword">\\</span></span><br><span class="line">ν V <span class="keyword">\nu</span> V <span class="keyword">\\</span></span><br><span class="line">ξ Ξ <span class="keyword">\xi</span> <span class="keyword">\Xi</span> <span class="keyword">\\</span></span><br><span class="line">ο O o O <span class="keyword">\\</span></span><br><span class="line">π Π <span class="keyword">\pi</span> <span class="keyword">\Pi</span> <span class="keyword">\\</span></span><br><span class="line">ρ ϱ P <span class="keyword">\rho</span> <span class="keyword">\varrho</span> P <span class="keyword">\\</span></span><br><span class="line">σ Σ <span class="keyword">\sigma</span> <span class="keyword">\Sigma</span> <span class="keyword">\\</span></span><br><span class="line">τ T <span class="keyword">\tau</span> T <span class="keyword">\\</span></span><br><span class="line">υ Υ <span class="keyword">\upsilon</span> <span class="keyword">\Upsilon</span> <span class="keyword">\\</span></span><br><span class="line">ϕ φ Φ <span class="keyword">\phi</span> <span class="keyword">\varphi</span> <span class="keyword">\Phi</span> <span class="keyword">\\</span></span><br><span class="line">χ X <span class="keyword">\chi</span> X <span class="keyword">\\</span></span><br><span class="line">ψ Ψ <span class="keyword">\psi</span> <span class="keyword">\Psi</span> <span class="keyword">\\</span></span><br><span class="line">ω Ω <span class="keyword">\omega</span> <span class="keyword">\Omega</span> <span class="keyword">\\</span></span><br></pre></td></tr></table></figure><h3 id="不等于"><a href="#不等于" class="headerlink" title="不等于"></a>不等于</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\neq</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\neq</script><h3 id="大于等于"><a href="#大于等于" class="headerlink" title="大于等于"></a>大于等于</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\geq</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\geq</script><h3 id="小于等于"><a href="#小于等于" class="headerlink" title="小于等于"></a>小于等于</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\leq</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\leq</script><h3 id="点乘"><a href="#点乘" class="headerlink" title="点乘"></a>点乘</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\cdot</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\cdot</script><h3 id="叉乘"><a href="#叉乘" class="headerlink" title="叉乘"></a>叉乘</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\times</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\times</script><h3 id="分式"><a href="#分式" class="headerlink" title="分式"></a>分式</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\frac</span>&#123;a&#125;&#123;b&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\frac{a}{b}</script><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\mathbf</span>&#123;dT(P)&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\mathbf{dT(P)}</script><h3 id="单括号"><a href="#单括号" class="headerlink" title="单括号"></a>单括号</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\left</span><span class="keyword">\&#123;</span></span><br><span class="line"><span class="keyword">\right</span>.</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\left\{\right.</script><p>一般情况下，括号是成对使用的，用一半的话需要手动取消。其中<code>\right.</code>就是手动取消的表达式。</p><h3 id="矢量"><a href="#矢量" class="headerlink" title="矢量"></a>矢量</h3><p>&emsp;&emsp;向右箭头，这个不标准。</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\overrightarrow</span>&#123;a&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\overrightarrow{a}</script><p>矢量，正确的表达：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\vec</span>&#123;a&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\vec{a}</script><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><ol><li>左对齐</li><li>右对齐</li><li>等号处对齐 align，在 &amp; 处对齐</li></ol><h3 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\mathop</span>&#123;<span class="keyword">\sum</span>&#125;<span class="built_in">_</span>&#123;a=<span class="keyword">\frac</span>&#123;1&#125;&#123;2&#125; <span class="keyword">\times</span> 10&#125;<span class="built_in">^</span>&#123;b=<span class="keyword">\frac</span>&#123;4&#125;&#123;5&#125;&#125;c <span class="keyword">\cdot</span> d</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\mathop</span>&#123;<span class="keyword">\sum</span>&#125;<span class="keyword">\limits</span><span class="built_in">_</span>&#123;a=<span class="keyword">\frac</span>&#123;1&#125;&#123;2&#125; <span class="keyword">\times</span> 10&#125;<span class="built_in">^</span>&#123;b=<span class="keyword">\frac</span>&#123;4&#125;&#123;5&#125;&#125;c <span class="keyword">\cdot</span> d</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\mathop{\sum}_{a=\frac{1}{2} \times 10}^{b=\frac{4}{5}}c \cdot d</script><script type="math/tex; mode=display">\mathop{\sum}\limits_{a=\frac{1}{2} \times 10}^{b=\frac{4}{5}}c \cdot d</script><h3 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Y=<span class="keyword">\&#123;</span>y<span class="built_in">_</span>1, y<span class="built_in">_</span>2, <span class="keyword">\ldots</span>, y<span class="built_in">_</span>n<span class="keyword">\&#125;</span>,</span><br><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">    x<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;12&#125;  <span class="built_in">&amp;</span> <span class="keyword">\cdots</span>   <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;1m&#125;   <span class="keyword">\\</span></span><br><span class="line">    x<span class="built_in">_</span>&#123;21&#125; <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;22&#125;  <span class="built_in">&amp;</span> <span class="keyword">\cdots</span>   <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;2m&#125;  <span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\vdots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span>  <span class="built_in">&amp;</span> <span class="keyword">\ddots</span>   <span class="built_in">&amp;</span> <span class="keyword">\vdots</span>  <span class="keyword">\\</span></span><br><span class="line">    x<span class="built_in">_</span>&#123;n1&#125; <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;n2&#125;  <span class="built_in">&amp;</span> <span class="keyword">\cdots</span><span class="keyword">\ </span> <span class="built_in">&amp;</span> x<span class="built_in">_</span>&#123;nm&#125;  <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">Y=\{y_1, y_2, \ldots, y_n\},\begin{bmatrix}    x_{11} & x_{12}  & \cdots   & x_{1m}   \\    x_{21} & x_{22}  & \cdots   & x_{2m}  \\    \vdots & \vdots  & \ddots   & \vdots  \\    x_{n1} & x_{n2}  & \cdots\  & x_{nm}  \\\end{bmatrix}</script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/posts/20240225a.html"/>
      <url>/posts/20240225a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><ol><li>源文件链接：<a href="https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md">learn-regex</a></li><li>视频参考：<a href="https://www.bilibili.com/video/BV1da4y1p7iZ/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【10分钟快速掌握正则表达式】</a></li></ol></div><h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#正则表达式">编程导航</a></h1><h1 id="什么是正则表达式？"><a href="#什么是正则表达式？" class="headerlink" title="什么是正则表达式？"></a>什么是正则表达式？</h1><p><a href="https://gum.co/learn-regex"><img src="https://img.shields.io/badge/-Download%20PDF%20-0a0a0a.svg?style=flat&amp;colorA=0a0a0a" alt=""></a></p><blockquote><p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p></blockquote><p>&emsp;&emsp;一个正则表达式是一种从左到右匹配主体字符串的模式。<br>“Regular expression” 这个词比较拗口，我们常使用缩写的术语“regex”或“regexp”。<br>正则表达式可以从一个基础字符串中根据一定的匹配模式替换文本中的字符串、验证表单、提取字符串等等。</p><p>&emsp;&emsp;想象你正在写一个应用，然后你想设定一个用户命名的规则，让用户名包含字符、数字、下划线和连字符，以及限制字符的个数，好让名字看起来没那么丑。<br>我们使用以下正则表达式来验证一个用户名：</p><p><br/><br/></p><p align="center">  <img src="https://picture.adunas.top/Article/20240225a/regexp-cn.png" alt="Regular expression"></p><p>以上的正则表达式可以接受 <code>john_doe</code>、<code>jo-hn_doe</code>、<code>john12_as</code>。<br>但不匹配<code>Jo</code>，因为它包含了大写的字母而且太短了。</p><h1 id="基本匹配"><a href="#基本匹配" class="headerlink" title="基本匹配"></a>基本匹配</h1><p>&emsp;&emsp;正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。<br>例如：一个正则表达式 <code>the</code>，它表示一个规则：由字母<code>t</code>开始，接着是<code>h</code>，再接着是<code>e</code>。</p><pre>"the" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/dmRygT/1">在线练习</a></p><p>正则表达式<code>123</code>匹配字符串<code>123</code>。它逐个字符的与输入的正则表达式做比较。</p><p>正则表达式是大小写敏感的，所以<code>The</code>不会匹配<code>the</code>。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/1paXsy/1">在线练习</a></p><h1 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h1><p>&emsp;&emsp;正则表达式主要依赖于元字符。<br>元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：</p><div class="table-container"><table><thead><tr><th style="text-align:center">元字符</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>句号匹配任意单个字符除了换行符。</td></tr><tr><td style="text-align:center">[ ]</td><td>字符种类。匹配方括号内的任意字符。</td></tr><tr><td style="text-align:center"><sup><a href="#fn_ " id="reffn_ "> </a></sup></td><td>否定的字符种类。匹配除了方括号里的任意字符</td></tr><tr><td style="text-align:center">*</td><td>匹配&gt;=0个重复的在*号之前的字符。</td></tr><tr><td style="text-align:center">+</td><td>匹配&gt;=1个重复的+号前的字符。</td></tr><tr><td style="text-align:center">?</td><td>标记?之前的字符为可选.</td></tr><tr><td style="text-align:center">{n,m}</td><td>匹配num个大括号之前的字符或字符集 (n &lt;= num &lt;= m).</td></tr><tr><td style="text-align:center">(xyz)</td><td>字符集，匹配与 xyz 完全相等的字符串.</td></tr><tr><td style="text-align:center">&#124;</td><td>或运算符，匹配符号前或后的字符.</td></tr><tr><td style="text-align:center">&#92;</td><td>转义字符,用于匹配一些保留的字符 <code>[ ] ( ) &#123; &#125; . * + ? ^ $ \ &#124;</code></td></tr><tr><td style="text-align:center">^</td><td>从开始行开始匹配.</td></tr><tr><td style="text-align:center">$</td><td>从末端开始匹配.</td></tr></tbody></table></div><h1 id="点运算符"><a href="#点运算符" class="headerlink" title="点运算符 ."></a>点运算符 <code>.</code></h1><p>&emsp;&emsp;<code>.</code>是元字符中最简单的例子。<br><code>.</code>匹配任意单个字符，但不匹配换行符。<br>例如，表达式<code>.ar</code>匹配一个任意字符后面跟着是<code>a</code>和<code>r</code>的字符串。</p><pre>".ar" => The <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/xc9GkU/1">在线练习</a></p><h1 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h1><p>&emsp;&emsp;字符集也叫做字符类。<br>方括号用来指定一个字符集。<br>在方括号中使用连字符来指定字符集的范围。<br>在方括号中的字符集不关心顺序。<br>例如，表达式<code>[Tt]he</code> 匹配 <code>the</code> 和 <code>The</code>。</p><pre>"[Tt]he" => <a href="#learn-regex"><strong>The</strong></a> car parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/2ITLQ4/1">在线练习</a></p><p>方括号的句号就表示句号。<br>表达式 <code>ar[.]</code> 匹配 <code>ar.</code>字符串</p><pre>"ar[.]" => A garage is a good place to park a c<a href="#learn-regex"><strong>ar.</strong></a></pre><p><a href="https://regex101.com/r/wL3xtE/1">在线练习</a></p><h2 id="否定字符集"><a href="#否定字符集" class="headerlink" title="否定字符集"></a>否定字符集</h2><p>&emsp;&emsp;一般来说 <code>^</code> 表示一个字符串的开头，但它用在一个方括号的开头的时候，它表示这个字符集是否定的。<br>例如，表达式<code>[^c]ar</code> 匹配一个后面跟着<code>ar</code>的除了<code>c</code>的任意字符。</p><pre>"[^c]ar" => The car <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/nNNlq3/1">在线练习</a></p><h1 id="重复次数"><a href="#重复次数" class="headerlink" title="重复次数"></a>重复次数</h1><p>&emsp;&emsp;后面跟着元字符 <code>+</code>，<code>*</code> or <code>?</code> 的，用来指定匹配子模式的次数。<br>这些元字符在不同的情况下有着不同的意思。</p><h2 id="号"><a href="#号" class="headerlink" title="* 号"></a><code>*</code> 号</h2><p>&emsp;&emsp;<code>*</code>号匹配 在<code>*</code>之前的字符出现<code>大于等于0</code>次。<br>例如，表达式 <code>a*</code> 匹配0或更多个以a开头的字符。表达式<code>[a-z]*</code> 匹配一个行中所有以小写字母开头的字符串。</p><pre>"[a-z]*" => T<a href="#learn-regex"><strong>he</strong></a> <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>parked</strong></a> <a href="#learn-regex"><strong>in</strong></a> <a href="#learn-regex"><strong>the</strong></a> <a href="#learn-regex"><strong>garage</strong></a> #21.</pre><p><a href="https://regex101.com/r/7m8me5/1">在线练习</a></p><p><code>*</code>字符和<code>.</code>字符搭配可以匹配所有的字符<code>.*</code>。<br><code>*</code>和表示匹配空格的符号<code>\s</code>连起来用，如表达式<code>\s*cat\s*</code>匹配0或更多个空格开头和0或更多个空格结尾的cat字符串。</p><pre>"\s*cat\s*" => The fat<a href="#learn-regex"><strong> cat </strong></a>sat on the con<a href="#learn-regex"><strong>cat</strong></a>enation.</pre><p><a href="https://regex101.com/r/gGrwuz/1">在线练习</a></p><h2 id="号-1"><a href="#号-1" class="headerlink" title="+ 号"></a><code>+</code> 号</h2><p>&emsp;&emsp;<code>+</code>号匹配<code>+</code>号之前的字符出现 &gt;=1 次。<br>例如表达式<code>c.+t</code> 匹配以首字母<code>c</code>开头以<code>t</code>结尾，中间跟着至少一个字符的字符串。</p><pre>"c.+t" => The fat <a href="#learn-regex"><strong>cat sat on the mat</strong></a>.</pre><p><a href="https://regex101.com/r/Dzf9Aa/1">在线练习</a></p><h2 id="号-2"><a href="#号-2" class="headerlink" title="? 号"></a><code>?</code> 号</h2><p>&emsp;&emsp;在正则表达式中元字符 <code>?</code> 标记在符号前面的字符为可选，即出现 0 或 1 次。<br>例如，表达式 <code>[T]?he</code> 匹配字符串 <code>he</code> 和 <code>The</code>。</p><pre>"[T]he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/cIg9zm/1">在线练习</a></p><pre>"[T]?he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in t<a href="#learn-regex"><strong>he</strong></a> garage.</pre><p><a href="https://regex101.com/r/kPpO2x/1">在线练习</a></p><h1 id="号-3"><a href="#号-3" class="headerlink" title="{} 号"></a><code>&#123;&#125;</code> 号</h1><p>&emsp;&emsp;在正则表达式中 <code>&#123;&#125;</code> 是一个量词，常用来限定一个或一组字符可以重复出现的次数。<br>例如， 表达式 <code>[0-9]&#123;2,3&#125;</code> 匹配最少 2 位最多 3 位 的数字。</p><pre>"[0-9]{2,3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/juM86s/1">在线练习</a></p><p>我们可以省略第二个参数。<br>例如，<code>[0-9]&#123;2,&#125;</code> 匹配至少两位 的数字。</p><pre>"[0-9]{2,}" => The number was 9.<a href="#learn-regex"><strong>9997</strong></a> but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/Gdy4w5/1">在线练习</a></p><p>如果逗号也省略掉则表示重复固定的次数。<br>例如，<code>[0-9]&#123;3&#125;</code> 匹配3位数字</p><pre>"[0-9]{3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to 10.0.</pre><p><a href="https://regex101.com/r/Sivu30/1">在线练习</a></p><h1 id="特征标群"><a href="#特征标群" class="headerlink" title="(...) 特征标群"></a><code>(...)</code> 特征标群</h1><p>&emsp;&emsp;特征标群是一组写在 <code>(...)</code> 中的子模式。<code>(...)</code> 中包含的内容将会被看成一个整体，和数学中小括号（ ）的作用相同。例如, 表达式 <code>(ab)*</code> 匹配连续出现 0 或更多个 <code>ab</code>。如果没有使用 <code>(...)</code> ，那么表达式 <code>ab*</code> 将匹配连续出现 0 或更多个 <code>b</code> 。再比如之前说的 <code>&#123;&#125;</code> 是用来表示前面一个字符出现指定次数。但如果在 <code>&#123;&#125;</code> 前加上特征标群 <code>(...)</code> 则表示整个标群内的字符重复 N 次。</p><p>我们还可以在 <code>()</code> 中用或字符 <code>|</code> 表示或。例如，<code>(c|g|p)ar</code> 匹配 <code>car</code> 或 <code>gar</code> 或 <code>par</code>.</p><pre>"(c|g|p)ar" => The <a href="#learn-regex"><strong>car</strong></a> is <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/tUxrBG/1">在线练习</a></p><h1 id="或运算符"><a href="#或运算符" class="headerlink" title="| 或运算符"></a><code>|</code> 或运算符</h1><p>&emsp;&emsp;或运算符就表示或，用作判断条件。</p><p>例如 <code>(T|t)he|car</code> 匹配 <code>(T|t)he</code> 或 <code>car</code>。</p><pre>"(T|t)he|car" => <a href="#learn-regex"><strong>The</strong></a> <a href="#learn-regex"><strong>car</strong></a> is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/fBXyX0/1">在线练习</a></p><h1 id="转码特殊字符"><a href="#转码特殊字符" class="headerlink" title="转码特殊字符"></a>转码特殊字符</h1><p>&emsp;&emsp;反斜线 <code>\</code> 在表达式中用于转码紧跟其后的字符。用于指定 <code>&#123; &#125; [ ] / \ + * . $ ^ | ?</code> 这些特殊字符。如果想要匹配这些特殊字符则要在其前面加上反斜线 <code>\</code>。</p><p>例如 <code>.</code> 是用来匹配除换行符外的所有字符的。如果想要匹配句子中的 <code>.</code> 则要写成 <code>\.</code> 以下这个例子 <code>\.?</code>是选择性匹配<code>.</code></p><pre>"(f|c|m)at\.?" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> sat on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/DOc5Nu/1">在线练习</a></p><h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><p>&emsp;&emsp;在正则表达式中，想要匹配指定开头或结尾的字符串就要使用到锚点。<code>^</code> 指定开头，<code>$</code> 指定结尾。</p><h2 id="号-4"><a href="#号-4" class="headerlink" title="^ 号"></a><code>^</code> 号</h2><p>&emsp;&emsp;<code>^</code> 用来检查匹配的字符串是否在所匹配字符串的开头。</p><p>例如，在 <code>abc</code> 中使用表达式 <code>^a</code> 会得到结果 <code>a</code>。但如果使用 <code>^b</code> 将匹配不到任何结果。因为在字符串 <code>abc</code> 中并不是以 <code>b</code> 开头。</p><p>例如，<code>^(T|t)he</code> 匹配以 <code>The</code> 或 <code>the</code> 开头的字符串。</p><pre>"(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/5ljjgB/1">在线练习</a></p><pre>"^(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/jXrKne/1">在线练习</a></p><h2 id="号-5"><a href="#号-5" class="headerlink" title="$ 号"></a><code>$</code> 号</h2><p>&emsp;&emsp;同理于 <code>^</code> 号，<code>$</code> 号用来匹配字符是否是最后一个。</p><p>例如，<code>(at\.)$</code> 匹配以 <code>at.</code> 结尾的字符串。</p><pre>"(at\.)" => The fat c<a href="#learn-regex"><strong>at.</strong></a> s<a href="#learn-regex"><strong>at.</strong></a> on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/y4Au4D/1">在线练习</a></p><pre>"(at\.)$" => The fat cat. sat. on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/t0AkOd/1">在线练习</a></p><h1 id="简写字符集"><a href="#简写字符集" class="headerlink" title="简写字符集"></a>简写字符集</h1><p>&emsp;&emsp;正则表达式提供一些常用的字符集简写。如下:</p><div class="table-container"><table><thead><tr><th style="text-align:center">简写</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>除换行符外的所有字符</td></tr><tr><td style="text-align:center">\w</td><td>匹配所有字母数字，等同于 <code>[a-zA-Z0-9_]</code></td></tr><tr><td style="text-align:center">\W</td><td>匹配所有非字母数字，即符号，等同于： <code>[^\w]</code></td></tr><tr><td style="text-align:center">\d</td><td>匹配数字： <code>[0-9]</code></td></tr><tr><td style="text-align:center">\D</td><td>匹配非数字： <code>[^\d]</code></td></tr><tr><td style="text-align:center">\s</td><td>匹配所有空格字符，等同于： <code>[\t\n\f\r\p&#123;Z&#125;]</code></td></tr><tr><td style="text-align:center">\S</td><td>匹配所有非空格字符： <code>[^\s]</code></td></tr><tr><td style="text-align:center">\f</td><td>匹配一个换页符</td></tr><tr><td style="text-align:center">\n</td><td>匹配一个换行符</td></tr><tr><td style="text-align:center">\r</td><td>匹配一个回车符</td></tr><tr><td style="text-align:center">\t</td><td>匹配一个制表符</td></tr><tr><td style="text-align:center">\v</td><td>匹配一个垂直制表符</td></tr><tr><td style="text-align:center">\p</td><td>匹配 CR/LF（等同于 <code>\r\n</code>），用来匹配 DOS 行终止符</td></tr></tbody></table></div><h1 id="零宽度断言（前后预查）"><a href="#零宽度断言（前后预查）" class="headerlink" title="零宽度断言（前后预查）"></a>零宽度断言（前后预查）</h1><p>&emsp;&emsp;先行断言和后发断言（合称 lookaround）都属于<strong>非捕获组</strong>（用于匹配模式，但不包括在匹配列表中）。当我们需要一个模式的前面或后面有另一个特定的模式时，就可以使用它们。</p><p>例如，我们希望从下面的输入字符串 <script type="math/tex">4.44` 和 `$10.88` 中获得所有以 `</script> 字符开头的数字，我们将使用以下的正则表达式 <code>(?&lt;=\$)[0-9\.]*</code>。意思是：获取所有包含 <code>.</code> 并且前面是 <code>$</code> 的数字。</p><p>零宽度断言如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">?=</td><td>正先行断言-存在</td></tr><tr><td style="text-align:center">?!</td><td>负先行断言-排除</td></tr><tr><td style="text-align:center">?&lt;=</td><td>正后发断言-存在</td></tr><tr><td style="text-align:center">?&lt;!</td><td>负后发断言-排除</td></tr></tbody></table></div><h2 id="正先行断言"><a href="#正先行断言" class="headerlink" title="?=... 正先行断言"></a><code>?=...</code> 正先行断言</h2><p>&emsp;&emsp;<code>?=...</code> 正先行断言，表示第一部分表达式之后必须跟着 <code>?=...</code>定义的表达式。</p><p>返回结果只包含满足匹配条件的第一部分表达式。<br>定义一个正先行断言要使用 <code>()</code>。在括号内部使用一个问号和等号： <code>(?=...)</code>。</p><p>正先行断言的内容写在括号中的等号后面。<br>例如，表达式 <code>(T|t)he(?=\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，在括号中我们又定义了正先行断言 <code>(?=\sfat)</code> ，即 <code>The</code> 和 <code>the</code> 后面紧跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?=\sfat)" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/IDDARt/1">在线练习</a></p><h2 id="负先行断言"><a href="#负先行断言" class="headerlink" title="?!... 负先行断言"></a><code>?!...</code> 负先行断言</h2><p>&emsp;&emsp;负先行断言 <code>?!</code> 用于筛选所有匹配结果，筛选条件为 其后不跟随着断言中定义的格式。<br><code>正先行断言</code>  定义和 <code>负先行断言</code> 一样，区别就是 <code>=</code> 替换成 <code>!</code> 也就是 <code>(?!...)</code>。</p><p>表达式 <code>(T|t)he(?!\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，且其后不跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?!\sfat)" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/V32Npg/1">在线练习</a></p><h2 id="lt-正后发断言"><a href="#lt-正后发断言" class="headerlink" title="?&lt;= ... 正后发断言"></a><code>?&lt;= ...</code> 正后发断言</h2><p>&emsp;&emsp;正后发断言 记作<code>(?&lt;=...)</code> 用于筛选所有匹配结果，筛选条件为 其前跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;=(T|t)he\s)(fat|mat)</code> 匹配 <code>fat</code> 和 <code>mat</code>，且其前跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?<=(T|t)he\s)(fat|mat)" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the <a href="#learn-regex"><strong>mat</strong></a>.</pre><p><a href="https://regex101.com/r/avH165/1">在线练习</a></p><h2 id="lt-负后发断言"><a href="#lt-负后发断言" class="headerlink" title="?&lt;!... 负后发断言"></a><code>?&lt;!...</code> 负后发断言</h2><p>&emsp;&emsp;负后发断言 记作 <code>(?&lt;!...)</code> 用于筛选所有匹配结果，筛选条件为 其前不跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;!(T|t)he\s)(cat)</code> 匹配 <code>cat</code>，且其前不跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?&lt;!(T|t)he\s)(cat)" => The cat sat on <a href="#learn-regex"><strong>cat</strong></a>.</pre><p><a href="https://regex101.com/r/8Efx5G/1">在线练习</a></p><h1 id="标志"><a href="#标志" class="headerlink" title="标志"></a>标志</h1><p>&emsp;&emsp;标志也叫模式修正符，因为它可以用来修改表达式的搜索结果。<br>这些标志可以任意的组合使用，它也是整个正则表达式的一部分。</p><div class="table-container"><table><thead><tr><th style="text-align:center">标志</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">i</td><td>忽略大小写。</td></tr><tr><td style="text-align:center">g</td><td>全局搜索。</td></tr><tr><td style="text-align:center">m</td><td>多行修饰符：锚点元字符 <code>^</code> <code>$</code> 工作范围在每行的起始。</td></tr></tbody></table></div><h2 id="忽略大小写-Case-Insensitive"><a href="#忽略大小写-Case-Insensitive" class="headerlink" title="忽略大小写 (Case Insensitive)"></a>忽略大小写 (Case Insensitive)</h2><p>&emsp;&emsp;修饰语 <code>i</code> 用于忽略大小写。<br>例如，表达式 <code>/The/gi</code> 表示在全局搜索 <code>The</code>，在后面的 <code>i</code> 将其条件修改为忽略大小写，则变成搜索 <code>the</code> 和 <code>The</code>，<code>g</code> 表示全局搜索。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/dpQyf9/1">在线练习</a></p><pre>"/The/gi" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/ahfiuh/1">在线练习</a></p><h2 id="全局搜索-Global-search"><a href="#全局搜索-Global-search" class="headerlink" title="全局搜索 (Global search)"></a>全局搜索 (Global search)</h2><p>&emsp;&emsp;修饰符 <code>g</code> 常用于执行一个全局搜索匹配，即（不仅仅返回第一个匹配的，而是返回全部）。<br>例如，表达式 <code>/.(at)/g</code> 表示搜索 任意字符（除了换行）+ <code>at</code>，并返回全部结果。</p><pre>"/.(at)/" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the mat.</pre><p><a href="https://regex101.com/r/jnk6gM/1">在线练习</a></p><pre>"/.(at)/g" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> <a href="#learn-regex"><strong>sat</strong></a> on the <a href="#learn-regex"><strong>mat</strong></a>.</pre><p><a href="https://regex101.com/r/dO1nef/1">在线练习</a></p><h2 id="多行修饰符-Multiline"><a href="#多行修饰符-Multiline" class="headerlink" title="多行修饰符 (Multiline)"></a>多行修饰符 (Multiline)</h2><p>&emsp;&emsp;多行修饰符 <code>m</code> 常用于执行一个多行匹配。</p><p>像之前介绍的 <code>(^,$)</code> 用于检查格式是否是在待检测字符串的开头或结尾。但我们如果想要它在每行的开头和结尾生效，我们需要用到多行修饰符 <code>m</code>。</p><p>例如，表达式 <code>/at(.)?$/gm</code> 表示小写字符 <code>a</code> 后跟小写字符 <code>t</code> ，末尾可选除换行符外任意字符。根据 <code>m</code> 修饰符，现在表达式匹配每行的结尾。</p><pre>"/.at(.)?$/" => The fat                cat sat                on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/hoGMkP/1">在线练习</a></p><pre>"/.at(.)?$/gm" => The <a href="#learn-regex"><strong>fat</strong></a>                  cat <a href="#learn-regex"><strong>sat</strong></a>                  on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/E88WE2/1">在线练习</a></p><h2 id="贪婪匹配与惰性匹配-Greedy-vs-lazy-matching"><a href="#贪婪匹配与惰性匹配-Greedy-vs-lazy-matching" class="headerlink" title="贪婪匹配与惰性匹配 (Greedy vs lazy matching)"></a>贪婪匹配与惰性匹配 (Greedy vs lazy matching)</h2><p>&emsp;&emsp;正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 <code>?</code> 将贪婪匹配模式转化为惰性匹配模式。</p><pre>"/(.*at)/" => <a href="#learn-regex"><strong>The fat cat sat on the mat</strong></a>. </pre><p><a href="https://regex101.com/r/AyAdgJ/1">在线练习</a></p><pre>"/(.*?at)/" => <a href="#learn-regex"><strong>The fat</strong></a> cat sat on the mat. </pre><p><a href="https://regex101.com/r/AyAdgJ/2">在线练习</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思考该不该吃完一颗难吃的苹果</title>
      <link href="/posts/20240224c.html"/>
      <url>/posts/20240224c.html</url>
      
        <content type="html"><![CDATA[<h1 id="文学导航"><a href="#文学导航" class="headerlink" title="文学导航"></a><a href="./20240224d.html#思考该不该吃完一颗难吃的苹果">文学导航</a></h1><p>&emsp;&emsp;每次难吃的苹果我都咽下去了，但是这次我决定不吃了。（未完待续）</p>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文学导航</title>
      <link href="/posts/20240224d.html"/>
      <url>/posts/20240224d.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#文学">文章导航总览</a></h1><h1 id="原创"><a href="#原创" class="headerlink" title="原创"></a>原创</h1><h2 id="思考该不该吃完一颗难吃的苹果"><a href="#思考该不该吃完一颗难吃的苹果" class="headerlink" title="思考该不该吃完一颗难吃的苹果"></a><a href="./20240224c.html">思考该不该吃完一颗难吃的苹果</a></h2><!-- # 授权发表## [关于爱莉西亚局长的个人回忆](./20240222b.html) -->]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阅读导航</title>
      <link href="/posts/20240224b.html"/>
      <url>/posts/20240224b.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#阅读">文章导航总览</a></h1><h1 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h1><h2 id="视觉SLAM十四讲"><a href="#视觉SLAM十四讲" class="headerlink" title="视觉SLAM十四讲"></a><a href="./20240601a.html">视觉SLAM十四讲</a></h2><h1 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h1><h2 id="论文阅读方法"><a href="#论文阅读方法" class="headerlink" title="论文阅读方法"></a><a href="./20240224a.html">论文阅读方法</a></h2><h2 id="一种基于目测的未知目标运动分析方位角方法"><a href="#一种基于目测的未知目标运动分析方位角方法" class="headerlink" title="一种基于目测的未知目标运动分析方位角方法"></a><a href="./20240223a.html">一种基于目测的未知目标运动分析方位角方法</a></h2><h1 id="名著"><a href="#名著" class="headerlink" title="名著"></a>名著</h1><h2 id="离骚（节选）"><a href="#离骚（节选）" class="headerlink" title="离骚（节选）"></a><a href="./20240304a.html">离骚（节选）</a></h2>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读方法</title>
      <link href="/posts/20240224a.html"/>
      <url>/posts/20240224a.html</url>
      
        <content type="html"><![CDATA[<h1 id="阅读导航"><a href="#阅读导航" class="headerlink" title="阅读导航"></a><a href="./20240224b.html#论文阅读方法">阅读导航</a></h1><h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><h2 id="arXiv"><a href="#arXiv" class="headerlink" title="arXiv"></a>arXiv</h2><ol><li>官网：<a href="https://arxiv.org/">arXiv</a>。</li><li>视频介绍：<a href="https://www.bilibili.com/video/BV1pT4y1m7AF/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【推倒论文付费墙，救人新冠疫情里，这是“反向知网”arXiv的30年】</a>。</li></ol><p>&emsp;&emsp;arXiv 是免费的、可供下载的论文库。是一个论文预印版网站。预印本（Preprint）是指科研工作者的研究成果还未在正式出版物上发表，而出于和同行交流目的自愿先在学术会议上或通过互联网发布的科研论文、科技报告等文章。而另一方面，arXiv有独特的作用：为了防止自己的 idea 在论文被收录前被别人剽窃，可以将预稿上传到 arXiv 作为预收录，因此这就是个可以证明论文原创性（上传时间戳）的文档收录网站。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读：一种基于目测的未知目标运动分析方位角方法</title>
      <link href="/posts/20240223a.html"/>
      <url>/posts/20240223a.html</url>
      
        <content type="html"><![CDATA[<div class="note blue no-icon flat"><ol><li>b站视频：<a href="https://www.bilibili.com/video/BV1EC411z7Lz/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【【IJRR最新成果】利用被忽视的视觉信息大幅提升目标定位可观性】</a></li><li>论文资源：<a href="https://arxiv.org/abs/2401.17117">A Bearing-Angle Approach for Unknown Target Motion Analysis Based on Visual Measurements</a></li></ol></div><h1 id="阅读导航"><a href="#阅读导航" class="headerlink" title="阅读导航"></a><a href="./20240224b.html#一种基于目测的未知目标运动分析方位角方法">阅读导航</a></h1><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&emsp;&emsp;Vision-based estimation of the motion of a moving target is usually formulated as a <em>bearing-only</em> estimation problem where the visual measurement is modeled as a bearing vector. Although the bearing-only approach has been studied for decades, a <em>fundamental limitation</em> of this approach is that it requires extra lateral motion of the observer to enhance the target’s observability. Unfortunately, the extra lateral motion conflicts with the desired motion of the observer in many tasks.<br>It is well-known that, once a target has been detected in an image, a bounding box that surrounds the target can be obtained.<br>Surprisingly, this common visual measurement especially its size information has not been well explored up to now.<br>In this paper, we propose a new <em>bearing-angle</em> approach to estimate the motion of a target by modeling its image bounding box as bearing-angle measurements.<br>Both theoretical analysis and experimental results show that this approach can significantly enhance the observability <em>without</em> relying on additional lateral motion of the observer.<br>The benefit of the bearing-angle approach comes with no additional cost because a bounding box is a standard output of object detection algorithms.<br>The approach simply exploits the information that has not been fully exploited in the past.<br>No additional sensing devices or special detection algorithms are required.</p><details class="folding-tag" blue><summary> 注解 </summary>              <div class='content'>              <div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">音频</button></li><li class="tab"><button type="button" data-href="#分栏-2">概括</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><div id="aplayer20240223a"></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>这些文字很多废话。总结就是：没有利用多余的传感器，而是用视觉新的信息：物体框作为新的观测值，提高了方位角的精度。同时不需要运动物体做额外的横向运动。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h1 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a>Keywords</h1><p>Bearing-only target motion estimation, Pseudo-linear Kalman filter, Observability enhancement</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&emsp;&emsp;This paper studies the problem of estimating the motion of a moving target object using a moving monocular camera. The target’s geometric information such as its physical size is <em>unknown</em> in advance. This problem is important in many fields .<br>Our present work is particularly motivated by the task of aerial target pursuit, where a micro aerial vehicle (MAV) uses its onboard camera to detect, localize, and then pursue another flying MAV.<br>The task of aerial target pursuit, originally motivated by the interesting bird-catching-bird behaviors in nature , potentially provides an effective approach to the defense of misused MAV.</p><figure id="fig_architecture_outdoor"></figure><img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_architecture_outdoor.png" /><figcaption><b>Figure 1.</b> An observer MAV observes a target MAV with a monocular camera. The bearing $g$ and angle $\theta$ can be obtained from the bounding box that surrounds the target in the image.</figcaption><p>&emsp;&emsp;When a target has been detected in an image by a vision detection algorithm, we usually obtain a <em>bounding box</em> that surrounds the target’s image (see Fig. <a href="#fig_architecture_outdoor">1</a>).<br>The bounding box carries two types of useful information that can be used to estimate the target’s motion.</p><p>&emsp;&emsp;The first type of useful information is the <em>center point</em> of the bounding box.<br>The pixel coordinate of the center point can be used to calculate the spatial <em>bearing vector</em> pointing from the camera to the target based on the pin-hole camera model [@Ma2012].<br>Using the bearing vector to estimate the target’s motion is referred to as <em>bearing-only</em> target motion estimation [@Fogel1988; @He2019; @Li2022].<br>As a problem that has been studied for more than 40 years, bearing-only target motion estimation was originally studied to estimate the motion of ships on the ocean surface [@hoelzer1978modified], and regained increasing research attention in recent years in vision-based target estimation tasks [@Ponda2009; @Anjaly2018; @He2019].</p><p>&emsp;&emsp;Bearing-only target motion estimation requires an <em>observability condition</em>: The observer must have higher-order motion than the target and, more importantly, the higher-order motion must contain components that are orthogonal to the target’s bearing vector [@Fogel1988].<br>Motivated by this observability condition, enormous works have studied how an observer should move to enhance the observability [@Hammel1989; @Sabet2016; @Anjaly2018; @He2019].<br>For instance, in our recent work [@Li2022], we proposed a helical guidance law so that a MAV moves along a helical curve to optimize the observability in the 3D space.</p><p>&emsp;&emsp;A <em>limitation</em> of the observability condition of the classic bearing-only approach is that the observer must move in the lateral directions that are orthogonal to the bearing vector of the target.<br>Such additional lateral motion is usually unfavorable because it may conflict with the desired motion of the observer in many tasks.<br>For example, in an aerial target pursuit task, the pursuer is desired to approach the target as fast as possible and then keep stationary relative to the target. Then, the additional lateral motion would conflict with the desired motion.<br>It is, therefore, important to study other ways that can enhance the observability while avoiding unfavorable lateral motion.</p><p>&emsp;&emsp;The second type of useful information of a bounding box is its <em>size</em> (either width or height).<br>The size of a bounding box is jointly determined by several factors such as the target’s distance, the target’s physical size, and the orientation of the camera.<br>The target’s physical size is usually unknown in many tasks, especially in those antagonistic ones such as aerial pursuit of misused MAVs.<br>As a result, the size of the bounding box cannot directly infer the target’s distance.<br>Nevertheless, it carries valuable information for localizing the target.</p><p>&emsp;&emsp;Surprisingly, the size information of the bounding box has not been well explored so far.<br>The work that is closely relevant to ours is the state-of-the-art one in [@Griffin2021], where the size of a bounding box is used to localize unknown target objects.<br>Although the approach in [@Griffin2021] is inspiring, it relies on two assumptions: The target objects are stationary and the camera can only translate without rotating.<br>It is still an open problem how to estimate a target’s motion when the two assumptions are not valid.<br>Moreover, the theoretical role of the size of a bounding box in target motion estimation has not been fully understood so far.<br>Although the work in [@Vrba2020] also utilizes the size of the bounding box to estimate the target’s position, it is assumed that the target’s physical size is known in advance.</p><p>&emsp;&emsp;Estimating the motion of moving objects is also a fundamental problem in dynamic SLAM.<br>For example, the works in [@Yang2019; @Qiu2019] firstly estimate the camera’s pose and secondly estimate the target object’s pose subject to a scale factor, and finally estimate the scale factor from multi-view measurements.<br>To estimate the target object’s pose subject to a scale factor, [@Yang2019] and [@Qiu2019] rely on detecting, respectively, a 3D bounding box and sufficient feature points inside the 2D bounding box.<br>Different from [@Yang2019; @Qiu2019], our proposed approach merely utilizes a 2D image bounding box without further extracting feature points or a 3D bounding box inside the 2D bounding box.<br>As a result, one benefit is that this approach is more computationally efficient.<br>Moreover, this approach can handle the challenging small-target case where the target object is far and hence its image is small.<br>In this case, it would be unreliable to extract sufficient stable features or conduct 3D detection.</p><p>&emsp;&emsp;The aforementioned approaches in [@Griffin2021; @Yang2019; @Qiu2019] are all based on multiple views.<br>It is also possible to estimate the target’s depth from a single view/image [@Tekin2018; @Vrba2020].<br>The single-view approach however requires prior information of the objects.<br>Moreover, it would be unable to successfully localize target objects with different sizes but similar appearances.<br>In this paper, we focus on the multi-view case.</p><p>&emsp;&emsp;In this paper, we propose a novel <em>bearing-angle</em> target motion estimation approach that models a bounding box as bearing-angle measurements.<br>This approach can enhance the observability by fully exploiting the information in a bounding box rather than relying on the additional lateral motion of the observer.<br>The benefit of the proposed bearing-angle approach comes with no additional cost since the bounding box is a standard output of object detection algorithms.<br>The approach simply exploits the angle information that has not been fully exploited in the past.<br>No additional sensing devices or special detection algorithms are required.</p><p>&emsp;&emsp;The technical novelties of this approach are threefold.</p><p>1) The proposed approach does not directly use the size of a bounding box because the size is variant to the orientation of the camera.<br>That is, even if the target’s relative position is unchanged, the size of the bounding box still varies when the camera rotates.<br>Motivated by this problem, we convert the size of the bounding box to an angle subtended by the target (see Fig. <a href="#fig_architecture_outdoor">1</a>{reference-type=”ref” reference=”fig_architecture_outdoor”}).<br>The merit of using the angle measurement is that it is <em>invariant</em> to the camera’s orientation change (see Fig. <a href="#fig_cam_rotate">2</a>{reference-type=”ref” reference=”fig_cam_rotate”}) and hence can greatly facilitate the estimator design.<br>In this way, the assumption in [@Griffin2021] that the camera can only translate but not rotate can be avoided.</p><p>2) Although the bearing-angle approach incorporates an additional angle measurement, it is nontrivial to see how to properly use this measurement because the angle does not directly infer the target’s distance given that the target’s size is unknown.<br>We notice that the angle is a joint nonlinear function of the target’s physical size and relative distance.<br>Hence, the state vector, which only consists of the target’s position and velocity in the conventional bearing-only approach, is augmented by the unknown target’s physical size.<br>Since the bearing and angle measurements are all nonlinear functions of the target’s state, we establish a pseudo-linear Kalman filter to properly utilize the measurements to enhance estimation stability.<br>Both simulation and real-world experiments verify the effectiveness of the proposed estimator.</p><p>3) Although an additional angle measurement is used, an additional unknown, the target’s physical size, is also introduced into the estimator.<br>It is, therefore, nontrivial to see how the additional angle measurement can help improve the observability.<br>Motivated by this problem, we prove the necessary and sufficient observability condition for bearing-angle target motion estimation.<br>In particular, we show that the target’s motion can be recovered if and only if the observer has a higher-order motion than the target.<br>Different from the bearing-only case, the higher-order motion is <em>not</em> required to be in the lateral directions that are orthogonal to the bearing vector.<br>This is an important enhancement of the observability. As we show in various experiments, the bearing-angle approach can successfully recover the target’s motion in many scenarios where the bearing-only approach fails.</p><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><h2 id="Algorithms-for-bearing-only-target-motion-estimation"><a href="#Algorithms-for-bearing-only-target-motion-estimation" class="headerlink" title="Algorithms for bearing-only target motion estimation"></a>Algorithms for bearing-only target motion estimation</h2><p>&emsp;&emsp;Bearing-only target motion analysis aims to estimate the target’s motion states, such as position and velocity, using bearing measurement only.<br>It was originally motivated by ship localization and tracking in the ocean [@hoelzer1978modified]. With the rapid development of small-scale mobile robots equipped with cameras, the bearing-only approach regained increasing attention in recent years [@Ponda2009; @Anjaly2018; @He2019].</p><p>&emsp;&emsp;Kalman filter-based estimators are widely used in the bearing-only target motion.<br>One challenge of applying the Kalman filter to the bearing-only estimation is the nonlinearity of the bearing measurement.<br>The conventional extended Kalman filter (EKF) exhibits divergence problems when applied to bearing-only target motion estimation [@Aidala1979; @Lin2002].<br>Several methods have been proposed to solve this problem.<br>They can be divided into two types.<br>The first type is the modified polar EKF, which was first proposed in [@hoelzer1978modified].<br>In this approach, three observable quantities are separated from the unobservable ones to prevent divergence.<br>The work in [@Stallard1991] extends this approach to the case of spherical coordinates to track targets in 3D space.<br>The second type is the pseudo-linear Kalman filter, which is first proposed in [@Lingren1978] to solve the instability problem by transforming the nonlinear measurement equation into a pseudo-linear one.<br>However, this transformation makes the noise become non-Gaussian and highly correlated to the measurement matrix and then causes estimation bias.<br>Nevertheless, the work in [@Aidala1982] theoretically proves that the velocity estimation has no bias, and the position estimation bias can be removed by the observer’s maneuvers.</p><p>&emsp;&emsp;Recently, other estimation algorithms based on advanced but more complex filters have been proposed.<br>The work in [@Farina1999] uses the maximum likelihood (MLE) algorithm to estimate the target’s motion using bearing-only measurements.<br>The comparison with the Cramer-Rao lower bound indicates that the MLE-based estimator is effective against measurement errors.<br>The work in [@Dogancay2005] proposes a constrained total least-squares algorithm, which can improve the estimation accuracy when the error of bearing measurement is large.<br>Three different algorithms are used and compared in [@Lin2002].<br>The results show that the EKF, the pseudo-linear filter, and the particle filter have similar performances in most situations, while the EKF loses track when the initial estimate error is large.</p><p>&emsp;&emsp;Another type of approach, called bearing-only trajectory triangulation [@Avidan2000], estimates the target’s position from the perspective of trajectory fitting.<br>It reconstructs the trajectory by intersecting parametric trajectory to a series of sight rays obtained from bearing measurement.<br>Once the trajectory is successfully fitted, the target’s position at each time instant can be estimated by the intersection of the bearing and the trajectory.<br>The trajectory fitting relies on the assumption of the trajectory’s shape.<br>However, in many applications, the target’s trajectory is complex and unknown in advance.<br>Many consecutive studies aim to relax this assumption in various ways based on hypersurfaces [@Kaminski2004], parametric temporal polynomials [@Yu2009], or compact basis vectors [@Park2015].</p><h2 id="Observability-analysis-of-bearing-only-target-motion-estimation"><a href="#Observability-analysis-of-bearing-only-target-motion-estimation" class="headerlink" title="Observability analysis of bearing-only target motion estimation"></a>Observability analysis of bearing-only target motion estimation</h2><p>&emsp;&emsp;Observability is a fundamental problem in bearing-only target motion estimation.<br>Early works mainly focus on whether the system is observable or not.<br>For example, the work in [@Lingren1978] uses the rank of observation matrix to determine the observability.<br>The work in [@Fogel1988] extends the observability criterion in [@Nardone1981] to the Nth-order target dynamics and inspires us for the observability analysis in Section <a href="#Observability Analysis by Solving Linear Equations">6</a>{reference-type=”ref” reference=”Observability Analysis by Solving Linear Equations”}.<br>All these conditions indicate that the observer must have extra high-order motion in the lateral direction.<br>The observability condition can be significantly relaxed in our approach.</p><p>&emsp;&emsp;Unlike the works on determining whether the system is observable or not, some studies focus on quantifying the observability degree.<br>The work in [@Hammel1989] first introduces the Fisher information matrix (FIM) into the observability analysis.<br>The works in [@Sabet2016] and [@Anjaly2018] use FIM-based objective functions to maximize observability.<br>We also use the FIM in our former work [@Li2022] to optimize the 3D helical guidance law for better observability.<br>Another method called the geometric method uses the geometric relationship between the target and the observer in two consecutive time instants to derive the measure of observability [@He2019; @Woffinden2009], and the results are consistent with those derived using FIM.<br>Compared to the bearing-only approach, the observability degree of our bearing-angle method is sufficient to estimate the target’s motion in many common scenarios such as tracking and guidance (see experiment results in Figs. <a href="#fig_matlab_3">[fig_matlab_3]</a>{reference-type=”ref” reference=”fig_matlab_3”} and <a href="#fig_outdoor_1">[fig_outdoor_1]</a>{reference-type=”ref” reference=”fig_outdoor_1”}).</p><h1 id="Problem-Formulation"><a href="#Problem-Formulation" class="headerlink" title="Problem Formulation"></a>Problem Formulation</h1><figure id="fig_cam_rotate"></figure><img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_cam_rotate.png" /><figcaption><b>Figure 2.</b> The size of the bounding box varies when the camera rotates. By contrast, the angle subtended by the target object is invariant to the camera's orientation change.</figcaption><p>&emsp;&emsp;Consider a target object moving in the 3D space. Its position and velocity at time $t_k$ are denoted as $p_T(t_k) \in\mathbb{R}^3$ and $v_T(t_k) \in\mathbb{R}^3$, respectively.<br>Suppose there is an observer carrying a monocular camera to observe the target.<br>The position of the observer is denoted as $p_o(t_k) \in\mathbb{R}^3$.<br>Here, we assume that the observer/camera’s pose including its position and orientation can be obtained in other ways.<br>For example, it can be measured directly by RTK GPS [@Li2022] or estimated by visual inertial odometry [@Qiu2019].<br>In the rest of the paper, the dependence of a variable on $t_k$ is dropped when the context is clear.</p><p>&emsp;&emsp;If the target object can be detected by a vision algorithm, we can obtain a bounding box surrounding the target object in the image.<br>Two types of information carried by the bounding box can be used to estimate the motion of the target.</p><p>&emsp;&emsp;First, the center point of the bounding box can be used to calculate the <em>bearing</em> vector of the target.<br>In particular, denote $g \in \mathbb{R}^3$ as the unit bearing vector pointing from $p<em>o$ to $p_T$.<br>Suppose $p</em>\text{cam}\in\mathbb{R}^{3\times3}$ is the intrinsic parameter matrix of the camera (@Ma2012 Section <a href="#bearing-angle-target-motion-estimator">4</a>), and ${R}_\text{c}^\text{w} \in\mathbb{R}^{3\times 3}$ is the rotation from the camera frame to the world frame.</p><p>Then, the bearing vector $g$ can be calculated as</p><script type="math/tex; mode=display">\begin{aligned}g =\dfrac{{R}_\text{c}^\text{w}p_\text{cam}^{-1}{q}_{\rm pix}}{\|{R}_\text{c}^\text{w}p_\text{cam}^{-1}{q}_{\rm pix}\|},\end{aligned}</script><p>where ${q}<em>{\rm pix} =[x</em>{\rm pix} , y<em>{\rm pix} , 1]^\mathrm{T} \in \mathbb{R}^3$.<br>Here, $(x</em>{\rm pix} ,y_{\rm pix})$ is the pixel coordinate of the center point of the bounding box.</p><p>&emsp;&emsp;Second, the size of the bounding box can be used to calculate the <em>angle</em> subtended by the target in the camera’s field of view.<br>The reason that we convert the bounding box’s size to the angle is that the angle is invariant to the camera’s orientation change (see Fig. <a href="#fig_cam_rotate">2</a>{reference-type=”ref” reference=”fig<em>cam_rotate”}).<br>In particular, let $s</em>{\rm pix}$ denote the size of the bounding box.<br>It can be either the width or the height.<br>Let $\theta \in (0,\pi/2)$ be the angle.<br>According to the pin-hole camera model (@Ma2012 Section <a href="#bearing-angle-target-motion-estimator">4</a>) and the law of cosine (see Fig. <a href="#fig_cam_rotate">2</a>{reference-type=”ref” reference=”fig_cam_rotate”}), the angle can be calculated as</p><script type="math/tex; mode=display">\begin{aligned}\theta = \arccos\left(\dfrac{l_\mathrm{left}^2 + l_\mathrm{right}^2 - s_\mathrm{pix}^2}{2l_\mathrm{left}l_\mathrm{right}}\right),\end{aligned}</script><p>where<br>$l<em>\mathrm{left}=\sqrt{(f/\alpha)^2+(\delta x-s</em>\mathrm{pix}/2)^2+\delta y^2}\in\mathbb{R}$<br> and<br> $l<em>\mathrm{right}=\sqrt{(f/\alpha)^2+(\delta x+s</em>\mathrm{pix}/2)^2+\delta y^2}\in\mathbb{R}$<br>  are the distances in pixel from the camera center to the middle points of the left and right sides of the bounding box, respectively (Fig. <a href="#fig_architecture_outdoor">1</a>{reference-type=”ref” reference=”fig<em>architecture_outdoor”}).<br>Moreover, $f$ and $\alpha$ denote the camera’s focal length and single pixel size, respectively.<br>$i</em>{\text{width}}$ and $i<em>{\text{height}}$ represent the width and the height of the whole image in pixels, respectively. $\delta x=|x</em>\text{pix}-i<em>\text{width}/2|\in\mathbb{R}$ and $\delta y = |y</em>\text{pix}-i_\text{height}/2|\in\mathbb{R}$ are the distances between the center of the bounding box and the center of the image.</p><figure id="fig_architecture_algorithm"></figure><img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_architecture_algorithm.png" /><figcaption><b>Figure 3.</b> The architecture of the proposed approach. All the simulation and real-world experiments in this paper follow this architecture.</figcaption><p>Our goal is to estimate the target’s position and velocity, $p_T$ and $v_T$, based on the noisy measurements of the bearing vector $g$ and the angle $\theta$ together with the observer’s own position $p_o$.<br>To achieve this goal, we propose a new bearing-angle target motion estimator (Fig. <a href="#fig_architecture_algorithm">3</a>).<br>The estimator is introduced in detail in Section <a href="#bearing-angle-target-motion-estimator">4</a>.<br>The observability of this estimator is analyzed based on Kalman’s observability criterion in Section <a href="#Observability Analysis by Kalman&#39;s Criterion">5</a>{reference-type=”ref” reference=”Observability Analysis by Kalman’s Criterion”}.<br>We further prove a necessary and sufficient observability condition of the observer in Section <a href="#Observability Analysis by Solving Linear Equations">6</a>{reference-type=”ref” reference=”Observability Analysis by Solving Linear Equations”}.<br>Numerical simulation results are given in Section <a href="#Numerical Simulation Results">7</a>{reference-type=”ref” reference=”Numerical Simulation Results”}.<br>More realistic AirSim simulation results are given in Section <a href="#AirSim Simulation Results">8</a>{reference-type=”ref” reference=”AirSim Simulation Results”}.<br>Finally, real-world experiments are given in Section <a href="#Real-World Experimental Results">9</a>{reference-type=”ref” reference=”Real-World Experimental Results”}.</p><p><a id="bearing-angle-target-motion-estimator"></a></p><h1 id="Bearing-Angle-Target-Motion-Estimator"><a href="#Bearing-Angle-Target-Motion-Estimator" class="headerlink" title="Bearing-Angle Target Motion Estimator"></a>Bearing-Angle Target Motion Estimator</h1><p>This section designs a bearing-angle target motion estimator based on the framework of pseudo-linear Kalman filtering. The key here is to establish appropriate measurement and state transition equations.</p><h2 id="States-transition-equation"><a href="#States-transition-equation" class="headerlink" title="States transition equation"></a>States transition equation</h2><p>&emsp;&emsp;The state vector of the target is designed as</p><script type="math/tex; mode=display">\begin{aligned}{x}=\left[  \begin{array}{c}    p_T \\    v_T \\    \ell \\  \end{array}\right]\in \mathbb{R}^7,\end{aligned}</script><p>where $p_T$ and $v_T$ are target’s global position and velocity, respectively.<br>Here, $\ell&gt;0$ is a scalar that represents the physical size of the target object in the dimension that is orthogonal to the bearing vector (Fig. <a href="#fig_cam_rotate">2</a>{reference-type=”ref” reference=”fig_cam_rotate”}). In this paper, $\ell$ is assumed to be constant or varying slowly, which means that the physical size of the target object should be approximately invariant from different viewing angles. Here, $\ell$ corresponds to $\theta$, which further corresponds to either the width or height of the bounding box. Whether $\ell$ should correspond to the width or height depends on in which dimension the physical size of the target object is invariant when viewed from different angles.<br>More explanation is given in Section <a href="#Dynamic modeling of target&#39;s physical size">4.2</a>{reference-type=”ref” reference=”Dynamic modeling of target’s physical size”}.</p><p>Different from the bearing-only case where the state merely consists of the position and velocity, the state here is augmented by the target’s physical size. This is due to the fact that the angle measurement is a function of the target’s physical size, which should be estimated as well. One may wonder whether the state vector can also incorporate the target’s acceleration. To estimate high-order motion (e.g., acceleration) of the target, the observer must have higher-order motion (e.g., nonzero jerk) according to the observability condition presented in Section <a href="#Observability Analysis by Solving Linear Equations">6</a>{reference-type=”ref” reference=”Observability Analysis by Solving Linear Equations”}. Otherwise, the estimation would diverge. Therefore, it is preferred to exclude the acceleration and merely estimate the position and velocity.</p><p>If no information of the target’s motion is available, it is common to model the target’s motion as a discrete-time noise-driven double integrator:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_state_transition}    {x}(t_{k+1})={F}{x}(t_k) +{q}(t_k) ,\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_matrix_A}{F}=\begin{bmatrix}{I}_{3\times3} & \delta t{I}_{3\times3} & {0}_{3\times1}  \\{0}_{3\times3} & {I}_{3\times3}  & {0}_{3\times1}   \\{0}_{1\times 3} & {0}_{1\times 3} & 1\end{bmatrix}\in\mathbb{R}^{7\times 7},\end{aligned}</script><p>with $\delta t$ as the sampling time, and ${I}$ and ${0}$ as the identity and zero matrices, respectively.<br>Here, ${q} \in\mathbb{R}^7$ is a zero-mean process noise satisfying ${q} \sim \mathcal{N}(0,{\Sigma}_q)$, where the covariance matrix is</p><script type="math/tex; mode=display">\begin{aligned}{\Sigma}_q=\text{diag}(0, 0, 0, \sigma_v^2, \sigma_v^2, \sigma_v^2, \sigma_\ell^2)\in\mathbb{R}^{7\times7}.\end{aligned}</script><p>Here, $\sigma<em>v\in\mathbb{R}$ and $\sigma</em>\ell\in\mathbb{R}$ are the standard deviations of the target’s velocity and size, respectively.<br>When the target’s shape is irregular, $\ell$ may vary when viewed from different angles.<br>By letting $\sigma_\ell\ne0$, we can handle the case where $\ell$ varies slowly.<br>The dynamic modeling of $\ell$ is discussed in the following subsection.</p><h2 id="Dynamic-modeling-of-target’s-physical-size"><a href="#Dynamic-modeling-of-target’s-physical-size" class="headerlink" title="Dynamic modeling of target’s physical size"></a>Dynamic modeling of target’s physical size</h2><p>&emsp;&emsp;Since the target’s physical size $\ell$ is a state variable to be estimated, it is important to discuss its dynamic model. In fact, the dynamic model of $\ell$ in <a href="#eq_state_transition">[eq_state_transition]</a>{reference-type=”eqref” reference=”eq_state_transition”} assumes that $\ell$ varies slowly. We next justify this modeling and provide more discussion.</p><p>First of all, $\ell$ corresponds to the physical size of the target object in the dimension that is orthogonal to the bearing vector. Its dynamics can be categorized into three cases.</p><p><em>1) $\ell$ is invariant.</em><br>In theory, when $\ell$ is invariant, a change of $\theta$ implies a change of $r$.<br>As a result, the measurement of $\theta$ can help improve the system’s observability, as proven in Section <a href="#Observability Analysis by Solving Linear Equations">6</a>{reference-type=”ref” reference=”Observability Analysis by Solving Linear Equations”}.<br>An ideal case where $\ell$ is invariant is that the target object is a sphere or cylinder so that $\ell$ corresponds to its diameter [@Vrba2020].<br>In practice, the target object does not have to be the ideal case. For example, consider an autonomous driving scenario where a focal vehicle uses a camera to localize its surrounding vehicles in the 2D plane.<br>Although the physical size of a surrounding vehicle changes greatly when viewed from behind or side, the height of the vehicle is <em>invariant</em> from different side-view angles.<br>In this case, $\ell$ corresponds to the height of the vehicle, and we need to use the height of the image bounding box to calculate $\theta$.</p><p><em>2) $\ell$ varies slowly.</em><br>If there does not exist any dimension in which the physical size of the target remains invariant, $\ell$ may vary slowly when the target is viewed from different angles. For example, in the tasks of aerial target pursuit, if the target is a quadcopter or hexacopter, then $\ell$ is approximately equal to the wheelbase but may vary slightly when viewed from different angles since the MAV is not a perfect cylinder.<br>In this case, $\ell$ corresponds to the wheelbase of the MAV, and we need to use the width of the image bounding box to calculate $\theta$.</p><p>If $\ell$ varies slowly, it can still be treated as invariant within short time intervals.<br>As long as the observability condition (Section <a href="#Observability Analysis by Solving Linear Equations">6</a>{reference-type=”ref” reference=”Observability Analysis by Solving Linear Equations”}) is satisfied, the motion of the target as well as $\ell$ can be successfully estimated.<br>This fact is supported by the experimental results in Section <a href="#Scenario 2: Circular motion and varying $\ell$">8.4</a>{reference-type=”ref” reference=”Scenario 2: Circular motion and varying $\ell$”}.<br>It is however worth nothing that the performance of the proposed bearing-angle approach would degenerate to the conventional bearing-only one because the additional information brought by $\theta$ is used to estimate the time-varying $\ell$ rather than helping improve the system’s observability.</p><p><em>3) $\ell$ varies rapidly.</em><br>If $\ell$ varies rapidly due to certain reasons, it would be difficult to distinguish whether the change of $\theta$ is caused by the change of $\ell$ or the change of $r$.<br>For example, when a MAV is used to track a ground vehicle, $\ell$ in any dimension may vary rapidly when the relative motion between the MAV and the ground vehicle is highly dynamic.<br>In such scenarios, the additional information brought by $\theta$ is no longer sufficient to estimate the rapidly varying $\ell$ in this case. Additional visual information such as a 3D bounding box that indicates the target’s 3D attitude is required. This is an important topic for future research but out of the scope of the present paper.</p><h2 id="Nonlinear-measurement-equations"><a href="#Nonlinear-measurement-equations" class="headerlink" title="Nonlinear measurement equations"></a>Nonlinear measurement equations</h2><p>The bearing vector $g$ and the subtended angle $\theta$ are both nonlinear functions of the target’s position. In particular,</p><script type="math/tex; mode=display">\label{eq_information}\begin{align}    g &=\dfrac{p_T -p_o }{r },    \label{eq_bearing_measure} \\    \theta &=2\arctan\left(\dfrac{\ell}{2r }\right)\approx \dfrac{\ell}{r },    \label{eq_theta_measure}\end{align}</script><p>where</p><script type="math/tex; mode=display">r =\|p_T -p_o \|</script><p>is the distance between the target and the observer.<br>It is notable that there is an approximation in <a href="#eq_theta_measure">[eq_theta_measure]</a>{reference-type=”eqref” reference=”eq_theta_measure”}. This approximation is accurate.<br>Specifically, when $r&gt;3\ell$, which is common in practice, it can be verified that the approximation error is less than $0.08\%$. The approximation error further decreases as $r$ increases.</p><p>In practice, measurements always contain noises.<br>First, denote $\hat{g} \in\mathbb{R}^3$ as the noise-corrupted bearing measurement. Then, we have</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_noised_g_mear}\hat{g}  = {R}\left({\eta} , \epsilon \right) g ,\end{aligned}</script><p>where ${R}\left({\eta} , \epsilon \right) \in \mathbb{R}^{3\times 3}$ is a rotation matrix that perturbs $g$.<br>Here, ${\eta} \in\mathbb{R}^3$ is a unit vector representing a random rotation axis, and $\epsilon \in \mathbb{R}$ is a random rotation angle.<br>This rotation matrix would rotate the vector $g$ by an angle $\epsilon$ around the axis ${\eta}$.<br>The productive noise in <a href="#eq_noised_g_mear">[eq_noised_g_mear]</a>{reference-type=”eqref” reference=”eq_noised_g_mear”} can be transformed into an additive one:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_noised_g_mear_add}    \hat{g}  = g  + {\mu} ,\end{aligned}</script><p>where ${\mu} =({R}\left({\eta} , \epsilon \right) - {I}<em>{3\times3})g \in\mathbb{R}^3$ is the measurement noise of the bearing vector.<br>The covariance of $\mu$ is derived in our previous work [@Li2022]. Since the covariance is complex and involves unknown true values, we can approximately treat it as a Gaussian noise: $\mu\sim\mathcal{N}(0, \sigma</em>\mu^2 I_{3\times 3})$ [@Li2022].</p><p>Substituting <a href="#eq_bearing_measure">[eq_bearing_measure]</a>{reference-type=”eqref” reference=”eq_bearing_measure”} into <a href="#eq_noised_g_mear_add">[eq_noised_g_mear_add]</a>{reference-type=”eqref” reference=”eq_noised_g_mear_add”} gives the <em>nonlinear bearing measurement equation:</em></p><script type="math/tex; mode=display">\begin{aligned}\label{eq_bearing_measure_noise}    \hat{g} &=\dfrac{p_T -p_o }{r } + {\mu} .\end{aligned}</script><p>Second, denote $\hat{\theta} \in\mathbb{R}$ as the noise-corrupted measurement of the subtended angle. Then, we have</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_noise_theta}    \hat{\theta} =\theta  + w ,\end{aligned}</script><p>where $w \sim \mathcal{N}(0, \sigma^2_w)$ is the measurement noise.<br>Substituting <a href="#eq_theta_measure">[eq_theta_measure]</a>{reference-type=”eqref” reference=”eq_theta_measure”} into <a href="#eq_noise_theta">[eq_noise_theta]</a>{reference-type=”eqref” reference=”eq_noise_theta”} yields the <em>nonlinear angle measurement equation:</em></p><script type="math/tex; mode=display">\begin{aligned}\label{eq_theta_measure_noise}    \hat{\theta} &=\dfrac{\ell}{r } + w.\end{aligned}</script><h2 id="Pseudo-linear-measurement-equations"><a href="#Pseudo-linear-measurement-equations" class="headerlink" title="Pseudo-linear measurement equations"></a>Pseudo-linear measurement equations</h2><p>The measurement equations <a href="#eq_bearing_measure_noise">[eq_bearing_measure_noise]</a>{reference-type=”eqref” reference=”eq_bearing_measure_noise”} and <a href="#eq_theta_measure_noise">[eq_theta_measure_noise]</a>{reference-type=”eqref” reference=”eq_theta_measure_noise”} are nonlinear in the target’s state. In the following, we convert the two equations to be pseudo-linear and then apply pseudo-linear Kalman filtering to achieve better estimation stability [@Lin2002].</p><p>First, to convert the 3D bearing measurement to pseudo-linear, we introduce a useful orthogonal projection matrix:</p><script type="math/tex; mode=display">\begin{aligned}    p_{\hat{g} }\doteq{I}_{3\times 3}-\hat{g} \hat{g}^\mathrm{T}  \in \mathbb{R}^{3\times 3}.\end{aligned}</script><p>This matrix plays an important role in the analysis of bearing-related estimation and control problems [@Zhao2019]. It has an important property: <script type="math/tex">p_{\hat{g} }\hat{g} ={0}_{3\times 1}.</script><br>As a result, multiplying $rp_{\hat{g} }$ on both side of <a href="#eq_bearing_measure_noise">[eq_bearing_measure_noise]</a>{reference-type=”eqref” reference=”eq_bearing_measure_noise”} yields</p><script type="math/tex; mode=display">\begin{aligned}{0}_{3\times 1}=p_{\hat{g} }(p_T -p_o) + rp_{\hat{g} }{\mu}\end{aligned}</script><p>and consequently</p><script type="math/tex; mode=display">\begin{aligned}p_{\hat{g} }p_o =p_{\hat{g} }p_T  + rp_{\hat{g} }{\mu}.\end{aligned}</script><p>Rewriting this equation in terms of the target’s state variables yields the <em>pseudo-linear bearing measurement equation:</em></p><script type="math/tex; mode=display">\begin{aligned}\label{eq_pseudo_linear_measurement_g_equation}p_{\hat{g} }p_o =\begin{bmatrix}p_{\hat{g} } &{0}_{3\times4}\end{bmatrix}\left[  \begin{array}{c}    p_T \\    v_T \\    \ell \\  \end{array}\right]  +  rp_{\hat{g} }{\mu} .\end{aligned}</script><p>Here, $p_{\hat{g} }p_o$ on the left-hand side is the new measurement, which is pseudo-linear in the target’s state variables.<br>The reason that it is called \”pseudo\” is because the measurements also appear on the right-hand side of the equation, especially in the measurement matrix.</p><p>Second, we convert the nonlinear angle measurement in <a href="#eq_theta_measure_noise">[eq_theta_measure_noise]</a>{reference-type=”eqref” reference=”eq_theta_measure_noise”} to be pseudo-linear.<br>To that end, multiplying $r {\hatg}$ on both side of <a href="#eq_theta_measure_noise">[eq_theta_measure_noise]</a>{reference-type=”eqref” reference=”eq_theta_measure_noise”} yields</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_theta_pseudo_tem}\hat{\theta} r\hat{g}  = \ell\hat{g} +wr\hat{g} .\end{aligned}</script><p>It follows from <a href="#eq_bearing_measure_noise">[eq_bearing_measure_noise]</a>{reference-type=”eqref” reference=”eq_bearing_measure_noise”} that $r{\hatg}=p_T -p_o+r\mu$, substituting which into the left-hand side of <a href="#eq_theta_pseudo_tem">[eq_theta_pseudo_tem]</a>{reference-type=”eqref” reference=”eq_theta_pseudo_tem”} gives</p><script type="math/tex; mode=display">\begin{aligned}\hat{\theta} (p_T -p_o+r\mu)  = \ell\hat{g} +wr\hat{g}.\end{aligned}</script><p>Reorganizing the above equation gives</p><script type="math/tex; mode=display">\begin{aligned}\hat{\theta} p_o  = &\hat{\theta} p_T  - \ell\hat{g} + r(\hat{\theta}  {\mu}  - w \hat{g}).\end{aligned}</script><p>Rewriting this equation in terms of the target’s state variables yields the <em>pseudo-linear angle measurement equation:</em></p><script type="math/tex; mode=display">\begin{aligned}\label{eq_pseudo_linear_measurement_theta_equation}\begin{aligned}\hat{\theta} p_o  =&\begin{bmatrix}\hat{\theta} {I}_{3\times 3} & {0}_{3\times 3}  & -\hat{g}\end{bmatrix}\left[  \begin{array}{c}    p_T \\    v_T \\    \ell \\  \end{array}\right] + r(\hat{\theta}  {\mu}  - w \hat{g} ),\end{aligned}\end{aligned}</script><p>where $\hat{\theta} p_o$ is the new measurement that is pseudo-linear in the target’s state variables.</p><h2 id="Bearing-angle-estimation-algorithm"><a href="#Bearing-angle-estimation-algorithm" class="headerlink" title="Bearing-angle estimation algorithm"></a>Bearing-angle estimation algorithm</h2><p>Combining <a href="#eq_pseudo_linear_measurement_g_equation">[eq_pseudo_linear_measurement_g_equation]</a>{reference-type=”eqref” reference=”eq_pseudo_linear_measurement_g_equation”} and <a href="#eq_pseudo_linear_measurement_theta_equation">[eq_pseudo_linear_measurement_theta_equation]</a>{reference-type=”eqref” reference=”eq_pseudo_linear_measurement_theta_equation”} gives the compact form of the measurement equation:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_pseudo_linear_measurement_equations}{z} = {H} {x}  + {\nu} ,\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{align}{z} &=    \begin{bmatrix}    p_{\hatg} p_o   \\    \hat{\theta} p_o    \end{bmatrix}\in\mathbb{R}^6, \\{H}& =    \begin{bmatrix}    p_{\hatg}  & {0}_{3\times 3} & {0}_{3\times 1} \\    \hat{\theta} {I}_{3\times 3} & {0}_{3\times 3}  & -\hat{g}    \end{bmatrix}\in\mathbb{R}^{6\times7},    \label{eq_matrix_H} \\{\nu}  &=    \begin{bmatrix}    r p_{\hatg} {\mu}  \\    r (\hat{\theta}  {\mu}  - w \hat{g} )    \end{bmatrix}    \in\mathbb{R}^6.    \label{eq_final_measurement_noise}\end{align}</script><p>Here, $\nu$ can be rewritten as a matrix form</p><script type="math/tex; mode=display">\begin{aligned}    \nu=E    \begin{bmatrix}        \mu \\ w    \end{bmatrix},\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_E_mat}    E=r    \begin{bmatrix}        P_{\hatg} & 0_{3\times 1}\\        \hat{\theta}I_{3\times 3} & -\hatg    \end{bmatrix}\in\mathbb{R}^{6\times 4}.\end{aligned}</script><p>As a result, $\nu$ can be approximately treated as a linear transformation of Gaussian noises.<br>Its covariance matrix can be calculated as</p><script type="math/tex; mode=display">\begin{aligned}%\label{eq_final_measurement_noise_covariance}{\Sigma}_  = E\begin{bmatrix}\sigma_\mu^2 I_{3\times 3} & 0_{3\times1}\\0_{1\times 3} & \sigma_w^2\end{bmatrix}E^\mathrm{T}\in\mathbb{R}^{6\times6}.\end{aligned}</script><p>Although the quantities in $E$ such as $\hatg$ and $\hat{\theta}$ contain measurement noises, it is a common practice to treat them as deterministic quantities. Otherwise, if, for example, $\hatg$ is split to $\hatg=g+\mu$ and we consider the noise separately, the expression of $\nu$ would be a complex function of the true values and the noises. Since the true values are unknown, the covariance cannot be calculated.<br>Moreover, $r$ in <a href="#eq_E_mat">[eq_E_mat]</a>{reference-type=”eqref” reference=”eq_E_mat”} is the true target range, which is unknown. We can use the estimated value $\hat{r} =|\hat{p}_T -p_o |$ to replace it in implementation. Here, $\hatp_T\in\mathbb{R}^3$ is the estimated value of the target’s position. This technique has been used in bearing-only target estimation [@He2018; @Li2022].</p><p>With the state transition equation <a href="#eq_state_transition">[eq_state_transition]</a>{reference-type=”eqref” reference=”eq_state_transition”} and the measurement equation <a href="#eq_pseudo_linear_measurement_equations">[eq_pseudo_linear_measurement_equations]</a>{reference-type=”eqref” reference=”eq_pseudo_linear_measurement_equations”}, the bearing-angle estimator can be realized by the Kalman filter.<br>For a quick reference, we list the steps below.<br>The prediction steps are</p><script type="math/tex; mode=display">\begin{aligned}\hat^{-}(t_k) &= {F}\hat(t_{k-1}), \\p^{-}(t_k) &= {F}p(t_{k-1}){F}^\mathrm{T} + {\Sigma}_q,\end{aligned}</script><p>where $\hat^{-}(t_k)\in\mathbb{R}^7$ and $p^{-}(t_k)\in\mathbb{R}^{7\times7}$ are the prior estimated state and covariance matrix, respectively.<br>The correction steps are</p><script type="math/tex; mode=display">\begin{aligned}{K}(t_k) &= p^{-}(t_k){H}^\mathrm{T}(t_k)\left[{H}(t_k)p^{-}(t_k){H}^\mathrm{T}(t_k)+{\Sigma}_\nu\right]^{\dagger}, \\\hat(t_k) &= \hat^{-}(t_k) + {K}(t_k)\left[{z}(t_k)-{H}(t_k)\hat^{-}(t_k)\right], \\p(t_k) &=\left[{I}_{7\times 7} -{K}(t_k){H}(t_k) \right]p^{-}(t_k),\end{aligned}</script><p>where ${K}(t<em>k)\in\mathbb{R}^{7\times6}$ is the Kalman gain matrix, $\hat(t_k)$ and $p(t_k)$ are posterior estimated state and covariance matrix, and symbol $\dagger$ denotes the pseudoinverse.<br>The usage of pseudoinverse in the Kalman filter is a common practice to prevent the situation that ${H}(t_k)p^{-}(t_k){H}^\mathrm{T}(t_k)+{\Sigma}</em>\nu$ is rank deficient [@YOSHIKAWA1972; @Kulikov2018].</p><h1 id="Observability-Analysis-by-Kalman’s-Criterion"><a href="#Observability-Analysis-by-Kalman’s-Criterion" class="headerlink" title="Observability Analysis by Kalman’s Criterion"></a>Observability Analysis by Kalman’s Criterion</h1><p>Although an additional angle measurement is adopted in the bearing-angle estimator, it is nontrivial to see whether this additional measurement can improve the system’s observability because an additional unknown variable, the target’s physical size, is also required to estimate. It is therefore necessary to study the observability conditions under which the target’s motion can be successfully estimated.</p><p>In this and the next sections, we present two methods to analyze the observability conditions. The first method, as presented in this section, relies on Kalman’s observability criterion, which is to check the rank of the observability matrix of a linear system. The second method, as presented in the next section, relies on solving a set of linear equations.<br>Both methods have been adopted in the literature to analyze the observability of estimators [@Zhao2015; @Fogel1988].<br>For the bearing-angle estimator, the first method considers the specific dynamics of the filter but is not able to handle the case when the target’s motion has a higher order.<br>The second method can handle the high-order motion of the target but does not consider the dynamics of the filter. We will show that the conclusions given by the two methods are consistent.<br>In both of the methods, we consider the case where $\ell$ is invariant.</p><h2 id="The-observability-matrix"><a href="#The-observability-matrix" class="headerlink" title="The observability matrix"></a>The observability matrix</h2><p>Consider a time horizon of $k\geq 3$ consecutive steps.<br>The observability matrix of the system of <a href="#eq_matrix_H">[eq_matrix_H]</a>{reference-type=”eqref” reference=”eq_matrix_H”} and <a href="#eq_matrix_A">[eq_matrix_A]</a>{reference-type=”eqref” reference=”eq_matrix_A”} can be calculated as</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_Qo}    {Q}=    \begin{bmatrix}    {H}(t_1) \\    {H}(t_2){F} \\    {H}(t_3){F}^2 \\    \cdots \\    {H}(t_k){F}^{k-1} \\    \end{bmatrix}\in\mathbb{R}^{6k\times7}.\end{aligned}</script><p>Substituting the expressions of $F$ and $H$ in <a href="#eq_matrix_A">[eq_matrix_A]</a>{reference-type=”eqref” reference=”eq_matrix_A”} and <a href="#eq_matrix_H">[eq_matrix_H]</a>{reference-type=”eqref” reference=”eq_matrix_H”} into <a href="#eq_Qo">[eq_Qo]</a>{reference-type=”eqref” reference=”eq_Qo”} yields</p><script type="math/tex; mode=display">\begin{aligned}{Q}=\left[\begin{array}{ccc}p_g(t_1) & {0}_{3\times 3} & {0}_{3\times 1} \\\theta(t_1){I}_{3\times 3} & {0}_{3\times 3}  & -g(t_1) \\\hdashlinep_g(t_2) & \delta tp_g(t_2) & {0}_{3\times 1} \\\theta(t_2){I}_{3\times 3} & \delta t\theta(t_2){I}_{3\times 3}  & -g(t_2) \\\hdashline\vdots & \vdots & \vdots \\\hdashlinep_g(t_k) & (k-1)\delta tp_g(t_k) & {0}_{3\times 1} \\\theta(t_k){I}_{3\times 3} & (k-1)\delta t\theta(t_k){I}_{3\times 3}  & -g(t_k)\\\end{array}\right].\end{aligned}</script><p>Note that the noises in the bearing and angle measurements are neglected when we analyze the fundamental observability property.<br>After a series of elementary row transformations in ${Q}$, we can obtain</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_Qo_2}{Q}\rightarrow\begin{bmatrix}{I}_{3\times 3} & {0}_{3\times 3} & -g(t_1)/\theta(t_1) \\{0}_{3\times 3} & {I}_{3\times 3} & -\deltav(t_2)/\ell \\\vdots & \vdots & \vdots \\{0}_{3\times 3} & {I}_{3\times 3} & -\deltav(t_k)/\ell \\\hdashline{0}_{3k\times 3} & {0}_{3k\times 3} & {0}_{3k\times 1}\end{bmatrix},\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\deltav(t_k) \doteq v_T(t_k) - v_o(t_k)\end{aligned}</script><p>is the relative velocity.</p><p>In the following two subsections, we analyze the rank of the observability matrix in two scenarios where the observer moves with zero and nonzero acceleration, respectively. In the two scenarios, the target is always assumed to move with a constant velocity:</p><script type="math/tex; mode=display">\begin{aligned}v_T(t_k) = v_T^\text{const}.\end{aligned}</script><h2 id="Case-1-the-observer’s-velocity-is-constant"><a href="#Case-1-the-observer’s-velocity-is-constant" class="headerlink" title="Case 1: the observer’s velocity is constant"></a>Case 1: the observer’s velocity is constant</h2><p>Denoted $v_o\in \mathbb{R}^3$ as the velocity of the observer.<br>Consider the case where the observer has a constant velocity $v_o^\text{case1}(t_i)=v_o^\text{const}$ for any $i\in{1,\dots,k}$.<br>Then, the relative velocity is also constant:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_delta_vel_case1}\delta v^\text{case1}(t_i) = v_T^\text{const} - v_o^\text{const} = \deltav^\text{const}.\end{aligned}</script><p>Substituting <a href="#eq_delta_vel_case1">[eq_delta_vel_case1]</a>{reference-type=”eqref” reference=”eq_delta_vel_case1”} into <a href="#eq_Qo_2">[eq_Qo_2]</a>{reference-type=”eqref” reference=”eq_Qo_2”} and conducting elementary row transformation yields</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_Qo_3}{Q}^\text{case1}\rightarrow\left[\begin{array}{cc:c}{I}_{3\times 3} & {0}_{3\times 3} & -g(t_1)/\theta(t_1) \\{0}_{3\times 3} & {I}_{3\times 3} & -\deltav^\text{const}/\ell \\\hdashline{0}_{6(k-1)\times 3} & {0}_{6(k-1)\times 3} & {0}_{6(k-1)\times 1}\end{array}\right].\end{aligned}</script><p>Since the upper $6\times7$ block of <a href="#eq_Qo_3">[eq_Qo_3]</a>{reference-type=”eqref” reference=”eq_Qo_3”} has full row rank and the lower block is zero, the rank of ${Q}^\text{case1}$ is</p><script type="math/tex; mode=display">\begin{aligned}\text{rank}\left({Q}^\text{case1}\right) = 6.\end{aligned}</script><p>Since the number of states is seven and the rank is six, we know there is <em>one unobservable mode</em>.<br>To identify this unobservable mode, we calculate the unobservable subspace, which is the null space of ${Q}$:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_unobservable_subspace}\text{Null}\left({Q}^\text{case1}\right) = \text{span}\left\{\begin{bmatrix}g(t_1)/\theta(t_1)  \\\deltav^\text{const}/\ell \\1\end{bmatrix}\right\}.\end{aligned}</script><p>According to <a href="#eq_unobservable_subspace">[eq_unobservable_subspace]</a>{reference-type=”eqref” reference=”eq_unobservable_subspace”}, the unobservable mode is</p><script type="math/tex; mode=display">\begin{aligned}x^T\left[\begin{array}{c}g(t_1)/\theta(t_1)  \\\deltav^\text{const}/\ell \\1\end{array}\right]=p_T^\mathrm{T}\dfrac{g(t_1)}{\theta(t_1)}+v_T^\mathrm{T}\dfrac{\deltav^\text{const}}{\ell} + \ell.\label{eq_unobservable_mode}\end{aligned}</script><p>Although there is only one unobservable mode, this mode given in <a href="#eq_unobservable_mode">[eq_unobservable_mode]</a>{reference-type=”eqref” reference=”eq_unobservable_mode”} involves all the states including the target’s position, velocity, and physical size. It suggests that the estimation of the three quantities is coupled. In conclusion, we know that, if the target moves with a constant velocity, its states are unobservable when the observer moves with a constant velocity.</p><h2 id="Case-2-the-observer’s-velocity-is-time-varying"><a href="#Case-2-the-observer’s-velocity-is-time-varying" class="headerlink" title="Case 2: the observer’s velocity is time-varying"></a>Case 2: the observer’s velocity is time-varying</h2><p>We now consider the case where the observer has nonzero acceleration so that its velocity is time-varying across the time horizon from $t_1$ to $t_k$.</p><p>Denote ${a}_o(t_i)\in\mathbb{R}$ as the observer’s acceleration, which can be approximated as</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_acc}{a}_o(t_i) &\approx\dfrac{v_o(t_i) - v_o(t_{i-1})}{\delta t} \nonumber\\&=-\dfrac{\left[v_T^\text{const} - v_o(t_i)\right] - \left[v_T^\text{const} - v_o(t_{i-1})\right]}{\delta t} \nonumber\\&=-\dfrac{\delta v(t_i) - \delta v(t_{i-1})}{\delta t}.\end{aligned}</script><p>Substituting <a href="#eq_acc">[eq_acc]</a>{reference-type=”eqref” reference=”eq_acc”} into <a href="#eq_Qo_2">[eq_Qo_2]</a>{reference-type=”eqref” reference=”eq_Qo_2”} and performing elementary row transformation yields</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_Q_case2_final}{Q}^\text{case2}\rightarrow\left[\begin{array}{ccc}{I}_{3\times 3} & {0}_{3\times 3} & -g(t_1)/\theta(t_1) \\{0}_{3\times 3} & {I}_{3\times 3} & -\deltav(t_2)/\ell \\{0}_{3\times 3} & {0}_{3\times 3} & \delta t {a}_o(t_3)/\ell \\\hdashline\vdots & \vdots &\vdots \\{0}_{3\times 3} & {0}_{3\times 3} & \delta t {a}_o(t_k)/\ell \\{0}_{3k\times 3} & {0}_{3k\times 3} & {0}_{3k\times 1}\end{array}\right].\end{aligned}</script><p>The upper $6\times7$ block in <a href="#eq_Q_case2_final">[eq_Q_case2_final]</a>{reference-type=”eqref” reference=”eq_Q_case2_final”} has full column rank.<br>Therefore, if $a_o(t_i)\ne0$ for any $i\geq3$, then</p><script type="math/tex; mode=display">\begin{aligned}\text{rank}\left({Q}^\text{case2}\right) = 7,\end{aligned}</script><p>Which is the same as the number of estimated states.<br>Therefore, the target’s state is observable when the observer moves with nonzero acceleration.</p><h2 id="Summary-of-this-section"><a href="#Summary-of-this-section" class="headerlink" title="Summary of this section"></a>Summary of this section</h2><p>From the above analysis, we know that when the target has a constant velocity, its states including its position, velocity, and physical size are observable if and only if the observer has non-zero accelerations.</p><p>The critical difference of this condition from the bearing-only case is that the target’s states are still observable <em>even if the observer moves along the bearing vector</em> towards or backward the target.<br>By contrast, for a bearing-only estimator, moving along the bearing vector is insufficient to recover the target’s motion. Therefore, the additional lateral motion of the observer required in the bearing-only case is <em>not</em> required in the bearing-angle case anymore, which provides better flexibility for designing the observer’s motion.</p><h1 id="Observability-Analysis-by-Solving-Linear-Equations"><a href="#Observability-Analysis-by-Solving-Linear-Equations" class="headerlink" title="Observability Analysis by Solving Linear Equations"></a>Observability Analysis by Solving Linear Equations</h1><p>This section extends the observability condition obtained in the last section to more general cases where the target’s velocity does not have to be constant.</p><h2 id="Problem-formulation"><a href="#Problem-formulation" class="headerlink" title="Problem formulation"></a>Problem formulation</h2><p>The observability problem that we aim to solve is to determine whether $p_T(t)$ can be recovered from $p_o(t)$ and $g(t),\theta(t)$.</p><p>Suppose the target’s motion can be described by an $n$th-order polynomial during a time interval:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_target_nth_Order}    p_T(t)={b}_0+{b}_1t+\cdots+{b}_nt^n,\end{aligned}</script><p>where ${b}<em>0, {b}_1, \cdots, {b}_n\in\mathbb{R}^3$ are unknown constant vectors.<br>If we can determine the values of ${b_i}</em>{i=0}^n$, then we can determine the target’s motion and hence it is observable.<br>Although polynomials cannot represent all trajectories, they can effectively approximate a majority of them according to the method of Taylor expansion. This is especially true if we consider a short time horizon. This kind of technique has been adopted in the observability analysis of bearing-only target motion estimation tasks [@Nardone1981; @Lee2010].</p><p>Suppose the observer’s motion is described by</p><script type="math/tex; mode=display">\begin{aligned}    p_o(t)={c}_0+{c}_1t+\cdots+{c}_nt^n+{h}(t),\end{aligned}</script><p>where ${c}_0, {c}_1, \cdots, {c}_n\in\mathbb{R}^3$ are constant parameters, and</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_definition_h}{h}(t) = {d}_1 t^{n+1}+{d}_2t^{n+2}+\cdots\end{aligned}</script><p>represents <em>higher-order</em> motion with ${d}<em>1, {d}_2, \cdots\in\mathbb{R}^3$.<br>It can be verified that the derivatives of ${h}(t)$ satisfy ${h}^{(i)}(0)={0}</em>{3\times 1}$ for $i=0,1,\cdots, n$.<br>Let ${s}(t)\in\mathbb{R}^3$ be the relative motion between the target and the observer:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_relative_motion}    {s}(t)&\doteqp_T(t)-p_o(t)  \nonumber\\    &\doteq{s}_0+{s}_1t+\cdots+{s}_nt^n+{h}(t),\end{aligned}</script><p>where ${s}_i = {d}_i - {c}_i\in\mathbb{R}^3$ for $i = 0,1,\cdots, n$.</p><p>If we can determine ${s<em>i}</em>{i=0}^n$, then $s(t)$ and hence $p<em>T(t)$ can be determined.<br>Therefore, we next study under what conditions ${s_i}</em>{i=0}^n$ can be uniquely determined.<br>Since $p_T(t)-p_o(t)=g(t)r(t)$ according to <a href="#eq_bearing_measure">[eq_bearing_measure]</a>{reference-type=”eqref” reference=”eq_bearing_measure”} and $r(t)=\ell/\theta(t)$ according to <a href="#eq_theta_measure">[eq_theta_measure]</a>{reference-type=”eqref” reference=”eq_theta_measure”}, we have</p><script type="math/tex; mode=display">s(t)=p_T(t)-p_o(t)=g(t)r(t)=\frac{g(t)}{\theta(t)}\ell.</script><p>Substituting the above equation into <a href="#eq_relative_motion">[eq_relative_motion]</a>{reference-type=”eqref” reference=”eq_relative_motion”} yields</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_st_tem}{s}_0+{s}_1t+\cdots+{s}_nt^n+{h}(t)=\frac{g(t)}{\theta(t)}\ell.\end{aligned}</script><p>Here, ${s}_0, \cdots, {s}_n, \ell$ are unknowns to be determined and $g(t),\theta(t),{h}(t)$ are known.<br>Equation <a href="#eq_st_tem">[eq_st_tem]</a>{reference-type=”eqref” reference=”eq_st_tem”} can be reorganized to a linear equation:</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_linear_equations}    {A}(t){X} = {h}(t),\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}{X}&=\begin{bmatrix}{s}_0^\mathrm{T}, {s}_1^\mathrm{T}, \cdots, {s}_n^\mathrm{T}, \ell\end{bmatrix}^\mathrm{T}\in\mathbb{R}^{3n+4},\end{aligned}</script><p>and</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_original_A}{A}(t)&=\begin{bmatrix}{I}_{3\times3}, t{I}_{3\times3}, \cdots, t^n{I}_{3\times3}, \rho(t)\end{bmatrix}\in\mathbb{R}^{3\times(3n+4)},\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_rho_denote}\rho(t)&\doteq-\dfrac{g(t)}{\theta(t)}\in\mathbb{R}^3.\end{aligned}</script><p>Therefore, the problem that we aim to solve becomes determining whether $X$ can be uniquely solved from <a href="#eq_linear_equations">[eq_linear_equations]</a>{reference-type=”eqref” reference=”eq_linear_equations”}.</p><h2 id="Necessary-and-sufficient-observability-condition"><a href="#Necessary-and-sufficient-observability-condition" class="headerlink" title="Necessary and sufficient observability condition"></a>Necessary and sufficient observability condition</h2><p>We next present a necessary and sufficient condition under which the solution $X$ of <a href="#eq_linear_equations">[eq_linear_equations]</a>{reference-type=”eqref” reference=”eq_linear_equations”} is unique.</p><p><Theorem id="theorem_observability_confition "></Theorem><br><strong>Theorem 1.</strong> ((Necessary and sufficient observability condition)). *The target’s motion $p_T(t)$ can be uniquely determined by the observer’s motion $p_o(t)$, the bearing $g(t)$, and the angle $\theta(t)$ if and only if</p><script type="math/tex; mode=display">\begin{aligned}{h}(t)\neq{0}_{3\times1},\end{aligned}</script><p>which means that the order of the observer’s motion must be greater than the target.*</p><p>Since the row number of ${A}(t)$ is less than its column number, <a href="#eq_linear_equations">[eq_linear_equations]</a>{reference-type=”eqref” reference=”eq_linear_equations”} is an under-determined system whose solution cannot be uniquely determined.<br>However, in the continuous time domain, we can use additional higher derivatives of this equation to uniquely determine $X$.</p><p>In particular, taking the $i$th-order derivative on both sides of <a href="#eq_linear_equations">[eq_linear_equations]</a>{reference-type=”eqref” reference=”eq_linear_equations”} gives $A^{(i)}(t)X=h^{(i)}(t)$. Consider any integer $N$ satisfying $N\ge n+1$. Combining the equations with $i\in{0,1,\dots,N}$ gives</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_new_linear_equtions}    \bar(t){X} = \bar(t),\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_new_A}    \bar(t) =\left[  \begin{array}{c}    {A}(t) \\    {A}^{'}(t) \\    \vdots \\    {A}^{(N)}(t)  \end{array}\right],\qquad\bar(t)\left[  \begin{array}{c}    {h}(t)\\    {h}^{'}(t)\\    \vdots\\    {h}^{(N)}(t)\\  \end{array}\right].\end{aligned}</script><p>Here, $\bar(t)\in\mathbb{R}^{(3N+3)\times (3n+4)}$ and $\bar(t)\in\mathbb{R}^{3N+3}$.<br>Since $N\ge n+1$, $\bar{A}(t)$ is a tall matrix and <a href="#eq_new_linear_equtions">[eq_new_linear_equtions]</a>{reference-type=”eqref” reference=”eq_new_linear_equtions”} is an over-determined system.</p><p>We next examine when $\bar{A}(t)$ has full column rank.<br>Substituting <a href="#eq_original_A">[eq_original_A]</a>{reference-type=”eqref” reference=”eq_original_A”} into $\bar{A}(t)$ yields</p><script type="math/tex; mode=display">\begin{aligned}\bar(t)=    \left[\begin{array}{cccc:c}    {I}_{3\times3}& t{I}_{3\times3}& \cdots& t^n{I}_{3\times3}& \rho(t) \\    {0}_{3\times3}& {I}_{3\times3}& \cdots& nt^{n-1}{I}_{3\times3}& \rho^{'}(t) \\    \vdots & \vdots & \ddots & \vdots & \vdots \\    {0}_{3\times3}& {0}_{3\times3}& \cdots& n!{I}_{3\times3}& \rho^{(n)}(t) \\    \hdashline    {0}_{3\times3}& {0}_{3\times3}& \cdots& {0}_{3\times3}& \rho^{(n+1)}(t) \\\vdots & \vdots & \vdots & \vdots & \vdots  \\{0}_{3\times3}& {0}_{3\times3}& \cdots& {0}_{3\times3}& \rho^{(N)}(t) \\%\vdots & \vdots & \vdots & \vdots & \vdots  \\    \end{array}\right].\end{aligned}</script><p>Since the top-left block of $\bar{A}(t)$ is a full-rank square matrix, $\bar(t)$ has full column rank if and only if there exists $i\in{n+1,\dots,N}$ such that</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_observability_criteria_2}    \rho^{(i)}(t)\neq {0}_{3\times1}.\end{aligned}</script><p>Since $\rho(t)=-g(t)/\theta(t)$ as shown in <a href="#eq_rho_denote">[eq_rho_denote]</a>{reference-type=”eqref” reference=”eq_rho_denote”} and $g(t)/\theta(t)=({s}_0+{s}_1t+\cdots+{s}_nt^n+{h}(t))/\ell$ as shown in <a href="#eq_st_tem">[eq_st_tem]</a>{reference-type=”eqref” reference=”eq_st_tem”}, we can rewrite <a href="#eq_observability_criteria_2">[eq_observability_criteria_2]</a>{reference-type=”eqref” reference=”eq_observability_criteria_2”} to</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_critia_2}-\dfrac{1}{\ell}({s}_0+{s}_1t+\cdots+{s}_nt^n+{h}(t))^{(i)}\neq {0}_{3\times1}.\end{aligned}</script><p>Since $i\ge n+1$, <a href="#eq_critia_2">[eq_critia_2]</a>{reference-type=”eqref” reference=”eq_critia_2”} is equivalent to</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_observability_criteria_final}{h}^{(i)} (t) \neq {0}_{3\times1}.\end{aligned}</script><p>According to the definition of ${h}(t)$ in <a href="#eq_definition_h">[eq_definition_h]</a>{reference-type=”eqref” reference=”eq_definition_h”}, the condition in <a href="#eq_observability_criteria_final">[eq_observability_criteria_final]</a>{reference-type=”eqref” reference=”eq_observability_criteria_final”} is equivalent to</p><script type="math/tex; mode=display">\begin{aligned}{h}(t)\neq {0}_{3\times1}.\end{aligned}</script><p>The proof is complete.</p><p>Some important remarks about Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} are given below.</p><p>1) The necessary and sufficient condition suggested by Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} is that the observer should have higher-order motion than the target.<br>For example, when the target is stationary, the observer should move with a nonzero velocity. When the target moves with a constant velocity, the observer should move with a nonzero acceleration.</p><p>2) The necessary and sufficient condition given by Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} has a <em>key difference</em> from the bearing-only case that the higher-order motion in the bearing-angle case is <em>not</em> required to be orthogonal to the bearing vector, making the bearing-angle approach more flexible than the bearing-only one.<br>For example, the bearing-angle approach can estimate the target’s motion even if the observer simply moves along the bearing vector.</p><p>3) In the special case where the target moves with a constant velocity, the condition in Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} is consistent with the one obtained in Section <a href="#Observability Analysis by Kalman&#39;s Criterion">5</a>{reference-type=”ref” reference=”Observability Analysis by Kalman’s Criterion”}. Although the condition in Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} allows more general target motion, the analysis in Section <a href="#Observability Analysis by Kalman&#39;s Criterion">5</a>{reference-type=”ref” reference=”Observability Analysis by Kalman’s Criterion”} is still meaningful since it is directly related to the dynamic model used in the pseudo-linear Kalman filter.</p><p>4) In practice, we would not estimate the target’s motion by using the method of solving an equation like <a href="#eq_new_linear_equtions">[eq_new_linear_equtions]</a>{reference-type=”eqref” reference=”eq_new_linear_equtions”}. That is because such a method involves calculating high-order derivatives, which are challenging to obtain accurately in practice. The role of this equation is to provide a fundamental perspective on whether there is sufficient information to uniquely recover the target’s motion.</p><h2 id="Number-of-observations-required"><a href="#Number-of-observations-required" class="headerlink" title="Number of observations required"></a>Number of observations required</h2><p>::: figure*</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_A_22}\tilde{A}\rightarrow\left[\begin{array}{ccccc:c}{I} & t_1{I} & \cdots & t_1^{n-1}{I} & t_1^n{I} & \rho(t_1) \\{0} & {I} & \cdots & {\Delta(t_2^{n-1}, t_1^{n-1})}{I} & {\Delta(t_2^n, t_1^n)}{}{I} & {\Delta(\rho(t_2),\rho(t_1) )}{} \\\vdots & \vdots & \ddots & \vdots & \vdots & \vdots \\{0} & {0} & \cdots & (n-1)!{I} & {\Delta^{n-1}(t_n^n, \cdots , t_1^n)}{} & {\Delta^{n-1}(\rho(t_n),\cdots,\rho(t_1) )}{} \\{0} & {0} & \cdots & {0} & n!{I} &  {\Delta^{n}(\rho(t_{n+1}),\cdots,\rho(t_1) )}{} \\\hdashline{0} & {0} & \cdots & {0} & {0} & {\Delta^{n+1}(\rho(t_{n+2}),\cdots,\rho(t_1) )}{} \\\vdots & \vdots & \vdots & \vdots & \vdots & \vdots  \\{0} & {0} & \cdots & {0} & {0} & {\Delta^{N-1}(\rho(t_N),\cdots,\rho(t_1) )}{} \\\end{array}\right]\end{aligned}</script><p>:::</p><p>It is of practical importance to study how many discrete observations are required to recover the target’s motion. Although Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} gives an observability condition, it does not answer this question because it is based on the continuous time domain. We next answer this question by exploring multiple discrete time steps.</p><p><Theorem id="theorem_observation_number"></Theorem><br><strong>Theorem 2.</strong> ((Number of discrete observations)). <em>If the observer’s motion satisfies the observability condition in Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”}, it is necessary and sufficient to use at least $n+2$ observations to recover the target’s motion. Here, $n$ is the order of the target’s polynomial motion as shown in <a href="#eq_target_nth_Order">[eq_target_nth_Order]</a>{reference-type=”eqref” reference=”eq_target_nth_Order”}.</em></p><p>Consider $t_1,\dots,t_N$ time instances. Each time instance corresponds to an equation like <a href="#eq_linear_equations">[eq_linear_equations]</a>{reference-type=”eqref” reference=”eq_linear_equations”}: ${A}(t_i){X} = {h}(t_i)$ for $i=1,\dots,N$.<br>Combining these equations gives</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_convergence_linear_eqs}\tilde{X}=\tilde,\end{aligned}</script><p>where</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_new_A_2}    \tilde =\left[  \begin{array}{c}    {A}(t_1) \\    \vdots \\    {A}(t_N)  \end{array}\right],\qquad\tilde\left[  \begin{array}{c}    {h}(t_1)\\    \vdots\\    {h}(t_N)\\  \end{array}\right].\end{aligned}</script><p>Here, $\tilde\in\mathbb{R}^{(3N) \times (3n+4)}$ and $\tilde\in\mathbb{R}^{3N}$.</p><p>(<em>Necessity</em>) Since $X\in\mathbb{R}^{3n+4}$, we need at least $N\ge n+2$ observations so that $\tilde$ is a tall matrix and hence <a href="#eq_convergence_linear_eqs">[eq_convergence_linear_eqs]</a>{reference-type=”eqref” reference=”eq_convergence_linear_eqs”} is an over-determined system.</p><p>(<em>Sufficiency</em>)<br>Suppose we have $N\ge n+2$ discrete observations.<br>Substituting <a href="#eq_original_A">[eq_original_A]</a>{reference-type=”eqref” reference=”eq_original_A”} into <a href="#eq_new_A_2">[eq_new_A_2]</a>{reference-type=”eqref” reference=”eq_new_A_2”} yields</p><script type="math/tex; mode=display">\begin{aligned}\tilde{A} =\begin{bmatrix}{I}_{3\times 3} & t_1{I}_{3\times 3} & \cdots & t_1^n{I}_{3\times 3} & \rho(t_1) \\{I}_{3\times 3} & t_2{I}_{3\times 3} & \cdots & t_2^n{I}_{3\times 3} & \rho(t_2)  \\\vdots & \vdots && \vdots & \vdots  \\{I}_{3\times 3} & t_{n+1}{I}_{3\times 3} & \cdots & t_{n+1}^n{I}_{3\times 3} & \rho(t_{n+1}) \\{I}_{3\times 3} & t_{n+2}{I}_{3\times 3} & \cdots & t_{n+2}^n{I}_{3\times 3} & \rho(t_{n+2})\\\vdots & \vdots & \vdots & \vdots & \vdots\\{I}_{3\times 3} & t_{N}{I}_{3\times 3} & \cdots & t_{N}^n{I}_{3\times 3} & \rho(t_{N})\\\end{bmatrix}.\end{aligned}</script><p>Starting from the last line in $\tilde{A}$, subtract the previous line from each subsequent line, and repeat this process.<br>Finally, we can obtain <a href="#eq_A_22">[eq_A_22]</a>{reference-type=”eqref” reference=”eq_A_22”} (the equation is too long and located at the top of another page).<br>Here, $\Delta^n$ represents the $n$th-order time difference [@MilneThomson2000].<br>For example, $\Delta (a_2, a_1)=(a_2-a_1)/\delta t$, $\Delta^2 (a_3, a_2, a_1) = \Delta (\Delta(a_3, a_2), \Delta(a_2, a_1))=[(a_3-a_2)/\delta t-(a_2-a_1)/\delta t]/\delta t$.<br>When $\delta t$ is sufficiently small, the time difference is an approximation of the derivative.<br>When the observability condition in Theorem <a href="#theorem_observability_confition">1</a>{reference-type=”ref” reference=”theorem_observability_confition”} is satisfied, there exists $i\ge n+1$ such that $\rho^{(i)}(t)\neq 0$ as shown in <a href="#eq_observability_criteria_2">[eq_observability_criteria_2]</a>{reference-type=”eqref” reference=”eq_observability_criteria_2”}. As a result, there exists $i\ge n+1$ such that</p><script type="math/tex; mode=display">\begin{aligned}\Delta^{i}(\rho(t_{i+1}),\cdots,\rho(t_1))\neq {0}.\end{aligned}</script><p>The above implication is valid because $\Delta^{i}$ is an approximation of the $i$th-order derivative when $\delta t$ is sufficiently small.<br>Then, $\tilde{A}$ in <a href="#eq_A_22">[eq_A_22]</a>{reference-type=”eqref” reference=”eq_A_22”} has full column rank and hence <a href="#eq_convergence_linear_eqs">[eq_convergence_linear_eqs]</a>{reference-type=”eqref” reference=”eq_convergence_linear_eqs”} has a unique solution.</p><p>Theorem <a href="#theorem_observation_number">2</a>{reference-type=”ref” reference=”theorem_observation_number”} suggests that when the target is stationary and hence $n=0$, at least two discrete observations are sufficient to localize the target. This is true even if the two observations are acquired when the observer moves along the bearing vector.<br>When the target moves with a constant velocity and hence $n=1$, at least three discrete observations are sufficient to localize the target, which is consistent with the results in Section <a href="#Observability Analysis by Kalman&#39;s Criterion">5</a>{reference-type=”ref” reference=”Observability Analysis by Kalman’s Criterion”}.</p><h1 id="Numerical-Simulation-Results"><a href="#Numerical-Simulation-Results" class="headerlink" title="Numerical Simulation Results"></a>Numerical Simulation Results</h1><figure id="sec_matlab_simulation">  <figure id="fig_matlab_1"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_1.png" />  <figcaption><b>(a)</b> Scenario 1: Circular motion around the target. Both the bearing-only and bearing-angle approaches work well, but the bearing-angle one converges faster.</figcaption>  <figure id="fig_matlab_2"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_2.png" />  <figcaption><b>(b)</b> Scenario 2: Straight motion towards and backwards the target. The bearing-only approach fails, but the bearing-angle approach works effectively.</figcaption>  <figure id="fig_matlab_3"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_3.png" />  <figcaption><b>(c)</b> Scenario 3: Approaching the target by a guidance law. The bearing-only approach works unstably, but the bearing-angle approach works effectively.</figcaption><figcaption><b>Figure 4.</b> Numerical simulation results based on 100 Monte Carlo runs in three scenarios.</figcaption></figure><figure id="fig_matlab_varying_ell">  <figure id="fig_cam_rotate"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_4.png" />  <figcaption><b>(a)</b> The observer moves around the square-shaped target. The target spins rapidly at $2\pi$~rad/s.</figcaption>  <figure id="fig_matlab_pi_8"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_pi_8.png" />  <figcaption><b>(c)</b>The observer moves along the bearing vector. The target's spinning speed is $\pi/8$~rad/s.</figcaption><figcaption><b>Figure 5.</b> Numerical simulation results for time-varying $\ell$.</figcaption></figure><p>This section presents a set of numerical simulation results to demonstrate the effectiveness of the proposed bearing-angle approach.</p><p>The values of the parameters in two estimators are selected as $\sigma<em>v=10^{-3}$, $\sigma_l=10^{-4}$, $\sigma</em>\mu=0.01$, and $\sigma_w=0.01$.<br>The selection of these values is inspired by the measurement noises obtained in the AirSim simulation and real-world experiments as shown later.<br>The initial covariance matrix of the estimated states is set to $P(t_0)=0.1I$.<br>The target is a circle whose diameter is $\ell=1$.<br>The update rate of the system is $50$ Hz.<br>In addition, we use the same parameter values across all the simulation examples to verify the robustness of the algorithm.<br>Better performances can be achieved if the parameters are well-tuned for specific scenarios.<br>We perform $N_x=100$ Monte Carlo simulations for each scenario.</p><p>We use the normalized-estimation error squared (NEES) [@bar1998estimation] to analyze the consistency of the estimation algorithms.<br>In particular, the value of the average NEES is</p><script type="math/tex; mode=display">\begin{aligned}    \bar{\epsilon}_{\text{NEES}}=\dfrac{1}{N_x}\sum_{i=1}^{N_x}(x-\hat{x}_i)^\mathrm{T}P_i^{-1}(x-\hat{x}_i),    \label{eq_nees}\end{aligned}</script><p>where $\hat{x}_i$ is the estimated states in the $i$th simulation, and $P_i$ is the covariance matrix obtained from the estimator in the $i$th simulation.</p><p>Finally, image acquisition and visual detection are not considered in these numerical simulation scenarios. They will be considered in Section <a href="#AirSim Simulation Results">8</a>{reference-type=”ref” reference=”AirSim Simulation Results”} and Section <a href="#Real-World Experimental Results">9</a>{reference-type=”ref” reference=”Real-World Experimental Results”}.</p><h2 id="Scenario-1-Circular-motion-around-the-target"><a href="#Scenario-1-Circular-motion-around-the-target" class="headerlink" title="Scenario 1: Circular motion around the target"></a>Scenario 1: Circular motion around the target</h2><p>In the first scenario, the target is stationary and located at $p_T=[0, 10]^\mathrm{T}$.<br>The observer moves on a circle centered at the target with the speed of $3$ m/s (see Fig. <a href="#fig_matlab_1">[fig_matlab_1]</a>{reference-type=”ref” reference=”fig_matlab_1”}).<br>The radius of the circle is $5$ m.<br>The initial estimates are $\hatp_o(t_0) = [0, 13]^\mathrm{T}$, $\hat{v_o}(t_0)=[0, 0]^\mathrm{T}$, $\hat{\ell}(t_0)=1.6$.<br>During this process, the bearing vector varies while the angle subtended by the target remains constant.<br>The angle measurement varies slightly due to the measurement noise.<br>This scenario is favorable to the conventional bearing-only approach because its observability condition that the target should be viewed from different angles is well satisfied [@Li2022].</p><p>Fig. <a href="#fig_matlab_1">[fig_matlab_1]</a>{reference-type=”ref” reference=”fig_matlab_1”} shows the estimation results by the two approaches of bearing-only and bearing-angle.<br>As can be seen, both algorithms perform well.<br>The convergence of the bearing-angle approach is faster than the bearing-only one, as shown in the middle and right subfigures of Fig. <a href="#fig_matlab_1">[fig_matlab_1]</a>{reference-type=”ref” reference=”fig_matlab_1”}, due to the additional angle measurement.<br>The bearing-angle approach can successfully estimate the size of the target as shown in the right subfigure of Fig. <a href="#fig_matlab_1">[fig_matlab_1]</a>{reference-type=”ref” reference=”fig_matlab_1”}.</p><h2 id="Scenario-2-Straight-motion-towards-and-backwards-the-target-repeatedly"><a href="#Scenario-2-Straight-motion-towards-and-backwards-the-target-repeatedly" class="headerlink" title="Scenario 2: Straight motion towards and backwards the target repeatedly"></a>Scenario 2: Straight motion towards and backwards the target repeatedly</h2><p>In the second scenario, the target is also stationary but the observer moves along a straight line towards and backwards the target repeatedly (Fig. <a href="#fig_matlab_2">[fig_matlab_2]</a>{reference-type=”ref” reference=”fig_matlab_2”}).<br>During this process, the bearing vector remains constant while the angle varies.<br>This scenario is most challenging for the bearing-only approach because its observability condition is not fulfilled.</p><p>In this simulation scenario, the target is stationary and located at $p_T(t_0)=[0, 10]^\mathrm{T}$.<br>The observer moves along a straight line towards and backwards the target with a constant acceleration of $-2$ $\text{m/s}^2$. The initial conditions are $v_o(t_0)=[0, 4]^\mathrm{T}$ and $p_o (t_0)= [0,5]^\mathrm{T}$.<br>The initial estimates are $\hatp_o(t_0) = [0, 8]^\mathrm{T}$, $\hat{v_o}(t_0)=[0, 0]^\mathrm{T}$, $\hat{\ell}(t_0)=0.8$.<br>In this scenario, the true bearing of the target relative to the observer remains unchanged though the bearing measurement may vary slightly due to the measurement noise.</p><p>Fig. <a href="#fig_matlab_2">[fig_matlab_2]</a>{reference-type=”ref” reference=”fig_matlab_2”} shows the estimation results of the bearing-only and bearing-angle approaches.<br>As can be seen, the bearing-only approach diverges since its observability condition is not satisfied.<br>By contrast, the proposed bearing-angle approach converges, and is able to localize the target and estimate its size, which demonstrates the strong observability of the bearing-angle approach.<br>One may notice that the estimated size and the NEES value get worse first before converging.<br>This is because the noise level of the angle is set to be constant. Since the angle is small in the beginning, the noise-angle ratio is large, causing a relatively large NEES value.</p><p>::: figure*<br>:::</p><p>::: figure*<br><img src="fig_box_airsim" alt="image">{width=”1\linewidth”}<br>:::</p><h2 id="Scenario-3-Approaching-the-target-by-a-guidance-law"><a href="#Scenario-3-Approaching-the-target-by-a-guidance-law" class="headerlink" title="Scenario 3: Approaching the target by a guidance law"></a>Scenario 3: Approaching the target by a guidance law</h2><p>The third scenario is more complex than the first two. Here, the target moves with a constant velocity where the observer is controlled by a proportional navigation guidance (PNG) law to approach the target (Fig. <a href="#fig_matlab_3">[fig_matlab_3]</a>{reference-type=”ref” reference=”fig_matlab_3”}).<br>During this process, both the bearing and angle vary.<br>This scenario is also challenging for the bearing-only approach because its observability is weak due to the fact that the lateral motion of the observer is small.<br>Many researchers have studied how to add extra control commands to the PNG to enhance the observability based on the bearing-only approach [@Song1996; @Seo2015; @Lee2015].</p><p>In this simulation scenario, the target moves along a straight line with a constant velocity $v_T=[1/\sqrt{2}, 1/\sqrt{2}]^\mathrm{T}$.<br>The observer’s velocity magnitude is constantly $3$ m/s while the velocity direction is controlled by a PNG law.<br>The navigation gain of the PNG law is selected as one.<br>The initial estimates of the target’s states are the same as Scenario 1.<br>The simulation stops just before the observer collides with the target.</p><p>Fig. <a href="#fig_matlab_3">[fig_matlab_3]</a>{reference-type=”ref” reference=”fig_matlab_3”} shows the estimation results by the bearing-only and bearing-angle approaches. As can be seen, the bearing-angle algorithm successfully converges before the collision occurs, but the bearing-only algorithm fails to estimate the target’s states due to its weak observability.<br>This simulation example demonstrates that the bearing-angle algorithm can be used directly in the guidance scenario without extra maneuvers required by the bearing-only approach [@Song1996; @Seo2015; @Lee2015].</p><h2 id="Simulation-results-for-time-varying-ell"><a href="#Simulation-results-for-time-varying-ell" class="headerlink" title="Simulation results for time-varying $\ell$"></a>Simulation results for time-varying $\ell$</h2><p>Although $\ell$ is assumed to be invariant, it is meaningful to challenge the proposed bearing-angle approach by considering time-varying $\ell$.<br>We will see through simulation examples that the bearing-angle approach is still effective when $\ell$ varies slowly. It becomes unstable when $\ell$ varies rapidly since the assumption of invariant $\ell$ is severely invalid.</p><p>Suppose that the target object has a square shape. Then, $\ell$ varies when the object is observed from different viewing angles or the object spins.<br>Fig. <a href="#fig_matlab_4">[fig_matlab_4]</a>{reference-type=”ref” reference=”fig_matlab_4”} shows a scenario where the observer moves around the target, whose spinning speed is $2\pi$ rad/s.<br>The red curve in the right subfigure represents the true value of $\ell$, which varies rapidly.<br>As can be seen, the bearing-angle algorithm works effectively though there is a small estimation bias.<br>Fig. <a href="#fig_matlab_pi_8">[fig_matlab_pi_8]</a>{reference-type=”ref” reference=”fig_matlab_pi_8”} shows a scenario where the observer moves along the bearing vector. The spinning speed of the target object is $\pi/8$ rad/s.<br>As can be seen, the bearing-only approach diverges due to the lack of observability. The bearing-angle algorithm can still converge since $\ell$ varies slowly.<br>When we further increase the spinning speed of the target, the bearing-angle algorithm will also diverge because the algorithm cannot distinguish whether the change of $\theta$ is caused by the change of $\ell$ or the change of $r$.</p><h1 id="AirSim-Simulation-Results"><a href="#AirSim-Simulation-Results" class="headerlink" title="AirSim Simulation Results"></a>AirSim Simulation Results</h1><p>In this section, we show simulation results under a more realistic setup. In particular, the simulation is based on AirSim, a simulator that can provide high-quality visual simulation [@Shah2017]. Nonlinear MAV dynamics and control are also considered.</p><p>::: figure*<br>:::</p><h2 id="Simulation-setup"><a href="#Simulation-setup" class="headerlink" title="Simulation setup"></a>Simulation setup</h2><p>::: figure*<br>:::</p><p>Fig. <a href="#fig_architecture_airsim">[fig_architecture_airsim]</a>{reference-type=”ref” reference=”fig_architecture_airsim”} shows an AirSim simulation scenario.<br>As can be seen, there are two flying quadcopter MAVs. The observer MAV can capture images of the target MAV using its simulated onboard camera.<br>A simple gimbal camera controller is implemented so that the target MAV is always located inside the field of view of the camera.<br>The visual environment used in the simulation is called Landscape Mountains, which includes realistic mountains, lakes, trees, and roads. Other environments can also be used if needed.</p><p>The bearing and angle measurements are obtained from the bounding boxes generated by a Yolo-based detection algorithm.<br>A tiny-YOLO v4 network [@Bochkovskiy2020] is trained to detect the target MAV in the images. Although the visual detector can be replaced by other state-of-the-art ones, the tiny-YOLO v4 network is already sufficient to verify our proposed approach.<br>The architecture of the entire simulation system is shown in Fig. <a href="#fig_box_airsim">[fig_box_airsim]</a>{reference-type=”ref” reference=”fig_box_airsim”}.<br>The system consists of the modules of automatic image dataset collection, Yolo-based target detection, gimbal camera control, nonlinear quadcopter dynamics, and quadcopter flight control.<br>The quadcopter dynamics and flight control used in the simulation are similar to [@Meier2011; @Shah2017] and omitted here due to space limitation.<br>The quadcopter’s physical size varies slightly when viewed from different directions, although it is assumed to be invariant.<br>All of these factors make the Airsim simulation more realistic and challenging.</p><h2 id="Automatic-dataset-collection"><a href="#Automatic-dataset-collection" class="headerlink" title="Automatic dataset collection"></a>Automatic dataset collection</h2><p>To train the Yolo-based detector, we developed a module to automatically collect an image dataset.<br>This module has some advantages.<br>First, it is efficient. More than ten thousand labeled images can be collected automatically in 24 hours.<br>Second, it is flexible.<br>It can acquire images with random target’s positions, random target’s attitudes, random camera’s view angles, and random background scenes.<br>These images are beneficial to achieve a good generalization ability of the detector.<br>Third, the image labels are of high quality. Since the ground truth of the target’s image is known in the simulation, the generated bounding box is tight.<br>The collected dataset contains 17,000 labeled images (see Fig. <a href="#fig_airsim_dataset">[fig_airsim_dataset]</a>{reference-type=”ref” reference=”fig_airsim_dataset”}).<br>The resolution of the images is $1536\times 864$ pixels.<br>The simulation system was deployed on a Dell Precision 7920 Tower Workstation with two NVIDIA Quadro GV100 graphic cards.<br>Since the dataset is sufficient and high-quality, the detection can achieve the accuracy of mAP=99.5%.</p><h2 id="Scenario-1-Approaching-and-following-the-target"><a href="#Scenario-1-Approaching-and-following-the-target" class="headerlink" title="Scenario 1: Approaching and following the target"></a>Scenario 1: Approaching and following the target</h2><p>We first consider the scenarios where the observer MAV approaches or follows a target MAV.<br>These scenarios widely exist in practical applications such as aerial target pursuit.</p><p>We show two simulation examples in Fig. <a href="#fig_airsim_1">[fig_airsim_1]</a>{reference-type=”ref” reference=”fig_airsim_1”} and Fig. <a href="#fig_airsim_2">[fig_airsim_2]</a>{reference-type=”ref” reference=”fig_airsim_2”}, respectively.<br>In both examples, the observer is controlled by a controller so that it can approach the target and maintain a desired separation. In particular, the controller is</p><script type="math/tex; mode=display">\begin{aligned}\label{eq_tracking_control}v_o^\text{cmd}(t)&=v_T(t)+k^\text{track}\dfrac{r^2(t)-r_d^2}{r^2(t)}g(t),\end{aligned}</script><p>where $v_o^\text{cmd}(t)$ is the velocity command of the observer MAV, $k^\text{track}=3$ is the control gain, and $r_d=3$ is the desired separation.<br>The magnitude of the observer’s velocity is bounded from above by $3$ m/s.<br>It should be noted that <a href="#eq_tracking_control">[eq_tracking_control]</a>{reference-type=”eqref” reference=”eq_tracking_control”} relies on the true position and velocity of the target MAV in the simulation. Therefore, the data is collected first and then processed offline so that we can compare the performances of the bearing-only and bearing-angle approaches.</p><p>In the first example, the target MAV hovers constantly at $p_T(t_0)=[0, 10, 10]^\mathrm{T}$.<br>The observer MAV moves along a straight line toward the target with a decreasing velocity command.<br>Since the bearing of the target MAV remains the same, this example is challenging for the bearing-only approach.<br>As shown in Fig. <a href="#fig_airsim_1">[fig_airsim_1]</a>{reference-type=”ref” reference=”fig_airsim_1”}, the bearing-only approach fails to converge while the bearing-angle approach can successfully estimate the target’s motion.</p><p>In the second example, the target MAV moves with a constant velocity of $v_T=[1/\sqrt{2}, 1/\sqrt{2}, 0]^\mathrm{T}$.<br>The trajectory of the observer MAV under the control of <a href="#eq_tracking_control">[eq_tracking_control]</a>{reference-type=”eqref” reference=”eq_tracking_control”} is still close to (though not strictly) a straight line. As a result, the observability is weak by the bearing-only approach.<br>As shown in Fig. <a href="#fig_airsim_2">[fig_airsim_2]</a>{reference-type=”ref” reference=”fig_airsim_2”}, the bearing-angle approach successfully converges while the bearing-only one fails.<br>It is notable that $\ell$ is invariant in the first example and varies slowly in the second example.</p><p>It is worth mentioning that the detection results used in the estimation algorithms are obtained from the Yolo-based estimator.<br>The ground truth obtained from AirSim is only used to calculate the errors of measurements, as shown in the right figures of Figs. <a href="#fig_airsim_1">[fig_airsim_1]</a>{reference-type=”ref” reference=”fig_airsim_1”} and <a href="#fig_airsim_2">[fig_airsim_2]</a>{reference-type=”ref” reference=”fig_airsim_2”}.<br>It is not surprising that the measurement noises are not strictly Gaussian since the 2D bounding box is generated by a deep learning vision algorithm. It is noticed that the noises are inversely correlated to the observer-target range.<br>This is reasonable because, when the target is close to the camera and hence its image is large, the center point and the size of the bounding box usually vary for a few pixels.</p><p>The NEES values are also shown in Fig. <a href="#fig_airsim">[fig_airsim]</a>{reference-type=”ref” reference=”fig_airsim”}.<br>As can be seen, the NEES value of the bearing-only approach diverges. The NEES value of the bearing-angle approach oscillates and converges slowly. The reasons are analyzed as follows. Compared to the Matlab-based numerical simulation, the visual measurements here are generated by deep learning algorithms, and the measurement noises are non-Gaussian. The non-Gaussian noises propagate into $P$ in <a href="#eq_nees">[eq_nees]</a>{reference-type=”eqref” reference=”eq_nees”} since the calculation of $P$ relies on noisy measurements. The noises may also cause an estimation bias that can further aggravate the NEES error. Moreover, although the system is observable in the two simulation examples, the observability is relatively weak compared to the case where the observer moves surrounding the target. As a result, the matrix $P$ may not be able to perfectly describe the estimation accuracy. These elements may jointly cause the convergence behavior of the NEES values shown in Fig. <a href="#fig_airsim">[fig_airsim]</a>{reference-type=”ref” reference=”fig_airsim”}.</p><h2 id="Scenario-2-Circular-motion-and-varying-ell"><a href="#Scenario-2-Circular-motion-and-varying-ell" class="headerlink" title="Scenario 2: Circular motion and varying $\ell$"></a>Scenario 2: Circular motion and varying $\ell$</h2><p>We next examine a case where $\ell$ is time-varying.<br>In particular, suppose a target quadcopter MAV hovers constantly at $p_T(t_0)=[0, 10, 10]^\mathrm{T}$.<br>The observer MAV moves on a circle centered at the target (Fig. <a href="#fig_airsim_6_1">[fig_airsim_6_1]</a>{reference-type=”ref” reference=”fig_airsim_6_1”}).<br>Since the target quadcopter MAV has a square shape from the top view, its size $\ell$ is time-varying when viewed from side angles (see the red curves in the middle subfigure of Fig. <a href="#fig_airsim_6_1">[fig_airsim_6_1]</a>{reference-type=”ref” reference=”fig_airsim_6_1”}).</p><p>We show two simulation examples in Fig. <a href="#fig_airsim_6_1">[fig_airsim_6_1]</a>{reference-type=”ref” reference=”fig<em>airsim_6_1”} and Fig. <a href="#fig_airsim_6_2">[fig_airsim_6_2]</a>{reference-type=”ref” reference=”fig_airsim_6_2”}, respectively.<br>The two simulation examples share the same measurement data but different values of $\sigma</em>\ell$.<br>Moreover, the other parameters are the same as those in Section <a href="#Scenario 1: Approaching and following the target">8.3</a>{reference-type=”ref” reference=”Scenario 1: Approaching and following the target”}.</p><p>::: figure*<br>:::</p><p>In the first simulation example, $\sigma<em>\ell$ is set to be a small value: $\sigma</em>\ell=10^{-4}$.<br>Its interpretation is that $\ell$ is treated as invariant during the process.<br>In this case, the performance of the bearing-angle approach is almost the same as the bearing-only one as shown in Fig. <a href="#fig_airsim_6_1">[fig_airsim_6_1]</a>{reference-type=”ref” reference=”fig_airsim_6_1”}.<br>Since $\ell$ is treated to be invariant, the estimated value $\hat{\ell}$ converges to a constant which is the mean value of the time-varying $\ell$.</p><p>In the second simulation example, the value of $\sigma<em>\ell$ is larger than the first example: $\sigma</em>\ell = 0.01$.<br>Its interpretation is that $\ell$ is believed to be time-varying during the process.<br>In this case, the performance of the bearing-angle approach is still almost the same as the bearing-only one.<br>Moreover, since $\sigma_\ell$ is large, the bearing-angle approach can successfully estimate the true time-varying value of $\ell$.</p><p>In summary, in the case where $\ell$ varies slowly, the bearing-angle approach would degenerate to the bearing-only one.<br>The fundamental reason is that the extra information embedded in the angle measurement is used to estimate the time-varying $\ell$ rather than improving the observability of the target’s motion.</p><p>::: figure*<br>:::</p><h1 id="Real-World-Experimental-Results"><a href="#Real-World-Experimental-Results" class="headerlink" title="Real-World Experimental Results"></a>Real-World Experimental Results</h1><p>In this section, two sets of real-world experiments are presented to further verify the effectiveness of the approach. The first is based on a hand-held camera and a ground robot.<br>The second is based on two quadcopter MAVs. The second experimental scenario is motivated by aerial target pursuit tasks.</p><h2 id="Experiment-1-Hand-held-camera"><a href="#Experiment-1-Hand-held-camera" class="headerlink" title="Experiment 1: Hand-held camera"></a>Experiment 1: Hand-held camera</h2><p>The experimental setup is shown in Fig. <a href="#fig_architecture_indoor">[fig_architecture_indoor]</a>{reference-type=”ref” reference=”fig_architecture_indoor”}.<br>The observer is a hand-held camera (Hik Vision DS-E14S) connected to a laptop. The camera’s intrinsic parameters are calibrated beforehand.<br>The robot built on Mecanum wheels can move in any direction on the ground under velocity control.<br>The ground truth of the states of the camera and the robot are provided by a Vicon indoor motion capture system.<br>The key experimental specifications are listed in Table <a href="#table_indoor_hardware">[table_indoor_hardware]</a>{reference-type=”ref” reference=”table_indoor_hardware”}.</p><p>A dataset of 5,514 images was collected and used to train a tiny-YOLO v4 network to detect the target robot (see Fig. <a href="#fig_car_dataset">[fig_car_dataset]</a>{reference-type=”ref” reference=”fig_car_dataset”}).<br>The detection precision of the trained network is mAP=99.8%.<br>In the experiment, the target robot is commanded to move with a constant velocity.<br>In the meantime, a person holding the camera moves along some trajectories.<br>Two different cases are studied. In both of the cases, the target robot moves with a constant velocity $v_T=[-0.1, 0.1 ,0]^\mathrm{T}$.<br>The noises of the measurements are calculated based on the ground truth provided by the Vicon system. The noises are shown in the right subfigures of Fig. <a href="#fig_indoor_9">[fig_indoor_9]</a>{reference-type=”ref” reference=”fig_indoor_9”} and Fig. <a href="#fig_indoor_6">[fig_indoor_6]</a>{reference-type=”ref” reference=”fig_indoor_6”}.</p><p>In the first case, the camera is held about 1.5 meters above the ground and moves around the target robot. In this case, the bearing vector varies sufficiently and hence the observability conditions for the bearing-only and bearing-angle approaches are both well satisfied. As shown in Fig. <a href="#fig_indoor_9">[fig_indoor_9]</a>{reference-type=”ref” reference=”fig_indoor_9”}, both approaches perform well in this case while the bearing-angle approach performs slightly better than the bearing-only one.</p><p>In the second case, the camera moves along the trajectory of the robot by getting close or far from it periodically.<br>In this case, the angle varies significantly, but the bearing does not.<br>Without surprise, the bearing-only approach performs poorly in this case due to weak observability (Fig. <a href="#fig_indoor_6">[fig_indoor_6]</a>{reference-type=”ref” reference=”fig_indoor_6”}).<br>By contrast, the bearing-angle approach can perform stably due to its enhanced observability.</p><p>::: center<br>::: tabular<br>l|lll<br>&amp; Parameter &amp; Value &amp; Unit\<br>*Camera &amp; Resolution &amp; 640$\times$ 480 &amp; pixel\<br>  &amp; Max frequency &amp; 30 &amp;fps\<br>*Robot &amp; Max speed &amp; 1&amp; m/s\<br>  &amp; Diameter size &amp; 295 &amp; mm\<br>*Vicon &amp; Localization accuracy &amp; 1 &amp; mm\<br>  &amp; Max frequency &amp; 100 &amp; Hz\<br>:::<br>:::</p><h2 id="Experiment-2-MAV-following-MAV"><a href="#Experiment-2-MAV-following-MAV" class="headerlink" title="Experiment 2: MAV-following-MAV"></a>Experiment 2: MAV-following-MAV</h2><p>::: center<br>::: tabular<br>c|lll<br>&amp; Parameter &amp; Value &amp; Unit\<br>&amp; Diagonal size &amp; 895 &amp; mm\<br> &amp;Total mass &amp; 7.4 &amp; kg\<br> &amp;Max pitch/roll &amp; 30 &amp; degree\<br> &amp;Max flight time &amp; 30 &amp; minutes\<br>&amp; Accuracy &amp; 1 &amp; cm\<br> &amp; Max frequency &amp; 10 &amp; Hz\<br>&amp; Resolution &amp;1920$\times$<code>&lt;!-- --&gt;</code>{=html}1080 &amp; pixel\<br> &amp; Frequency &amp; 15 &amp; Hz\<br>  &amp; Max angular rate &amp; 180 &amp; deg/s\<br>:::<br>:::</p><p>::: figure*<br>:::</p><p>::: figure*<br><img src="fig_outdoor_1" alt="image">{width=”1\linewidth”}<br>:::</p><p>Two MAV platforms were developed based on DJI M300 quadcopters (Fig. <a href="#fig_M300">[fig_M300]</a>{reference-type=”ref” reference=”fig_M300”}).<br>The MAV platforms are equipped with RTK GPS modules for accurate self-localization, an H20 camera for visual detection, a Manifold 2G onboard computer for onboard flight control, and a Zigbee module for wireless communication.<br>Some key specifications of the MAV platforms are listed in Table <a href="#table_M300">[table_M300]</a>{reference-type=”ref” reference=”table_M300”}.<br>The structure of the hardware perception and communication system is illustrated in Fig. <a href="#fig_outdoor_hardware">[fig_outdoor_hardware]</a>{reference-type=”ref” reference=”fig_outdoor_hardware”}.<br>The target MAV is also equipped with an RTK GPS module, whose measurements are used as the ground truth to calculate the noises of the visual measurements. The noises are shown in the right subfigure of Fig. <a href="#fig_outdoor_1">[fig_outdoor_1]</a>{reference-type=”ref” reference=”fig_outdoor_1”}.</p><p>The experiment consists of two stages: data acquisition and offline data processing.<br>In the data acquisition stage, the target MAV is commanded to fly with a constant velocity, and the observer MAV is automatically controlled to follow the target MAV to maintain a constant distance from the target.<br>More specifically, the procedure of the flight experiment is as follows. Initially, the observer MAV is placed about 20 meters behind the target MAV on the ground. Then, the two MAVs take off and fly to the same specified height automatically upon a takeoff command sent from the ground control station.<br>After they have reached the desired height, all deployed algorithms are activated.<br>Then, the target MAV moves with a constant velocity of $v_T=[1/\sqrt{2}, 1/\sqrt{2}, 0]^\mathrm{T}$. The observer MAV approaches the target by the controller in <a href="#eq_tracking_control">[eq_tracking_control]</a>{reference-type=”eqref” reference=”eq_tracking_control”}. It takes the observer MAV about eight seconds to reach the desired relative distance.<br>Then, the two MAVs fly with the same velocity and remain relatively stationary for another 20 seconds.<br>Finally, the ground station sends a stop command and the two MAVs return and land automatically.</p><p>During the flight, the gimbal camera of the observer MAV is automatically controlled so that the target MAV is maintained in the field of view.<br>It is noted that the control of the gimbal camera and the observer MAV is not based on the visual detection results. Instead, the control is based on the measurements provided by the RKT GPS and inter-MAV wireless communication. In this way, we can analyze the image and flight data offline and compare the performance of the two approaches of bearing-angle and bearing-only.<br>The acquired images and flight data are saved on the onboard computer during the flight. A dataset of 5,341 images was collected (Fig. <a href="#fig_M300_dataset">[fig_M300_dataset]</a>{reference-type=”ref” reference=”fig_M300_dataset”}) and used to train a tiny-YOLO v4 network.<br>The detection precision of the trained network reaches mAP=99.8%.</p><p>The experimental results are shown in Fig. <a href="#fig_outdoor_1">[fig_outdoor_1]</a>{reference-type=”ref” reference=”fig_outdoor_1”}.<br>As can be seen, the bearing-angle approach performs well. By contrast, the bearing-only approach only works well before the observer MAV reached the desired position relative to the target MAV. That is because the bearing varies significantly during this process due to the fluctuation of the observer’s motion caused by the flight control. However, the bearing-only approach diverges quickly thereafter when the bearing stops varying significantly.</p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>Motivated by the limitation of the existing bearing-only approach, this paper proposed and analyzed a novel bearing-angle approach for vision-based target motion estimation. We showed that the observability by the bearing-angle approach is significantly enhanced compared to the bearing-only one.<br>As a result, the requirement of the observer’s extra motion for observability enhancement can be significantly relaxed.<br>As we showed in various experiments, the bearing-angle approach can successfully estimate the target’s motion in many scenarios where the bearing-only approach fails.<br>The enhanced observability of the bearing-angle approach comes with no additional cost since almost all vision detection algorithms can generate bounding boxes.<br>One assumption adopted in the bearing-angle approach is that the target’s physical size is invariant to different viewing angles. Although this assumption is approximately valid in many tasks as demonstrated in this paper, it is meaningful to study how to relax or remove this assumption in the future.</p><h1 id="Declaration-of-conflicting-interests"><a href="#Declaration-of-conflicting-interests" class="headerlink" title="Declaration of conflicting interests"></a>Declaration of conflicting interests</h1><p>The author(s) declared no potential conflicts of interest with respect to the research, authorship, and/or publication of this article.</p><h1 id="Funding"><a href="#Funding" class="headerlink" title="Funding"></a>Funding</h1><p>The author(s) disclosed receipt of the following financial support for the research, authorship, and/or publication of this artical: This work was supported by the Hangzhou Key Technology Research and Development Program (Grant 20212013B09), and the Research Center for Industries of the Future at Westlake University (Grant WU2022C027).</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视觉导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日程表：2024年02月</title>
      <link href="/posts/20240222a.html"/>
      <url>/posts/20240222a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#2024年2月">文章导航总览</a></h1><h1 id="2024年2月23日"><a href="#2024年2月23日" class="headerlink" title="2024年2月23日"></a>2024年2月23日</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>运动1小时</p>            </div><ul><li>[x] 羽毛球</li></ul><div class='checkbox red'><input type="checkbox" />            <p>写一篇阅读论文的博客</p>            </div><details class="folding-tag" blue><summary> 日程表 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>17点46分</p></div></div><div class='timeline-item-content'><ol><li>吃晚饭</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>18点10分</p></div></div><div class='timeline-item-content'><ol><li>阅读论文</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>18点40分-20点40分</p></div></div><div class='timeline-item-content'><ol><li>羽毛球</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>21点56分</p></div></div><div class='timeline-item-content'><ol><li>阅读论文</li></ol></div></div></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 日程表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日程表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建导航</title>
      <link href="/posts/20240221c.html"/>
      <url>/posts/20240221c.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#博客搭建">文章导航总览</a></h1><h1 id="博客文章语法笔记导航"><a href="#博客文章语法笔记导航" class="headerlink" title="博客文章语法笔记导航"></a>博客文章语法笔记导航</h1><h2 id="Markdown基础语法"><a href="#Markdown基础语法" class="headerlink" title="Markdown基础语法"></a><a href="./20231201a.html">Markdown基础语法</a></h2><h2 id="Markdown内置Html语法"><a href="#Markdown内置Html语法" class="headerlink" title="Markdown内置Html语法"></a><a href="./20231206b.html">Markdown内置Html语法</a></h2><h2 id="Butterfly外挂标签"><a href="#Butterfly外挂标签" class="headerlink" title="Butterfly外挂标签"></a><a href="./20231205b.html">Butterfly外挂标签</a></h2><h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a>博客搭建教程导航</h1><h2 id="基础教程"><a href="#基础教程" class="headerlink" title="基础教程"></a><a href="./20231205d.html">基础教程</a></h2><h2 id="bug汇总"><a href="#bug汇总" class="headerlink" title="bug汇总"></a><a href="./20231204c.html">bug汇总</a></h2><h2 id="未来可期"><a href="#未来可期" class="headerlink" title="未来可期"></a><a href="./20231205c.html">未来可期</a></h2><h2 id="音频教程"><a href="#音频教程" class="headerlink" title="音频教程"></a><a href="./20231207a.html">音频教程</a></h2><h2 id="文章个性化功能"><a href="#文章个性化功能" class="headerlink" title="文章个性化功能"></a><a href="./20240201a.html">文章个性化功能</a></h2><h2 id="首页美化"><a href="#首页美化" class="headerlink" title="首页美化"></a><a href="./20240202a.html">首页美化</a></h2>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程导航</title>
      <link href="/posts/20240221b.html"/>
      <url>/posts/20240221b.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#编程">文章导航总览</a></h1><h1 id="计算机原理"><a href="#计算机原理" class="headerlink" title="计算机原理"></a><a href="./20240325a.html">计算机原理</a></h1><h2 id="原码反码和补码"><a href="#原码反码和补码" class="headerlink" title="原码反码和补码"></a><a href="./20240315a.html">原码反码和补码</a></h2><h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a><a href="./20240320a.html">汇编</a></h2><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a><a href="./20240324a.html">基础篇</a></h2><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a><a href="./20240328a.html">进阶篇</a></h2><h1 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h1><h2 id="打印"><a href="#打印" class="headerlink" title="打印"></a><a href="./20240116a.html">打印</a></h2><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a><a href="./20240315b.html">变量</a></h2><h1 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h1><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a><a href="./20231206a.html">Git</a></h2><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a><a href="./20231211a.html">前端</a></h2><h2 id="网页PPT"><a href="#网页PPT" class="headerlink" title="网页PPT"></a><a href="./20240513b.html">网页PPT</a></h2><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a><a href="./20240225a.html">正则表达式</a></h2><h3 id="个人笔记"><a href="#个人笔记" class="headerlink" title="个人笔记"></a><a href="./20240330a.html">个人笔记</a></h3><h1 id="Latex"><a href="#Latex" class="headerlink" title="Latex"></a><a href="./20240225c.html">Latex</a></h1><h1 id="Pandoc"><a href="#Pandoc" class="headerlink" title="Pandoc"></a><a href="./20240304b.html">Pandoc</a></h1><h1 id="黑马程序员"><a href="#黑马程序员" class="headerlink" title="黑马程序员"></a>黑马程序员</h1><h2 id="C-基础入门"><a href="#C-基础入门" class="headerlink" title="C++基础入门"></a><a href="./20240312a.html">C++基础入门</a></h2><h1 id="力扣"><a href="#力扣" class="headerlink" title="力扣"></a>力扣</h1><h2 id="C-2"><a href="#C-2" class="headerlink" title="C++"></a>C++</h2><h3 id="算法训练"><a href="#算法训练" class="headerlink" title="算法训练"></a><a href="./20240316a.html">算法训练</a></h3><h1 id="Ros"><a href="#Ros" class="headerlink" title="Ros"></a><a href="./20240318g.html">Ros</a></h1><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><a href="./20240530a.html">MySQL</a></h1><h1 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h1><h2 id="Doxygen"><a href="#Doxygen" class="headerlink" title="Doxygen"></a><a href="./20240403a.html">Doxygen</a></h2><h1 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h1><h2 id="C语言代码测试"><a href="#C语言代码测试" class="headerlink" title="C语言代码测试"></a>C语言代码测试</h2><p><a href="https://tool.lu/coderunner/embed/eFz.html">点击测试代码</a></p><h2 id="C-代码测试"><a href="#C-代码测试" class="headerlink" title="C++代码测试"></a>C++代码测试</h2><p><a href="https://tool.lu/coderunner/embed/eCP.html">点击测试代码</a></p>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章导航</title>
      <link href="/posts/20240221a.html"/>
      <url>/posts/20240221a.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学"><a href="#数学" class="headerlink" title="数学"></a><a href="./20240210a.html">数学</a></h1><h1 id="语言"><a href="#语言" class="headerlink" title="语言"></a><a href="./20231208a.html">语言</a></h1><h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a><a href="./20240224b.html">阅读</a></h1><h1 id="文学"><a href="#文学" class="headerlink" title="文学"></a><a href="./20240224d.html">文学</a></h1><h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a><a href="./20240221b.html">编程</a></h1><h1 id="电子电路"><a href="#电子电路" class="headerlink" title="电子电路"></a><a href="./20240412a.html">电子电路</a></h1><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a><a href="./20240221c.html">博客搭建</a></h1><h1 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a><a href="./20240317b.html">系统软件</a></h1><h1 id="日程表"><a href="#日程表" class="headerlink" title="日程表"></a>日程表</h1><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a><a href="./20240531a.html">设计思路</a></h2><h2 id="2024年2月"><a href="#2024年2月" class="headerlink" title="2024年2月"></a><a href="./20240222a.html">2024年2月</a></h2><h2 id="2024年4月"><a href="#2024年4月" class="headerlink" title="2024年4月"></a><a href="./20240411a.html">2024年4月</a></h2><h2 id="2024年5月"><a href="#2024年5月" class="headerlink" title="2024年5月"></a><a href="./20240502a.html">2024年5月</a></h2><h1 id="运动健康"><a href="#运动健康" class="headerlink" title="运动健康"></a>运动健康</h1><h2 id="日常基础篇"><a href="#日常基础篇" class="headerlink" title="日常基础篇"></a><a href="./20240131a.html">日常基础篇</a></h2><h2 id="状态调整篇"><a href="#状态调整篇" class="headerlink" title="状态调整篇"></a><a href="./20240203a.html">状态调整篇</a></h2><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h1 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h1><h2 id="ipa"><a href="#ipa" class="headerlink" title="ipa"></a><a href="./20240115a.html">ipa</a></h2><h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><h2 id="Adunas的游戏账号昵称和ID"><a href="#Adunas的游戏账号昵称和ID" class="headerlink" title="Adunas的游戏账号昵称和ID"></a><a href="./20231201b.html">Adunas的游戏账号昵称和ID</a></h2>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学导航</title>
      <link href="/posts/20240210a.html"/>
      <url>/posts/20240210a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#数学">文章导航总览</a></h1><h1 id="线性空间"><a href="#线性空间" class="headerlink" title="线性空间"></a><a href="./20240605a.html">线性空间</a></h1><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><h2 id="迹"><a href="#迹" class="headerlink" title="迹"></a><a href="./20231210a.html">迹</a></h2><h2 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a><a href="./20231204a.html">协方差</a></h2><h1 id="滤波"><a href="#滤波" class="headerlink" title="滤波"></a>滤波</h1><h2 id="卡尔曼滤波"><a href="#卡尔曼滤波" class="headerlink" title="卡尔曼滤波"></a><a href="./20231205a.html">卡尔曼滤波</a></h2><h1 id="绘图工具"><a href="#绘图工具" class="headerlink" title="绘图工具"></a>绘图工具</h1><h2 id="动态数学软件"><a href="#动态数学软件" class="headerlink" title="动态数学软件"></a><a href="./20231210b.html">动态数学软件</a></h2><p>&emsp;&emsp;动态数学软件GroGebra。</p>]]></content>
      
      
      <categories>
          
          <category> 文章导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运动健康（二）：状态调整篇</title>
      <link href="/posts/20240203a.html"/>
      <url>/posts/20240203a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#状态调整篇">文章导航总览</a></h1><blockquote><h1 id="运动健康的导航"><a href="#运动健康的导航" class="headerlink" title="运动健康的导航"></a>运动健康的导航</h1><ol><li><a href="./20240131a.html">运动健康（一）：日常基础篇</a></li><li><a href="./20240203a.html">运动健康（二）：状态调整篇</a>⇦当前位置🪂</li></ol></blockquote><div class="note info flat"></div><h1 id="独立自主"><a href="#独立自主" class="headerlink" title="独立自主"></a>独立自主</h1><p>&emsp;&emsp;学会自尊自爱，任何时候不能把自己的未来托付给别人。你最亲的父母不可以，最好的朋友不可以，最爱的女朋友不可以，最知心的老师也不可以。你唯一要值得托付的人只有自己，也只能是自己。自己是自己的父母，照顾自己衣食起居。自己是自己的孩子，纯真、理想、真心都在此。</p><h1 id="压力别人"><a href="#压力别人" class="headerlink" title="压力别人"></a>压力别人</h1><p>&emsp;&emsp;偶尔还是有这个坏习惯。压力别人典型是自卑的表现，想通过打压别人来体现自身的价值，这只是嫉妒，是很不健康的，特别是在两性关系上。生活已经很累啦，她要的是情绪价值，而不是又多一个压力的老师。多站在别人的角度去想想、去关心、去爱吧。学会<a href="#赞美">赞美</a>别人。</p><h1 id="沉默与激情"><a href="#沉默与激情" class="headerlink" title="沉默与激情"></a>沉默与激情</h1><p>&emsp;&emsp;不求无功，但求无过。这句话说得真差！我来改改：不求无功，不怕犯错！这段时间免去了很多无用的社交、无用的焦虑。沉心静气地搞学习和研究，并不觉得孤独，反而觉得无比踏实、舒心。合适的社交，我会打破沉默，我要从激情地学习转变成热情地交流，真诚面对每一个人，和不同的人、合适的人交流才能让自己能够不让自己的思想和视野变得狭隘和偏颇。热情会被打击，但是那简直是挠痒痒，因为我们根本<a href="#不生气不伤心">不生气不伤心</a>呀。</p><h1 id="不生气不伤心"><a href="#不生气不伤心" class="headerlink" title="不生气不伤心"></a>不生气不伤心</h1><p>&emsp;&emsp;你要始终明白自己在乎什么，什么是对你重要的。不论男女，最重要的是做好自己该做的事情。对于我，男生来说，最重要的是事业，事业做好了，她有可能跟你，事业做不好，她一定不会跟你。所以你想想，真的是别人让你心情不好了嘛？答案是否定的，而是自己把自己心情变得不好了。</p><p>&emsp;&emsp;我跟老师聊过。我跟同学聊过。我跟家人聊过。我跟朋友聊过。我也跟自己聊过。如果我能跟她再聊一聊就更好了。开心地、努力地、自信地做手头上的事情，就是最棒了。有好身体、好工作、好心态就已经完胜啦。</p><h1 id="赞美"><a href="#赞美" class="headerlink" title="赞美"></a>赞美</h1><p>&emsp;&emsp;以前我很讨厌阿谀奉承，然而这种讨厌被无形地扩大了。扩大到不会由衷地欣赏赞美别人。而且阿谀奉承我现在根本不讨厌了，但我不会去阿谀奉承。如果我需要帮助，我会真诚地表达、寻求帮助。我的赞美也不会是阿谀奉承，而是要通过观察后，真的能发现这件事带给我们的美，以及那背后的故事~</p><p>&emsp;&emsp;为什么我不讨厌阿谀奉承。因为我知道人的生活是艰难的，他只不过在艰难地在夹缝中生存着，他阿谀奉承几句，并不是出于恶意，而是可以保住自己的工作，保住自己的饭碗，有个更好的机会而已。说几句话能让大家都开心，这有什么不对吗？这样在工作中大家都很舒服，这是极其正确的。</p><p>&emsp;&emsp;推荐用更好的 “阿谀奉承” 的方法，那便是赞美。学会认可别人的工作，学会欣赏，学会赞美。比如她画了一个妆，男生可能看了并没有什么和之前感觉不一样，但是你不知道的是，她为了你化妆准备了多久。她平时一个人的时候可是懒得打扮呀，这时候，我觉得这个女生是真的很美，很可爱呀。我会仔细地看看她地眼睛、腮红，虽然我对化妆一窍不通，但是好像真的有些不一样，我一定会开心得看着她说：你今天真美！</p><p>所以你在和别人交流的时候，总有些东西你不太懂，但是对方极力讲的时候，一定是对他非常重要的东西吧！他一定为这件事付出了很多实实在在的努力，这个时候我会大方地赞美，因为我确实能被感染到，这个时候，我不认为是什么阿谀奉承。</p><h1 id="必备技巧"><a href="#必备技巧" class="headerlink" title="必备技巧"></a>必备技巧</h1><ol><li>多喝白开水。适量多喝白开水，帮助代谢。</li><li>经常短时间充分运动。可以多次地适量的运动，提高自己的精神。</li><li>不要沉浸再上一个事情中，不要自作多情，而是多思考，多准备。<ol><li>上一个事情再好，也是以前的事情了，不可能完全复现了。第二次体验可能也没那么好了。可以思考一下成功的原因，总结一下成功的经验。</li><li>上一个事情再不好，也是以前的事情了，并不代表你就不好了，你就不行了。失败的原因不是单一的，可能是场景的不合适，同样的东西换一个环境，就能成功，所以失败并不能证明孱弱。可以反思一下失败的原因，下次遇到类似的问题就有经验了。</li></ol></li></ol><blockquote><h1 id="运动健康的导航-1"><a href="#运动健康的导航-1" class="headerlink" title="运动健康的导航"></a>运动健康的导航</h1><ol><li><a href="./20240131a.html">运动健康（一）：日常基础篇</a></li><li><a href="./20240203a.html">运动健康（二）：状态调整篇</a>⇦当前位置🪂</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运动健康 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 健康 </tag>
            
            <tag> 心态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：首页美化</title>
      <link href="/posts/20240202a.html"/>
      <url>/posts/20240202a.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a><a href="./20240221c.html#首页美化">博客搭建教程导航</a></h1><h1 id="格言"><a href="#格言" class="headerlink" title="格言"></a>格言</h1><p>&emsp;&emsp;在[页脚配置文件]./themes/butterfly/layout/includes/footer.pug 中，修改如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.t-t-l</span><br><span class="line">          p.ft-t.t-l-t 格言🧬</span><br><span class="line">          .bg-ad</span><br><span class="line">            div</span><br><span class="line">              | 再看看那个光点，它就在这里，这是家园，这是我们 —— 你所爱的每一个人，你认识的一个人，你听说过的每一个人，曾经有过的每一个人，都在它上面度过他们的一生✨</span><br><span class="line">            .btn-xz-box</span><br><span class="line">              a.btn-xz(href=&#x27;https://stellarium.org/&#x27;) 点击开启星辰之旅</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：文章个性化功能</title>
      <link href="/posts/20240201a.html"/>
      <url>/posts/20240201a.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a><a href="./20240221c.html#文章个性化功能">博客搭建教程导航</a></h1><h1 id="文章页Html标签"><a href="#文章页Html标签" class="headerlink" title="文章页Html标签"></a>文章页Html标签</h1><p>&emsp;&emsp;有时候我们想在博客文章里添加一些 hexo 不具有的特性时，就可以在 markdown 文件中添加 Html 标签。</p><p>&emsp;&emsp;html、CSS 和 js 可以分开写，也分三个文件写，html始终放在 markdown文件里。分开写的话，CSS 和 js 文件要放在主题的源文件路径 /themes/butterfly/source/ 下的的 css 或者 js 文件夹下。在 Markdown 里的语法为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/grid.css&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="code">&lt;div class=&quot;container1&quot;&gt;  </span></span><br><span class="line"><span class="code">    &lt;iframe class=&quot;container-iframe&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;  </span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/grid.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="Bilibili视频适配"><a href="#Bilibili视频适配" class="headerlink" title="Bilibili视频适配"></a>Bilibili视频适配</h1><div class="note purple no-icon flat"><p>参考文章：<a href="https://www.fomal.cc/posts/5389e93f.html">Bilibili视频适配</a></p></div><ol><li>在[BlogRoot]\source\css\custom.css自定义样式的文件中引入如下代码（这是我的，你可以自行微调）：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*哔哩哔哩视频适配*/</span></span><br><span class="line"><span class="selector-class">.aspect-ratio</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3%</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aspect-ratio</span> <span class="selector-tag">iframe</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">86%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>直接复制插入你的 md 文章就行，修改里面的 src 源为你的视频：</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;iframe src=&quot;https://player.bilibili.com/player.html?aid=474023258&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0 &quot; </span></span><br><span class="line"><span class="code">    scrolling=&quot;no&quot; </span></span><br><span class="line"><span class="code">    border=&quot;0&quot; </span></span><br><span class="line"><span class="code">    frameborder=&quot;no&quot; </span></span><br><span class="line"><span class="code">    framespacing=&quot;0&quot; </span></span><br><span class="line"><span class="code">    high_quality=1</span></span><br><span class="line"><span class="code">    danmaku=1 </span></span><br><span class="line"><span class="code">    allowfullscreen=&quot;true&quot;&gt; </span></span><br><span class="line"><span class="code">    &lt;/iframe&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>源视频的链接获取方法为：在b站官网分享视频时，选择 <code>嵌入代码</code>。若要关闭视频自动播放，在后面添加参数：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;autoplay=0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运动健康：日常基础篇</title>
      <link href="/posts/20240131a.html"/>
      <url>/posts/20240131a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#日常基础篇">文章导航总览</a></h1><blockquote><h1 id="运动健康的导航"><a href="#运动健康的导航" class="headerlink" title="运动健康的导航"></a>运动健康的导航</h1><ol><li><a href="./20240131a.html">运动健康（一）：日常基础篇</a>⇦当前位置🪂</li><li><a href="./20240203a.html">运动健康（二）：状态调整篇</a></li></ol></blockquote><h1 id="颈椎"><a href="#颈椎" class="headerlink" title="颈椎"></a>颈椎</h1><p>&emsp;&emsp;<a href="https://www.bilibili.com/video/BV1Yb411b7nd/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【有来医生 8招颈椎操全教程】</a></p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=45039749&bvid=BV1Yb411b7nd&cid=78880311&p=1&autoplay=0 "     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h1 id="腰椎"><a href="#腰椎" class="headerlink" title="腰椎"></a>腰椎</h1><p>&emsp;&emsp;<a href="https://www.bilibili.com/video/BV1fp4y1U7qG/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【每天5分钟 <em>告别骨盆前倾，小肚子突出，大屁股</em>】</a></p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=968747403&bvid=BV1fp4y1U7qG&cid=205794890&p=1&autoplay=0 "     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><blockquote><h1 id="运动健康的导航-1"><a href="#运动健康的导航-1" class="headerlink" title="运动健康的导航"></a>运动健康的导航</h1><ol><li><a href="./20240131a.html">运动健康（一）：日常基础篇</a>⇦当前位置🪂</li><li><a href="./20240203a.html">运动健康（二）：状态调整篇</a></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运动健康 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运动 </tag>
            
            <tag> 健身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 打印</title>
      <link href="/posts/20240116a.html"/>
      <url>/posts/20240116a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#打印">编程导航</a></h1><h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>&emsp;&emsp;调用库：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br></pre></td></tr></table></figure><p>调用函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;Hello!\n&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>&emsp;&emsp;命名空间，省略 std。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure><p>调用函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">&quot;Hello!\n&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="组合方式"><a href="#组合方式" class="headerlink" title="组合方式"></a>组合方式</h3><h4 id="组合方式1"><a href="#组合方式1" class="headerlink" title="组合方式1"></a>组合方式1</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;Hello World!\n&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="组合方式2"><a href="#组合方式2" class="headerlink" title="组合方式2"></a>组合方式2</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;Hello&quot;</span> &lt;&lt; <span class="string">&quot; World!\n&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="组合方式3"><a href="#组合方式3" class="headerlink" title="组合方式3"></a>组合方式3</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot; World!\n&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><h4 id="回车"><a href="#回车" class="headerlink" title="回车"></a>回车</h4><p>&emsp;&emsp;回车表示将光标移动到行的开头。这应该和键盘上的回车有所区分。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;\r&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>&emsp;&emsp;换行表示将光标移动到下一行的开头。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="变量调用"><a href="#变量调用" class="headerlink" title="变量调用"></a>变量调用</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;数字是：&quot;</span> &lt;&lt; num &lt;&lt; std::endl;</span><br><span class="line">std::string st = <span class="string">&quot;你好，世界！&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; st &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p>&emsp;&emsp;演示效果如下：</p><div class="tabs" id="print"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#print-1">示例源码1</button></li><li class="tab"><button type="button" data-href="#print-2">演示结果1</button></li><li class="tab"><button type="button" data-href="#print-3">示例源码2</button></li><li class="tab"><button type="button" data-href="#print-4">演示结果2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="print-1"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Print\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;|_&quot;</span> &lt;&lt; <span class="string">&quot;语法\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;基础\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;Hello!\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;组合方式\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;组合方式1\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;Hello World!\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;组合方式2\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | | |_&quot;</span> &lt;&lt; <span class="string">&quot;Hello&quot;</span> &lt;&lt; <span class="string">&quot; World!\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;组合方式3\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |   |_&quot;</span> &lt;&lt; <span class="string">&quot;Hello&quot;</span>; std::cout &lt;&lt; <span class="string">&quot; World!\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;特殊符号\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;回车\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |   |_&quot;</span> &lt;&lt; <span class="string">&quot;\r&quot;</span>; std::cout &lt;&lt; <span class="string">&quot;*\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;换行\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |   |_&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>; std::cout &lt;&lt; <span class="string">&quot;*\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |   |_&quot;</span> &lt;&lt; <span class="string">&quot;或者\n&quot;</span>; </span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |   |_&quot;</span> &lt;&lt; std::endl; std::cout &lt;&lt; <span class="string">&quot;*\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| |_&quot;</span> &lt;&lt; <span class="string">&quot;变量调用\n&quot;</span>;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; <span class="string">&quot;数字是：&quot;</span> &lt;&lt; num &lt;&lt; std::endl;</span><br><span class="line">    std::string st = <span class="string">&quot;你好，世界！&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;| | |_&quot;</span> &lt;&lt; st &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="print-2"><p><img src="https://picture.adunas.top/Program/PrintCppVs2022A.png" alt=""></p><p>说明：换行和回车有明显区别。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="print-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 有三处可以省略 std::</span></span><br><span class="line">    string st = <span class="string">&quot;你好，世界！&quot;</span>;</span><br><span class="line">    cout &lt;&lt; st &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="print-4"><p><img src="https://picture.adunas.top/Program/PrintCppVs2022B.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> print </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipa</title>
      <link href="/posts/20240115a.html"/>
      <url>/posts/20240115a.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#ipa">文章导航总览</a></h1><div class="note blue no-icon flat"><p>这篇文章专宠丰宝宝要看 香色闺阁。就说咱给不给力吧？</p></div><h1 id="ipa"><a href="#ipa" class="headerlink" title="ipa"></a>ipa</h1><p>&emsp;&emsp;什么是 ipa？IPA 是 Apple 程序应用文件 iPhone Application 的缩写。众所周知，上架苹果商店需要交钱和审核的。有了这个我们就可以安装想要的软件了。但是本地上还需要签名才能安装未经苹果商店审查的应用。</p><h2 id="ipa-资源下载"><a href="#ipa-资源下载" class="headerlink" title="ipa 资源下载"></a>ipa 资源下载</h2><ol><li><a href="https://ipa.store/">iPA 商店</a>：免费用户每天下载三个。这里面资源稳定好用。</li></ol><h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><p>&emsp;&emsp;安装方法有很多，有花钱和不花钱的。花钱的要稳定方便一点，四十块钱左右。不花钱的需要找免签的；或者用爱死助手，每周更新签名，或者还有一些其他的方法。</p><h2 id="方法一：购买个人证书"><a href="#方法一：购买个人证书" class="headerlink" title="方法一：购买个人证书"></a>方法一：购买个人证书</h2><p>&emsp;&emsp;去淘宝搜索 “iOS签名”。我买的这一家<a href="https://item.taobao.com/item.htm?_u=f2mskbifc9f6&amp;id=701070432465">Crow开发者源头小店</a>，30元一年，根据操作安装一个软件，如 “全能签”。然后将 ipa 文件导入、签名、安装即可。这里省略具体过程了，商家会提供一些教程的。需要详细介绍可催更。</p><p>其他方法下次总结，可催更。</p>]]></content>
      
      
      <categories>
          
          <category> 系统软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> ipa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公式和算法</title>
      <link href="/posts/20231217b.html"/>
      <url>/posts/20231217b.html</url>
      
        <content type="html"><![CDATA[<h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><p>&emsp;&emsp;计算机世界数字是离散的，对应的的公式也是离散型的。我最大的缺点是记忆力，最大的优点是强思维。所以我必须走算法公式化这条路，这也是正常思维之路。从公式到算法，也就是理论到实际，从算法到公式也就是从实际中抽象数学模型。</p><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h1 id="单循环"><a href="#单循环" class="headerlink" title="单循环"></a>单循环</h1><details class="folding-tag" 参数（可选）><summary> 标题 </summary>              <div class='content'>              <div class="tabs" id="单循环"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#单循环-1">公式</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="单循环-1"><p>&emsp;&emsp;我们用的最多的不是次数，而是迭代。<code>迭代方程</code> 如下：</p><p><a id= "eq:迭代方程"></a></p><script type="math/tex; mode=display">    x_t = a \cdot x_{t-1} + b, (t = 0,1,2,…,100)</script><p>其中 $a$ 和 $b$ 为常系数；$t$ 为时间变量，$x<em>t$ 为状态变量。时间初值为 $t_0 = 0$，终止时间为 $t</em>{end} = 100$。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 公式 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript教程</title>
      <link href="/posts/20231217a.html"/>
      <url>/posts/20231217a.html</url>
      
        <content type="html"><![CDATA[<h1 id="语法教程"><a href="#语法教程" class="headerlink" title="语法教程"></a>语法教程</h1><div class="note info no-icon flat"><p>语法我们可以去看<a href="https://www.runoob.com/js/js-tutorial.html">菜鸟教程</a>。</p></div><p>&emsp;&emsp;使用好的教程永远是对的，但是转化为自己的东西是难的。排版、美术欣赏风格、易受思维是有巨大差别的。所以我们要站在巨人的肩膀上打造自己的教程。用什么学什么，用什么拓展什么。而且保证我学过、用过后，下次还能有参考和记录，用起来更加方便，这是这篇博客的终极意义。</p><h1 id="VSCode调试"><a href="#VSCode调试" class="headerlink" title="VSCode调试"></a>VSCode调试</h1><div class="note info no-icon flat"><p>VSCode调试我们可以去看<a href="https://www.bilibili.com/video/BV1rP4y1x7LM/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【【vscode】你只会用chrome调试js代码吗 ？vscode debug js】</a>。</p></div><h1 id="语法库"><a href="#语法库" class="headerlink" title="语法库"></a>语法库</h1><p>&emsp;&emsp;代码和单词一样难记且效率低；就算代码再怎么美，它的语言永远是生涩的、不易读不易懂的。我再次强调从以下入手，这是学习代码思路的伟大一步，真正变强的必经之路。1. 接口和模块化。一个项目由很多代码文件构成，一个文件中有多个函数构成。代码是必须进行函数化的，这样方便使用，并减少重复开发的工作量。但是函数也会带来严重的问题：我到底要不要花时间搞懂函数内容？我认为函数封装的一般是一组算法。算法这一块儿待会儿讲。我认为用一个函数的时候是不用弄懂里面的内容的，但是要懂，而且是完全懂它的功能、接口、适用范围以及广义上的原理。之所以说广义上的原理是因为要知道用了什么模型之类的，以此知道使用这个是否合适。2. 代码的功能和逻辑进行文字化。就像推导公式一样，文字说明和公式推导交替进行。整个代码的是逻辑的呈现，所以需要用文字表述。3. 层次结构图。层次结构图是为了梳理整体的架构和思路的，所以绝不能面面俱到，要准确而概括。4. 代码的语法、内容编辑直接改，没有任何问题，但是算法逻辑，不要在代码上直接修改，而是有据可依，依据而行。应该优先推导公式，公式通，则代码通，公式是指导算法的唯一标准，算法的唯一依据是公式。就算因为数值问题要改进算法时，也应该先去调整公式，再依据公式写算法。这样，算法才可靠、可查、可读。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端</title>
      <link href="/posts/20231211a.html"/>
      <url>/posts/20231211a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#前端">编程导航</a></h1><h1 id="文件一分三"><a href="#文件一分三" class="headerlink" title="文件一分三"></a>文件一分三</h1><p>&emsp;&emsp;前端三件套包括 html、css、js。可以都写在 html 文件里，也可以分开写。分开写便于阅读和修改。 Html 可以理解为物品、对象。CSS 定义了物品的属性：</p><p>我觉得这个教程写得稀烂啊。能看出来我想表达什么吗？感觉会很难。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">一统天下</button></li><li class="tab"><button type="button" data-href="#分栏-2">三分天下</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>CSS内容<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">&quot;container-iframe&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span>js内容<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>&emsp;&emsp;分开写也可以的。在头中引入 CSS 文件，标签为 <code>link</code>，在同一个项目里，就用相对路径非常方便；也可以引入外部的文件，用链接形式表示。在 body 中引入 js 文件，标签为 <code>script</code>。这符合人们的思维，先确定物品的属性，然后再赋予它动作。</p><p>&emsp;&emsp;特别的，用链接的形式引入 js 文件后，要定义新的变量 var 和 new 时，代码要放在这个 script 标签后面。很好理解，你要集成一个父对象，那得有才行。而其他的 js 文件放 body 最后没有问题是因为，有对象再赋予它运动，不会出错。这完全是两码事情。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;grid.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">&quot;container-iframe&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;grid.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>&emsp;&emsp;前端三件套更改文本代码，不借助任何其他生成工具可以直接打开显示网页，方便修改、移植和存储。如何变修改，边显示调试效果呢？</p><p>【3小时前端入门教程（HTML+CSS+JS）】 <a href="https://www.bilibili.com/video/BV1BT4y1W7Aw/?p=3&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">https://www.bilibili.com/video/BV1BT4y1W7Aw/?p=3&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810</a></p><p>安装：HTML CSS Support 写 css 的快捷神器。<br>安装：Live Server 是实时预览的快捷神器。保存代码后，浏览器将刷新。<br>安装：Auto Rename Tag 是 Html 编写时标签修改的神器，修改标签名后，对应的都会修改。 </p><h1 id="容器的一些问题"><a href="#容器的一些问题" class="headerlink" title="容器的一些问题"></a>容器的一些问题</h1><h2 id="容器没撑起来"><a href="#容器没撑起来" class="headerlink" title="容器没撑起来"></a>容器没撑起来</h2><p>&emsp;&emsp;之前在 <a href="./20231206b.html">Markdown语法（二）：Html外挂标签</a>中提到关键字 <code>iframe</code> 内联框架的使用，在弹性容器中，如果父容器开始时没有撑起来，即使设置 100% 依旧无法撑开。</p><h2 id="容器撑爆了"><a href="#容器撑爆了" class="headerlink" title="容器撑爆了"></a>容器撑爆了</h2><p>&emsp;&emsp;在弹性容器中，用 <code>flex</code> 。竖向排了两列子容器 A 和子容器 B。但是在子容器 B 中嵌套子容器：一个轮播图容器 <code>swiper</code>。结果就撑爆，设置这个嵌套子容器的宽度为 100% （默认），结果容器 A 和 B，直接变成上下的一列了；设置小于 50% 时，结果是在左右两列的第二列中再缩小 50%。所以这个时候要对容器 B 进行约束：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 防止嵌套子容器swiper冲破flex的嵌套子容器 */</span></span><br><span class="line"><span class="selector-class">.col</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能让它撑破。这里有趣的是在 Html 中，容器名为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col right&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>中间的空格变成点了。还有一个值得注意的是在这个容中还有一个同阶的控制其他特性的容器：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-right&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是控制第二个容器没有效果，因为要直接约束父容器 flex 下的子容器。</p><p>&emsp;&emsp;这次遇到的问题和博文中是一样的，可以参考：<a href="https://www.cnblogs.com/goloving/p/15201080.html">浅析flex布局被子元素内容撑破的问题 - Flex布局中一个不为人知的特性（flex-item项目的最小尺寸问题）</a>。</p><h1 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h1><ol><li>官网上都有可以用的图标，注意有的是免费的，有的有标记是要花钱的，如果没买直接用花钱的，那么就会无法正常显示。</li><li>使用方法很简单，在头文件引入对应的 CSS 文件，然就在需要的地方使用官网提供图标对应的标签即可。</li><li>如网站 <a href="https://fontawesome.com/">FontAwesome</a>。</li></ol><h1 id="index-html不能直接打开"><a href="#index-html不能直接打开" class="headerlink" title="index.html不能直接打开"></a>index.html不能直接打开</h1><p>&emsp;&emsp;index.html 有的能直接当文件打开，比如说你手搓的前端。但是利用 npm 工具构建的，如 vue，就不能当文件打开，需要启动本地服务器。原因有二，一个是 vue 生成的文件里代码写的路径是根路径，只有在服务器中是这样的，而在文件中有比如说 c 盘的路径。就算你依据这个<a href="https://www.jianshu.com/p/6c1d74eb6d78">Vue项目打包，如何双击index.html即可静态访问？</a>改了，也会有错误，即原因二：域安全错误，被限制不能用 file 打开。事实上，生产环境下不需要文件打开，服务打开即可。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GroGebra</title>
      <link href="/posts/20231210b.html"/>
      <url>/posts/20231210b.html</url>
      
        <content type="html"><![CDATA[<audio id="media" src="https://picture.adunas.top/Audio/Music/MyPaperPlaneLiYiRanB.mp4" autoplay controls></audio>  <div class="note blue no-icon flat"><p>参考：</p><ol><li><a href="https://www.geogebra.org/">GroGebra官网</a></li><li><a href="https://www.zywvvd.com/notes/tools/geogebra/geogebra-html-embed/geogebra-html-embed/">geogebra 图形嵌入网页，Hexo文章</a></li><li><a href="https://deepinout.com/html/html-questions/953_html_how_to_do_autowidth_with_html_iframe.html">HTML 如何在HTML中使用自适应宽度的IFrame</a></li><li><a href="https://www.python100.com/html/77700.html">iframe自适应</a></li></ol></div><h1 id="数学导航"><a href="#数学导航" class="headerlink" title="数学导航"></a><a href="./20240210a.html#动态数学软件">数学导航</a></h1><h1 id="GroGebra"><a href="#GroGebra" class="headerlink" title="GroGebra"></a>GroGebra</h1><p>&emsp;&emsp;在参考文章中有多种方法，但是只能在单独的网页使用，直接在 butterfly 主题上使用不成功，只有其中的 iframe 结构的标签能成功。我们可以在官网上复制嵌入式链接，粘贴到 markdown 里可以直接使用。相关语法可以前往<a href="./20231206b.html">Markdown语法（二）：Html外挂标签</a>查看。</p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>&emsp;&emsp;请移动红点： </p><style>  .container1 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 69%; /* width="924px" height="637px，高宽比为：0.6893939393939394 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }    .container-iframe {      position: absolute; /* 设置iframe的定位方式为绝对定位 */      top: 0; /* 将iframe定位到容器的顶部 */      left: 0; /* 将iframe定位到容器的左侧 */      width: 100%; /* 设置iframe的宽度为100% */      height: 100%; /* 设置iframe的高度为100% */      border: none; /* 可选：移除iframe的边框 */  }</style><div class="container1">      <iframe class="container-iframe" src="https://www.geogebra.org/material/iframe/id/XxzCsAG7/width/924/height/637/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/false/ctl/false" frameborder="0"></iframe>  </div><br><p>&emsp;&emsp;请移动黑点：</p><style>  .container2 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 50%; /* width="1000px" height="500px"，高宽比为：0.5 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }  </style><div class="container2">      <iframe class="container-iframe" src="https://www.geogebra.org/material/iframe/id/kmacrzw9/width/1000/height/500/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/true/ctl/false" frameborder="0"></iframe>  </div><br><p>&emsp;&emsp;请移动对应圆点：</p><style>  .container3 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 78%; /* width="1017px" height="792px"，高宽比为：0.7787610619469027 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }</style><div class="container3">      <iframe class="container-iframe" src="https://www.geogebra.org/material/iframe/id/czX4pmKQ/width/1017/height/792/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/true/rc/false/ld/false/sdz/true/ctl/false" frameborder="0"></iframe>  </div>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> GroGebra </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵的迹</title>
      <link href="/posts/20231210a.html"/>
      <url>/posts/20231210a.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学导航"><a href="#数学导航" class="headerlink" title="数学导航"></a><a href="./20240210a.html#迹">数学导航</a></h1><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>&emsp;&emsp;方阵 $A$ 的迹，是指 $A$ 的主对角线各元素的总和。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 矩阵 </tag>
            
            <tag> 迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单词</title>
      <link href="/posts/20231208a.html"/>
      <url>/posts/20231208a.html</url>
      
        <content type="html"><![CDATA[<div id="aplayerWord"></div><h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#单词">文章导航总览</a></h1><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><details class="folding-tag" orange><summary> aerial </summary>              <div class='content'>              <p>英/ˈeəriəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aerialEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈeriəl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aerialAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 天线<br><span class='p orange'>adj.</span> 空中的；空气中的；从飞机上的；地表以上的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aerialAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> aforementioned </summary>              <div class='content'>              <p>英/əˈfɔːmenʃənd/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aforementionedEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/əˈfɔːrmenʃənd/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aforementionedAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 上述的;前面提到的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/aforementionedAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> algorithm </summary>              <div class='content'>              <p>英/ˈælɡərɪðəm/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/algorithmEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/algorithmAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 算法；计算程序<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/algorithmAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> antagonistic </summary>              <div class='content'>              <p>英/ænˌtæɡəˈnɪstɪk/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/antagonisticEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/antagonisticAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 对抗的;敌对的;敌意的;对立情绪的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/antagonisticAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> approach </summary>              <div class='content'>              <p>英/əˈprəʊtʃ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/approachEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/əˈproʊtʃ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/approachAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 方法；(待人接物或思考问题的)方式；(距离和时间上的)接近；要求；建议；进场；接洽；通路；相似（或近似）的事物<br><span class='p orange'>v.</span> (在数额、水平或质量上)接近；要求；建议；(在距离或时间上)靠近；接洽；着手处理<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/approachAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details> <details class="folding-tag" purple><summary> audio </summary>              <div class='content'>              <p>英/ˈɔːdiəʊ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/audioEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈɔːdioʊ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/audioAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>音频<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/audioAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><details class="folding-tag" orange><summary> bearing </summary>              <div class='content'>              <p>英/ˈbeərɪŋ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/bearingEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈberɪŋ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/bearingAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 关系；影响；轴承；(用罗盘测定的)方位；举止；姿态；（机器的）承座<br><span class='p orange'>v.</span> 承受；忍受；承担责任；不适于某事(或做某事)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/bearingAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> blend </summary>              <div class='content'>              <p>英美/blend/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/blendA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>v.</span> (和某物)混合；融合；(使)调和；掺和；调制<br><span class='p orange'>n.</span> 混合物；融合；(不同类型东西的)混合品；(不同事物的)和谐结合<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/blendAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> box </summary>              <div class='content'>              <p>英/bɒks/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/boxEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/bɑːks/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/boxAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 盒；箱；方框；电视；一盒，一箱(东西)；(剧院中的)包厢；匣；黄杨；小亭；黄杨木；(法庭中的)专席；运动场上以线标出的特定区域；（运动员的）下体护身<br><span class='p orange'>v.</span> (拳击运动)击打(某人)；把(某物)装箱(或盒、匣)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/boxAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><details class="folding-tag" orange><summary> constrain </summary>              <div class='content'>              <p>英/kənˈvenʃənl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/constrainEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/constrainAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>vt.</span> 约束;限制;限定;强制;强迫;迫使<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/constrainAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> consecutive </summary>              <div class='content'>              <p>英/kənˈsekjətɪv/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consecutiveEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consecutiveAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 连续的;连续不断的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consecutiveAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> consistent </summary>              <div class='content'>              <p>英/kənˈsɪstənt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consistentEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consistentAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 一致的;与…一致的;符合的;持续的;相符的;连续的;始终如一的;不矛盾的;相互连贯的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/consistentAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> conventional </summary>              <div class='content'>              <p>英/kənˈvenʃənl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/conventionalEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/conventionalAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 常规的;传统的;习惯的;墨守成规的;依照惯例的;非核的;普通平凡的;遵循习俗的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/conventionalAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> coordinate </summary>              <div class='content'>              <p>英/kəʊˈɔːdɪneɪt , kəʊˈɔːdɪnət/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/coordinateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/koʊˈɔːrdɪneɪt , koʊˈɔːrdɪnət/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/coordinateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 坐标；(颜色协调的)配套服装，套装<br><span class='p orange'>v.</span> 使协调；(衣服、家具等)搭配，协调；使相配合；使(身体各部分)动作协调；协同动作<br><span class='p orange'>adj.</span> 坐标的；配合的；同等的；对等的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/coordinateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> criterion </summary>              <div class='content'>              <p>英/kraɪˈtɪəriən/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/criterionEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/kraɪˈtɪriən/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/criterionAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 标准;(评判或作决定的)准则;原则<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/criterionAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> curve </summary>              <div class='content'>              <p>英/kɜːv/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/curveEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/kɜːrv/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/curveAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 曲线;弯曲;曲面;骗人的把戏, 欺骗<br><span class='p orange'>v.</span> 使弯曲，使成曲线;投(曲线球)<br><span class='p orange'>adj.</span> 弯曲的，曲线形的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/curveAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><details class="folding-tag" blue><summary> deduce </summary>              <div class='content'>              <p>英/dɪˈdjuːs/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deduceEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/dɪˈduːs/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deduceAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>推断；演绎；推论<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deduceAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> derive </summary>              <div class='content'>              <p>英/dɪˈraɪv/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deriveEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deriveAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>v.</span> 得到;获得;(使)产生;取得;(使)起源<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/deriveAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> divergence </summary>              <div class='content'>              <p>英/daɪˈvɜːdʒəns/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/divergenceEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/daɪˈvɜːrdʒəns/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/divergenceAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 发散;(意见、态度等的)分歧，差异<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/divergenceAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> dynamic </summary>              <div class='content'>              <p>英/daɪˈnæmɪk/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/dynamicEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/dynamicAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 动态;动力学;动力;力学;力度;(人或事物)相互作用的方式<br><span class='p orange'>adj.</span> 动态的;动力的;力的;充满活力的;发展变化的;精力充沛的;个性强的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/dynamicAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h2 id="专有名词"><a href="#专有名词" class="headerlink" title="专有名词"></a>专有名词</h2><details class="folding-tag" blue><summary> Doxygen </summary>              <div class='content'>              <p>英</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/DoxygenEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/DoxygenAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> （软件）编程辅助工具<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/DoxygenAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><details class="folding-tag" blue><summary> entity </summary>              <div class='content'>              <p>英/ˈentəti/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/entityEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/entityAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 实体;独立存在物<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/entityAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> estimation </summary>              <div class='content'>              <p>英/ˌestɪˈmeɪʃn/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/estimationEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/estimationAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> (对水平、数量等的)估计；评价；判断；看法<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/estimationAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> expert </summary>              <div class='content'>              <p>英/ˈekspɜːt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/expertEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈekspɜːrt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/expertAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 专家;行家;能手<br><span class='p pink'>adj.</span> 专家的;经验(或知识)丰富的;熟练的;内行的<br><span class='p pink'>vi.</span> 担任专家;成为高手（或能手）;由专家审读（书籍等）做专家工作;以专家身份研究（或检查）;像专家那样研究（或检查）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/expertAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><details class="folding-tag" orange><summary> facilitate </summary>              <div class='content'>              <p>英/fəˈsɪlɪteɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/facilitateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/facilitateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>vt.</span> 促进;使便利;促使<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/facilitateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> formulate </summary>              <div class='content'>              <p>英/ˈfɔːmjuleɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/formulateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈfɔːrmjuleɪt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/formulateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>vt.</span> 制定；制订；规划；准备；构想；确切表达；认真阐述<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/formulateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><details class="folding-tag" orange><summary> geometric </summary>              <div class='content'>              <p>英/ˌdʒiːəˈmetrɪk/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/geometricEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/geometricAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 几何(学)的；(似)几何图形的<br><span class='p orange'>n.</span> 有几何图形的东西<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/geometricAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><details class="folding-tag" orange><summary> helical </summary>              <div class='content'>              <p>英/ˈhelɪkl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/helicalEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/helicalAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 螺旋的;螺旋形的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/helicalAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> hyper </summary>              <div class='content'>              <p>英/ˈhaɪpə(r)/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/hyperEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈhaɪpər/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/hyperAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 精力过旺的;既兴奋又紧张的<br><span class='p orange'>n.</span> 宣传人员<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/hyperAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h2 id="缩略词"><a href="#缩略词" class="headerlink" title="缩略词"></a>缩略词</h2><details class="folding-tag" blue><summary> GUI </summary>              <div class='content'>              <p><span class='p pink'>abbr.</span> Graphical User Interface 图形用户界面</p>              </div>            </details><h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><details class="folding-tag" orange><summary> incorporate </summary>              <div class='content'>              <p>英/ɪnˈkɔːpəreɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/incorporateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ɪnˈkɔːrpəreɪt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/incorporateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>vt.</span> 使并入;包含;合并;注册成立;吸收;将…包括在内<br><span class='p orange'>adj.</span> 无形(体)的;具体化了的;法定组织的;精神上的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/incorporateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> intrinsic </summary>              <div class='content'>              <p>英/ɪnˈtrɪnzɪk/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/intrinsicEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/intrinsicAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 固有的;内在的;本身的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/intrinsicAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> invariant </summary>              <div class='content'>              <p>英/ɪnˈveəriənt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/invariantEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ɪnˈveriənt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/invariantAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 不变的;恒定的<br><span class='p orange'>n.</span> 不变量;不变式<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/invariantAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><details class="folding-tag" orange><summary> joint </summary>              <div class='content'>              <p>英/dʒɔɪnt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/jointEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/jointAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 联合的;共同的<br><span class='p orange'>n.</span> (尤指构成角的)接头;关节;接合处;接点;大麻烟卷;公共场所;一块烤肉<br><span class='p orange'>vt.</span> 把…切成带骨的大块肉<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/jointAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="K"><a href="#K" class="headerlink" title="K"></a>K</h1><h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><details class="folding-tag" orange><summary> lateral </summary>              <div class='content'>              <p>英/ˈlætərəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/lateralEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈlætərəl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/lateralAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 横向的；侧面的；向侧面移动的<br><span class='p orange'>n.</span> 边音(如lie一词中 /l/ 的发音)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/lateralAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> leaky </summary>              <div class='content'>              <p>英/ˈliːki/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/leakyEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/leakyAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 渗漏的;有漏洞的;有漏隙的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/leakyAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> likelihood </summary>              <div class='content'>              <p>英/ˈlaɪklihʊd/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/likelihoodEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/likelihoodAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>n.</span> 可能性;可能<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/likelihoodAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" orange><summary> linear </summary>              <div class='content'>              <p>英/ˈlɪniə(r)/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/linearEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈlɪniər/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/linearAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p orange'>adj.</span> 线性的；线的；直线的；长度的；线状的；通过单独的若干阶段来发展<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/linearAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="M"><a href="#M" class="headerlink" title="M"></a>M</h1><details class="folding-tag" blue><summary> matrix </summary>              <div class='content'>              <p>英/ˈmeɪtrɪks/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/matrixEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/matrixAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 矩阵;基体;杂基;(人或社会成长发展的)社会环境，政治局势;线路网;矩阵转接电路;道路网<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/matrixAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> mere </summary>              <div class='content'>              <p>英/mɪə(r)/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/mereEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/mɪr/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/mereAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 仅仅的;只不过;只凭…就足以<br><span class='p pink'>n.</span> 小湖;池塘<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/mereAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> merit </summary>              <div class='content'>              <p>英/ˈmerɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/meritEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/meritAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 优点;价值;功绩;长处;(学校或大学考试或作业的)良好;美德;值得赞扬(或奖励、钦佩)的特点<br><span class='p pink'>vt.</span> 应得;值得<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/meritAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> monocular </summary>              <div class='content'>              <p>英/mɒ’nɒkjʊlə/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/monocularEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/mə'nɒkjələ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/monocularAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 单眼用的；单目的；单筒（孔）的<br><span class='p pink'>n.</span> 单筒望远镜<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/monocularAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> motion </summary>              <div class='content'>              <p>英/ˈməʊʃn/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motionEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈmoʊʃn/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motionAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 运动；动议；移动；(为传递信息用手或头做的)动作；动；提议；通便<br><span class='p pink'>v.</span> (以头或手)做动作，示意<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motionAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> motivate </summary>              <div class='content'>              <p>英/ˈməʊtɪveɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motivateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈmoʊtɪveɪt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motivateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>vt.</span> 激励；激发；是…的原因；成为…的动机；说明…的原因；(就所说的话)给出理由；推动…甘愿苦干<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/motivateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h2 id="缩略词-1"><a href="#缩略词-1" class="headerlink" title="缩略词"></a>缩略词</h2><details class="folding-tag" blue><summary> MAV </summary>              <div class='content'>              <p><span class='p pink'>abbr.</span> micro aerial vehicle 微型飞行器</p>              </div>            </details><h1 id="N"><a href="#N" class="headerlink" title="N"></a>N</h1><details class="folding-tag" blue><summary> nevertheless </summary>              <div class='content'>              <p>英/ˌnevəðəˈles/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/neverthelessEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˌnevərðəˈles/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/neverthelessAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adv.</span> 然而;不过;尽管如此<br><span class='p pink'>conj.</span> 然而，不过<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/neverthelessAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> novelty </summary>              <div class='content'>              <p>英/ˈnɒvlti/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/noveltyEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈnɑːvlti/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/noveltyAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 新颖性;新奇;新颖;新鲜;新奇的事物(或人、环境);小玩意儿;廉价小饰物<br><span class='p pink'>adj.</span> 新奇的;风格独特的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/noveltyAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="O"><a href="#O" class="headerlink" title="O"></a>O</h1><details class="folding-tag" blue><summary> object </summary>              <div class='content'>              <p>英/ˈɒbdʒɪkt , əbˈdʒekt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/objectEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈɑːbdʒekt , əbˈdʒekt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/objectAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> (极欲得到、研究、注意等的)对象；目的；目标；物体；物品；宗旨；东西；宾语<br><span class='p pink'>v.</span> 反对；不同意；不赞成；提出…作为反对的理由；抗辩说<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/objectAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> onboard </summary>              <div class='content'>              <p>英/‘ɒn’bɔ:d/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/onboardEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/'ɒn'bɔrd/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/onboardAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 自主的；舰上的；弹上的；〔军〕机上的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/onboardAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> orientation </summary>              <div class='content'>              <p>英/ˌɔːriənˈteɪʃn/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orientationEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orientationAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 方向;定向;目标;(任职等前的)培训，训练;(个人的)基本信仰，态度，观点;迎新会<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orientationAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> orthogonal </summary>              <div class='content'>              <p>英/ɔ:’θɒgənl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orthogonalEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ɔr'θɒgənəl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orthogonalAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 正交的；（相互）垂直的；直角（交）的；矩形的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/orthogonalAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="P"><a href="#P" class="headerlink" title="P"></a>P</h1><details class="folding-tag" blue><summary> particle </summary>              <div class='content'>              <p>英/ˈpɑːtɪkl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/particleEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈpɑːrtɪkl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/particleAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 颗粒;粒子;微粒;小品词(与动词构成短语动词的副词或介词)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/particleAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> perspective </summary>              <div class='content'>              <p>英/pəˈspektɪv/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/perspectiveEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/pərˈspektɪv/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/perspectiveAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 观点;态度;景观;透视法;思考方法;客观判断力;权衡轻重的能力<br><span class='p pink'>adj.</span> (按照)透视画法的;透视的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/perspectiveAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> pixel </summary>              <div class='content'>              <p>英/ˈpɪksl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pixelEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pixelAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 像素(组成屏幕图像的最小独立元素)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pixelAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> pointer </summary>              <div class='content'>              <p>英/ˈpɔɪntə(r)/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pointerEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈpɔɪntər/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pointerAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>n.</span> (刻度盘的)指针；指针（光标）；提示；标志；建议；指示犬；迹象；动向；指示杆；兆头<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pointerAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> polynomial </summary>              <div class='content'>              <p>英/ˌpɒli’nəʊmiəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/polynomialEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˌpɑli'noʊmiəl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/polynomialAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 多项式的;多词学名的<br><span class='p pink'>n.</span> 多项式;多词学名<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/polynomialAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> propose </summary>              <div class='content'>              <p>英/prəˈpəʊz/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/proposeEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/prəˈpoʊz/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/proposeAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>v.</span> 建议；提议；提供（解释）；计划；打算；求婚；提名；希冀<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/proposeAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> pseudo </summary>              <div class='content'>              <p>英/ˈsjuːdəʊ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pseudoEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈsudoʊ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pseudoAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 伪；假的；冒充的<br><span class='p pink'>n.</span> 伪君子；假冒的人<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pseudoAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> pursue </summary>              <div class='content'>              <p>英/pəˈsjuː/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursueEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/pərˈsuː/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursueAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>v.</span> 追求；执行；致力于；追逐；追赶；贯彻；跟踪；继续探讨(或追究、从事)<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursueAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" blue><summary> pursuit </summary>              <div class='content'>              <p>英/pəˈsjuːt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursuitEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/pərˈsuːt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursuitAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 追求；事业；追捕；寻找；追赶；跟踪；爱好；消遣<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/pursuitAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h1><h1 id="R"><a href="#R" class="headerlink" title="R"></a>R</h1><details class="folding-tag" pink><summary> recursive </summary>              <div class='content'>              <p>英/rɪˈkɜːsɪv/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/recursiveEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/rɪˈkɜːrsɪv/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/recursiveAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>adj.</span> 递归的;循环的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/recursiveAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" pink><summary> repository </summary>              <div class='content'>              <p>英/rɪˈpɒzətri/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/repositoryEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/rɪˈpɑːzətɔːri/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/repositoryAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p pink'>n.</span> 仓库；存放处；贮藏室；智囊；知识宝典；学识渊博的人<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/repositoryAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> rotate </summary>              <div class='content'>              <p>英/rəʊˈteɪt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/rotateEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈroʊteɪt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/rotateAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>v.</span> (使)旋转，（使）转动;循环，交替;轮换，轮流，轮值<br><span class='p green'>adj.</span> 〈植〉辐状的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/rotateAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> route </summary>              <div class='content'>              <p>英/ruːt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/routeEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ruːt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/routeAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>n.</span> 路线；渠道<br><span class='p green'>vt.</span> 按某路线发送<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/routeAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="S"><a href="#S" class="headerlink" title="S"></a>S</h1><details class="folding-tag" purple><summary> scale </summary>              <div class='content'>              <p>英/skeɪl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scaleEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scaleAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 大小，规模;（实物与图表等之间的）比例，比率;(尤指与其他事物相比较时的)范围;衡量标准，尺度;标度，刻度;（心理学和教育学中的）量表;程度;标尺，刻度尺;（尤指牲畜的）重量，大小;等级，级别;天平，秤，磅秤;比例尺，缩尺;水垢;氧化皮;音阶;鳞;天平盘，秤盘;（价格、工资等的）等级表，级别表;天秤（星）座;牙垢;等级体系;进位制，计数法;〈摄〉影调范围;障眼物;（眼睛的）翳，阴翳，翳障;工资等级表规定的工资，合同规定的最低工资<br><span class='p blue'>v.</span> 调节;（按比例或缩尺）绘制;（按等级）安排;衡量，估量;攀登，爬越;（鳞片般地）剥落，脱落;去鳞;改变…的大小;除去……的氧化皮;刮除牙石;到达…顶点;（阶梯）逐步升高;用（薄石片等）打水漂;像鱼鳞般的刮去;剥去……的外壳;（用云梯）仰攻;称得重量为<br><span class='p blue'>adj.</span> 按一定比例制作的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scaleAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> scenario </summary>              <div class='content'>              <p>英/səˈnɑːriəʊ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scenarioEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/səˈnærioʊ/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scenarioAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 方案;设想;预测;脚本;(电影或戏剧的)剧情梗概<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scenarioAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> schedule </summary>              <div class='content'>              <p>英/ˈʃedjuːl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scheduleEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈskedʒuːl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scheduleAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 工作计划；日程安排；(价格、收费或条款等的)一览表，明细表，清单；(电视或广播)节目表<br><span class='p blue'>vt.</span> 安排；预定；列入，收进(正式目录、清单等中)；为…安排时间<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/scheduleAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> significant </summary>              <div class='content'>              <p>英/sɪɡˈnɪfɪkənt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/significantEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/significantAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>adj.</span> 重要的, 有重大意义的；显著的, 值得注意的；<统>显著的, 有效的；（词缀等）有意义的；不可忽略的, 值得注意的；相当数量的；别有含义的, 意味深长的；（语言上）区别性的<br><span class='p blue'>n.</span> <古>有意义的事物；标志, 象征<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/significantAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> simultaneous </summary>              <div class='content'>              <p>simul ta neous</p><p>英/ˌsɪmlˈteɪniəs/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/simultaneousEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˌsaɪmlˈteɪniəs/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/simultaneousAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>adj.</span> 同时的;同步的;同时发生(或进行)的<br><span class='p blue'>n.</span> 同时译员<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/simultaneousAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> spatial </summary>              <div class='content'>              <p>英/ˈspeɪʃl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/spatialEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/spatialAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>adj.</span> 空间的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/spatialAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> specify </summary>              <div class='content'>              <p>英/ˈspesɪfaɪ/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/specifyEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/specifyAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>vt.</span> 具体说明；明确规定；详述；详列<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/specifyAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> square </summary>              <div class='content'>              <p>英/skweə(r)/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/squareEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/skwer/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/squareAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> (通常为方形的)广场;平方;正方形;四方形;二次幂;正方形物;乏味的人<br><span class='p blue'>adj.</span> 平方;方的;正方形的;（和某物）相齐，平行;四方形的;宽阔的;（尤指在生意上）公平的，公正的，诚实的;成直角的;（和某事物）相一致的，相吻合的;乏味的;打平的;彼此无欠账的;(用于表示长度的单位后，表示某物四个边等长)…见方的<br><span class='p blue'>vt.</span> 使成正方形;贿赂;挺起胸膛;使成四方形;使成平方;挺直身子;（使）打成平局，打平;使成二次幂<br><span class='p blue'>adv.</span> 正对着地;径直地<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/squareAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> stack </summary>              <div class='content'>              <p>英/stæk/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stackEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stackAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 堆栈；(通常指码放整齐的)一叠，一摞，一堆；大量；许多；书库；一大堆；(尤指工厂的)大烟囱<br><span class='p blue'>v.</span> 使码放在…；使成叠(或成摞、成堆)地放在…；(使)放成整齐的一叠(或一摞、一堆)；(令飞机)分层盘旋等待着陆<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stackAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> stationary </summary>              <div class='content'>              <p>英/ˈsteɪʃənri/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stationaryEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈsteɪʃəneri/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stationaryAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>adj.</span> 固定的;静止的;不动的;稳定的;不变的;不可移动的<br><span class='p blue'>n.</span> 固定物;驻军;不动的人<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/stationaryAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> subject </summary>              <div class='content'>              <p>英/ˈsʌbdʒɪkt , səbˈdʒekt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/subjectEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/subjectAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 主题；问题；学科；课程；科目；话题；题目；题材；主语；国民，臣民；表现对象；绘画(或拍摄)题材；接受试验者<br><span class='p blue'>adj.</span> 服从于；取决于；视…而定；易遭受…的；受…支配；可能受…影响的；受异族统治的<br><span class='p blue'>vt.</span> 使臣服；使顺从；(尤指)压服<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/subjectAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> sufficient </summary>              <div class='content'>              <p>英/səˈfɪʃnt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/sufficientEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/sufficientAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 主题；问题；学科；课程；科目；话题；题目；题材；主语；国民，臣民；表现对象；绘画(或拍摄)题材；接受试验者<br><span class='p blue'>adj.</span> 足够的;(理由、条件)充足的, 充分的;充足的;<古>有充分能力的, 足以胜任的<br><span class='p blue'>n.</span> 足量;充足<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/sufficientAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" purple><summary> synopsis </summary>              <div class='content'>              <p>英/sɪˈnɒpsɪs/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/synopsisEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/sɪˈnɑːpsɪs/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/synopsisAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p blue'>n.</span> 概要;(著作、剧本等的)大纲;提要;梗概<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/synopsisAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="T"><a href="#T" class="headerlink" title="T"></a>T</h1><details class="folding-tag" green><summary> temporal </summary>              <div class='content'>              <p>英/ˈtempərəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/temporalEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/temporalAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>adj.</span> 时间的;颞的;世俗的;太阳穴的;现世的;世间的<br><span class='p green'>n.</span> 颞骨[肌,动脉等];太阳穴;世俗的权力;一时的事物<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/temporalAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> theoretical </summary>              <div class='content'>              <p>英/ˌθɪəˈretɪkl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/theoreticalEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˌθiːəˈretɪkl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/theoreticalAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>adj.</span> 理论的；理论上的；假设的；理论上存在的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/theoreticalAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> trajectory </summary>              <div class='content'>              <p>英/trəˈdʒektəri/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trajectoryEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trajectoryAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>n.</span> 轨迹;(射体在空中的)轨道;弹道<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trajectoryAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> triangle </summary>              <div class='content'>              <p>英/ˈtrɪviəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/triangleEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/triangleAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>n.</span> 三角形;三角关系;三角铁(打击乐器);三角形物体<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/triangleAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> trivial </summary>              <div class='content'>              <p>英/ˈtrɪviəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trivialEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trivialAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>adj.</span> 不重要的;微不足道的;琐碎的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/trivialAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" green><summary> tutorial </summary>              <div class='content'>              <p>英/tjuːˈtɔːriəl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/tutorialEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/tuːˈtɔːriəl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/tutorialAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p green'>adj.</span> 辅导的；导师的；私人教师的<br><span class='p green'>n.</span> 教程；(大学导师的)个别辅导时间，辅导课；辅导材料；使用说明书<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/tutorialAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="U"><a href="#U" class="headerlink" title="U"></a>U</h1><details class="folding-tag" gray><summary> utilize </summary>              <div class='content'>              <p>英/ˈjuːtəlaɪz/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/utilizeEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/utilizeAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>vt.</span> 利用;使用;应用;运用<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/utilizeAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="V"><a href="#V" class="headerlink" title="V"></a>V</h1><details class="folding-tag" gray><summary> variable </summary>              <div class='content'>              <p>英/ˈveəriəbl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variableEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈveriəbl/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variableAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>n.</span> 变量；可变因素；可变情况<br><span class='p gray'>adj.</span> 可变的；多变的；易变的；变化无常的；可更改的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variableAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" gray><summary> variant </summary>              <div class='content'>              <p>英/ˈveəriənt/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variantEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈveriənt/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variantAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>n.</span> 变种;变体;变形<br><span class='p gray'>adj.</span> 变异的;不同的，相异的，不一致的;多样的;易变的，不定的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/variantAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" gray><summary> vary </summary>              <div class='content'>              <p>英/ˈveəri/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/varyEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈveri/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/varyAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>v.</span> 变化;不同;(根据情况)改变;变更;有别;(大小、形状等)相异<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/varyAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" gray><summary> vehicle </summary>              <div class='content'>              <p>英/ˈviːəkl/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/vehicleEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美（发音同英）<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/vehicleAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>n.</span> 交通工具；(赖以表达思想、感情或达到目的的)手段，工具；车辆<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/vehicleAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><details class="folding-tag" gray><summary> velocity </summary>              <div class='content'>              <p>英/vəˈlɒsəti/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/velocityEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/vəˈlɑːsəti/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/velocityAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>n.</span> (沿某一方向的)速度;高速;快速<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/velocityAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="W"><a href="#W" class="headerlink" title="W"></a>W</h1><details class="folding-tag" gray><summary> wizard </summary>              <div class='content'>              <p>英/ˈwɪzəd/</p><div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/wizardEnglandA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>美/ˈwɪzərd/<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/wizardAmericaA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><span class='p gray'>n.</span> 向导(程序);奇才;(传说中的)男巫，术士;行家;能手<br><span class='p gray'>adj.</span> 出色的；巫师的；巫术的；魔术的<div class="audio"><audio controls preload><source src='https://picture.adunas.top/Audio/English/wizardAdunasA.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>              </div>            </details><h1 id="X"><a href="#X" class="headerlink" title="X"></a>X</h1><h1 id="Y"><a href="#Y" class="headerlink" title="Y"></a>Y</h1><h1 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h1>]]></content>
      
      
      <categories>
          
          <category> 外语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 单词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：音频教程</title>
      <link href="/posts/20231207a.html"/>
      <url>/posts/20231207a.html</url>
      
        <content type="html"><![CDATA[<div class="note blue no-icon flat"><p>参考：</p><ol><li><a href="https://guodongblog.com/posts/91597d56b19f/">Hexo-Butterfly音乐播放器的添加</a></li><li><a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer的GitHub地址</a></li><li><a href="https://aplayer.js.org/#/home">aplayer官方说明文档</a></li><li><a href="https://butterfly.js.org/posts/507c070f/">butterfly官方教程</a></li></ol></div><div class="note info flat"><p>无法在butterfly外挂标签中使用该插件，但是单独使用没有问题。</p></div><h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a><a href="./20240221c.html#音频教程">博客搭建教程导航</a></h1><h1 id="基础介绍"><a href="#基础介绍" class="headerlink" title="基础介绍"></a>基础介绍</h1><p>&emsp;&emsp;Hexo 博客的音频插件名称为 <code>hexo-tag-aplayer</code>，它支持常用的播放器为 <code>APlayer</code> 和 其他衍生的播放器 <code>MetingJS</code>。<code>APlayer</code> 一般用于播放自定义的音频。<code>MetingJS</code> 用于各大主流的音乐平台。要使用音频插件，在配置文件中要打开相关开关，或在文章开头进行使能。而在markdown中使用该工具是，有两套语言都可以写，一套是Html标签，一套是 <code>hexo-tag-aplayer</code> 自带的。具体方法如下：</p><h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>hexo-tag-aplayer：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>APlayer：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install aplayer --save</span><br></pre></td></tr></table></figure><h2 id="Hexo博客设置"><a href="#Hexo博客设置" class="headerlink" title="Hexo博客设置"></a>Hexo博客设置</h2><ol><li>修改_config.yml文件：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><ul><li>如果使用 <code>APlayer</code> 播放器，则 <code>asset_inject</code> 须设置为 <code>true</code> 。</li><li>如果只使用 <code>MetingJS</code> 播放器，则 <code>asset_inject</code> 可以设置为 <code>false</code> 。</li><li><code>asset_inject</code> 设置为 <code>true</code>，否会导致 <code>butterfly</code> 网页主页面渲染异常，如无法加载背景等问题。目前没有办法解决。此时会给相关文件自动加入和 aplayer相关的 css 和 js 依赖。但是也会在 js 文件中的头部引入多余的代码造成错误。此时想要在文章中使用 aplayer 需要通过其他途径，后面的内容会提到。</li></ul></div><ol><li>修改_config.butterfly.yml文件：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol><li>文章开头添加：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="APlayer"><a href="#APlayer" class="headerlink" title="APlayer"></a>APlayer</h1><h2 id="方式一：标签法"><a href="#方式一：标签法" class="headerlink" title="方式一：标签法"></a>方式一：标签法</h2><div class="tabs" id="aplayer"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#aplayer-1">插件语法</button></li><li class="tab"><button type="button" data-href="#aplayer-2">配置参数</button></li><li class="tab"><button type="button" data-href="#aplayer-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="aplayer-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture<span class="emphasis">_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="aplayer-2"><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>:  (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="aplayer-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下在 <span class="code">`butterfly`</span> 主题下无法渲染：</span><br><span class="line">&#123;% aplayer &quot;title&quot; &quot;author&quot; &quot;/audio/Lumia1020.mp3&quot; &quot;/assets/avatar.webp&quot; %&#125;</span><br><span class="line">演示文字，无意义。</span><br><span class="line">&#123;% aplayer &quot;title&quot; &quot;author&quot; &quot;/audio/Lumia1020.mp3&quot; &quot;/assets/avatar.webp&quot; %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><p>&emsp;&emsp;以下在 <code>butterfly</code> 主题下无法渲染：</p>        <div id="aplayer-qxlsAUjp" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-qxlsAUjp"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "title",              author: "author",              url: "/audio/Lumia1020.mp3",              pic: "/assets/avatar.webp",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>演示文字，无意义。<br>        <div id="aplayer-upLSZxQv" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-upLSZxQv"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "title",              author: "author",              url: "/audio/Lumia1020.mp3",              pic: "/assets/avatar.webp",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></p><p>只有当把 asset_inject 设置为 true 时可以把音频渲染成功，但是要把 public 里的 js 和 css 文件头部增加的错误代码删除，所以这不是一个好办法，那么采用下面的办法。</p><h2 id="方式二：Html"><a href="#方式二：Html" class="headerlink" title="方式二：Html"></a>方式二：Html</h2><p>&emsp;&emsp;此时已经默认会导入了 aplayer.min.css 和 aplayer.min.js 依赖。</p><p>&emsp;&emsp;参照 aplayer 官网的说明，我们需要添加一个自定义的 js 文件放在 source/js/ 里，我取名为 aplayerExample.js。然后再 _config.butterfly.yml 文件中添加 js 脚本：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/aplayerExample.js&quot;&gt;&lt;/script&gt;</span> <span class="comment"># aplayerAdunas</span></span><br></pre></td></tr></table></figure><p>然后在其中写入官网提供的js内容，并修改为自己的 mp3 文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">const</span> <span class="string">ap</span> <span class="string">=</span> <span class="string">new</span> <span class="string">APlayer(&#123;</span></span><br><span class="line">    <span class="attr">container:</span> <span class="string">document.getElementById(&#x27;aplayerExampleA&#x27;),</span></span><br><span class="line">    <span class="attr">audio:</span> [&#123;</span><br><span class="line">        <span class="attr">name:</span> <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="attr">artist:</span> <span class="string">&#x27;artist&#x27;</span>,</span><br><span class="line">        <span class="attr">url:</span> <span class="string">&#x27;url.mp3&#x27;</span>,</span><br><span class="line">        <span class="attr">cover:</span> <span class="string">&#x27;cover.jpg&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>然后在博客中插入 Html 元素，id 名保持一致即可：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aplayerExampleA&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>演示效果如下：</p><div id="aplayerExampleA"></div><div id="aplayerExampleB"></div><p>其中 aplayerExampleB 为列表。需要注意的是，只对第一个 id 有效，使用第一个 id 后，第二个 id 也可以正常使用了，直接使用第二个 id 会报错，原因未知。 </p><h2 id="全局吸底"><a href="#全局吸底" class="headerlink" title="全局吸底"></a>全局吸底</h2><h3 id="方式一：Html"><a href="#方式一：Html" class="headerlink" title="方式一：Html"></a>方式一：Html</h3><p>&emsp;&emsp;这里直接在博客中引入依赖，复制粘贴过去就能使用：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;player&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aplayer aplayer-withlist aplayer-fixed&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;3025663508&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;netease&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;playlist&quot;</span> <span class="attr">data-order</span>=<span class="string">&quot;random&quot;</span> <span class="attr">data-fixed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-listfolded</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-theme</span>=<span class="string">&quot;#2D8CF0&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js"></script><!-- <div id="player" class="aplayer aplayer-withlist aplayer-fixed" data-id="2130694576" data-server="netease" data-type="song" data-order="random" data-fixed="true" data-listfolded="true" data-theme="#2D8CF0"></div> --><!-- <div class="aplayer no-destroy" data-id="2130694576" data-server="netease" data-type="song" data-fixed="true" data-autoplay="true"> </div> --><h1 id="MetingJS"><a href="#MetingJS" class="headerlink" title="MetingJS"></a>MetingJS</h1><div class="tabs" id="列表模式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#列表模式-1">插件语法</button></li><li class="tab"><button type="button" data-href="#列表模式-2">配置参数</button></li><li class="tab"><button type="button" data-href="#列表模式-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="列表模式-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting id server type [fixed, mini, loop, order, volume, ……] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="列表模式-2"><div class="table-container"><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table></div><ol><li>在网易云音乐中创建自己的歌单，会产生一个 <code>&quot;id&quot;</code> 。例如:<ol><li><a href="https://music.163.com/#/playlist?id=2084546444">https://music.163.com/#/playlist?id=2084546444</a></li><li><a href="https://music.163.com/#/song?id=29009655">https://music.163.com/#/song?id=29009655</a></li></ol></li><li>VIP音乐只能听30s，无版权的音乐无法播放，会跳过。</li><li>自动播放时加入 <code>&quot;autoplay&quot;</code> 参数；不自动播放不加该参数，如果写 <code>&quot;autoplay = false&quot;</code> 或者 <code>&quot;autoplay:false&quot;</code> 都是错误的，会使网页渲染失败。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="列表模式-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;渲染效果中去除自动播放，以免影响网页阅读体验。</span><br><span class="line"></span><br><span class="line">迷你模式：</span><br><span class="line">&#123;% meting &quot;29009655&quot; &quot;netease&quot; &quot;song&quot; &quot;mini&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">或者：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aplayer no-destroy&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;29009655&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;netease&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;song&quot;</span> <span class="attr">data-mini</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-autoplay</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-lrcType</span>=<span class="string">&quot;-1&quot;</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">单曲播放：</span><br><span class="line">&#123;% meting &quot;29009655&quot; &quot;netease&quot; &quot;song&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">或者：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aplayer no-destroy&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;1441758494&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;netease&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;song&quot;</span>  <span class="attr">data-autoplay</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-lrcType</span>=<span class="string">&quot;-1&quot;</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">列表模式：</span><br><span class="line">&#123;% meting &quot;2084546444&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br><span class="line">演示文字，无意义。</span><br><span class="line">&#123;% meting &quot;2084546444&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot; %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="演示效果-1"><a href="#演示效果-1" class="headerlink" title="演示效果"></a>演示效果</h2><p>&emsp;&emsp;渲染效果中去除自动播放，以免影响网页阅读体验。</p><p>迷你模式：<br>    <div id="aplayer-zbOnkgYo" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="29009655" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86" data-mini="true"    ></div><br>或者：</p><p><div class="aplayer no-destroy" data-id="29009655" data-server="netease" data-type="song" data-mini="true" data-lrcType="-1"> </div><br>单曲播放：<br>    <div id="aplayer-QUFHizld" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="29009655" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><br>或者：</p><p><div class="aplayer no-destroy" data-id="29009655" data-server="netease" data-type="song" data-lrcType="-1"> </div><br>列表模式：<br>    <div id="aplayer-AbXODYYf" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2084546444" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><br>演示文字，无意义。<br>    <div id="aplayer-TzzHiITK" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2084546444" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aplayer </tag>
            
            <tag> 音频 </tag>
            
            <tag> 音乐 </tag>
            
            <tag> 播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基本命令</title>
      <link href="/posts/20231206a.html"/>
      <url>/posts/20231206a.html</url>
      
        <content type="html"><![CDATA[<h1 id="编程导航"><a href="#编程导航" class="headerlink" title="编程导航"></a><a href="./20240221b.html#git">编程导航</a></h1><h1 id="git提示"><a href="#git提示" class="headerlink" title="git提示"></a>git提示</h1><ol><li><p>每个设备都应该建立独立的分支，每天修改后，都应该上传到远端仓库。然后在网页端仓库进行合并，检查哪些修改是合适的。</p></li><li><p>github仓库里不能再建仓库，但是可以调用并嵌套。</p></li></ol><h1 id="构建仓库"><a href="#构建仓库" class="headerlink" title="构建仓库"></a>构建仓库</h1><p>&emsp;&emsp;目标是新建一个仓库，如下操作。</p><p>&emsp;&emsp;进入<a href="https://github.com">github</a>官网，进入自己的账号，点击 <code>New repository</code>，给仓库起个名字，其他默认，点击 <code>Create repository</code>。</p><p>打开 <code>Git Bash</code> 端口，输入下列命令：</p><ol><li>创建README.md文件并写入内容。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# ProgramLearn&quot;</span> &gt;&gt; README.md </span><br></pre></td></tr></table></figure><ol><li>初始化git仓库，产生.git文件夹：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><ol><li>添加写好的README.md文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.md </span><br></pre></td></tr></table></figure><ol><li>新仓库，第一次提交代码：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span> </span><br></pre></td></tr></table></figure><ol><li>本地创建主分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M main</span><br></pre></td></tr></table></figure><ol><li>与远程仓库链接：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/Adonothing/ProgramLearn.git</span><br></pre></td></tr></table></figure><ol><li>将本地仓库的main支推送到远程仓库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h1 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h1><p>&emsp;&emsp;目标是从<a href="https://github.com">github</a>官网上克隆仓库到本地。任意打开一个文件夹，打开 <code>Git Bash</code> 端口，输入下列命令：</p><ol><li>初始化：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ol><li>查看状态：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><ol><li>克隆代码到当前目录下：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> GitHub网址</span><br></pre></td></tr></table></figure><h2 id="递归克隆"><a href="#递归克隆" class="headerlink" title="递归克隆"></a>递归克隆</h2><p>&emsp;&emsp;有些git仓库内嵌其他git仓库，普通克隆无法下载，所以有以下操作。</p><h3 id="新建的仓库"><a href="#新建的仓库" class="headerlink" title="新建的仓库"></a>新建的仓库</h3><p>&emsp;&emsp;克隆时加入选项，克隆当前仓库以及所有子仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive Github网址</span><br></pre></td></tr></table></figure><h3 id="旧仓库"><a href="#旧仓库" class="headerlink" title="旧仓库"></a>旧仓库</h3><p>&emsp;&emsp;对于包含了子仓库的仓库，如果我们进行了普通克隆，里面的子仓库就不会下载下来，而是一个空的文件夹。这个时候用下面的命令克隆子仓库的文件：</p><ol><li>更新子模块下载地址：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule <span class="built_in">sync</span></span><br></pre></td></tr></table></figure><ol><li>更新子模块或下载子模块：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><ol><li>从网上更新代码到本地：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin 分支名</span><br></pre></td></tr></table></figure><blockquote><p>克隆很容易失败、出现问题，特别是子模块的克隆，更容易出现问题。应该先设置网络代理，就不会有问题。一旦出现问题无法解决的时候，就全部删除仓库，配置好网络后重新克隆。</p></blockquote><h1 id="提交仓库"><a href="#提交仓库" class="headerlink" title="提交仓库"></a>提交仓库</h1><p>&emsp;&emsp;提交仓库的方法如下：</p><ol><li>添加修改的内容</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br></pre></td></tr></table></figure><ol><li>查看git状态</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><ol><li>对修改的内容备注</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m ‘添加子模块’ </span><br></pre></td></tr></table></figure><p>注意这里不能省略commit，提交后应该在网页上看看提交结果。git commit不能省略 -m 。</p><ol><li>提交修改的内容</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>&emsp;&emsp;上面讲的都是主分支。现在我有需求，电脑上和手机上都会对代码进行修改，我希望创建两个分支，一个分支名字叫R7000，一个名字叫iPhone。然后在GitHub仓库中合并提交。这要怎么做呢？可以这样，以下是基本命令：</p><ol><li>查看本地仓库对应的远程仓库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>结果显示远程仓库名和地址，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">origin  https://github.com/Adonothing/ProgramLearn.git (fetch)</span><br><span class="line">origin  https://github.com/Adonothing/ProgramLearn.git (push)</span><br></pre></td></tr></table></figure><ol><li>列出本地分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>结果显示如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 12600K</span><br><span class="line">  main </span><br></pre></td></tr></table></figure><p><code>*</code> 表示目前所处分支。</p><ol><li>列出所有分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><p>结果显示如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* main</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/main</span><br><span class="line">  remotes/origin/main</span><br></pre></td></tr></table></figure><ol><li>下载分支。当第一下载仓库时，可以选择对应的分支名称：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b 分支名 仓库地址</span><br></pre></td></tr></table></figure><h2 id="本地分支"><a href="#本地分支" class="headerlink" title="本地分支"></a>本地分支</h2><p>&emsp;&emsp;介绍本地分支的创建、切换和提交。</p><ol><li>创建本地分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch R7000</span><br></pre></td></tr></table></figure><p>查看分支结果显示如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R7000</span><br><span class="line">* main</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/main</span><br><span class="line">  remotes/origin/main</span><br></pre></td></tr></table></figure><ol><li>切换分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 分支名</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git switch 分支名</span><br></pre></td></tr></table></figure><ol><li>直接创建并切换分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git switch -c 分支名</span><br></pre></td></tr></table></figure><ol><li>推送所有分支。虽然创建了新的分支，但是还没有将本地分支推送到远端仓库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --all</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">To https://github.com/Adonothing/ProgramLearn.git</span><br><span class="line"> * [new branch]      R7000 -&gt; R7000</span><br></pre></td></tr></table></figure><p>或者推送单个分支，方法同 <code>git push</code>。</p><h2 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h2><ol><li>浏览器创建分支</li></ol><p>&emsp;&emsp;在浏览器中操作。</p><ol><li>如果在网页端更创建了新的分支，需要拉取到本地，才能正确显示，命令同 <code>git pull</code>。或者，踪远程分支到本地：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin 远程分支名xxx:本地分支名xxx</span><br></pre></td></tr></table></figure><ol><li>本地记得切换分支，命令同 <code>git switch</code>。或者直接拉取远程分支并切换到该分支上：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地分支名xxx origin/远程分支名xxx</span><br></pre></td></tr></table></figure><p>其中，要求本 <code>地分支名xxx</code> 与 <code>远程分支名xxx</code> 相同。</p><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><ol><li>删除远端分支。可以在浏览器里操作，也可以使用命令行：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin -d R7000</span><br></pre></td></tr></table></figure><p>然后同步至本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><ol><li>删除本地分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d R7000</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;删除后记得推送远端或者拉取本地，方法同 <code>git push</code>，是一样的。</p><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><h3 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h3><ol><li>合并分支到当前分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 分支名</span><br></pre></td></tr></table></figure><ol><li>查看分合并支操作日志：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>本地合并分支后，及时更新远端分支，方法同 <code>git push</code>。</p><h3 id="远端操作"><a href="#远端操作" class="headerlink" title="远端操作"></a>远端操作</h3><p>&emsp;&emsp;在网页上，当两个分支不一样时，会出现提示标志（前提是设定了分支保护），如下操作即可：</p><ol><li>点击<code>Compare&amp;pull request</code>。</li><li>选择双方分支，点击<code>Create pull request</code>。</li><li>处理请求，点击<code>Merge pull request</code>。</li><li>确认请求，点击<code>Confirm request</code>。</li></ol><p>处理的时候看看前后文件的对比，是不是你想要的，如果不要合并，可以关闭请求，并终止。</p><h1 id="添加子仓库"><a href="#添加子仓库" class="headerlink" title="添加子仓库"></a>添加子仓库</h1><p>&emsp;&emsp;如果我们想在自己仓库里调用其他子仓库。如何操作呢？</p><p>&emsp;&emsp;参考<a href="http://t.csdn.cn/7xSBA">git 添加子模块(submodule)</a>。</p><ol><li>添加子仓库。从源到本地路径。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/Akagi201/learning-cmake.git ./docs/learning-cmake </span><br></pre></td></tr></table></figure><p>这时候文件夹下会产生一个文件.gitmodules用于记录子仓库的源地址和本地路径。要不然就认为添加子仓库失败。</p><ol><li>添加修改的内容，同 <code>git add</code>。</li><li>对修改的内容备注，同 <code>git commit</code>。</li><li>提交修改的内容，同 <code>git push</code>。</li></ol><p>这样就成功了，在网页上就会找到子仓库的链接，能直接进入子仓库的源地址。有时会产生bug，在第一步子仓库虽然全部克隆下来了，但是命令端口不会自动退出、不会产生<code>.gitmodules</code>文件。这时需要我们手动创建该文件，并写入：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[submodule &quot;docs/learning-cmake&quot;]</span></span><br><span class="line"><span class="attr">path</span> = docs/learning-cmake</span><br><span class="line"><span class="attr">url</span> = https://github.com/Akagi201/learning-cmake.git</span><br></pre></td></tr></table></figure><p>再继续走第二步就可以了，但是一般会报错。解决方法是在本地：</p><ol><li>删除子模块的文件夹。</li><li>在.git/modules/路径下会产生同样名称的文件夹，也都删除。</li></ol><p>如果还是有错误，需要退回到第一步重新开始，但是会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;projectfolder&#x27;</span> already exists <span class="keyword">in</span> the index<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>这是由于本地git里的index文件已经记录更改，所以办法是删除掉记录，这样操作：</p><ol><li>显示索引：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files --stage projectfolder </span><br></pre></td></tr></table></figure><p>你将看到类似于：<code>160000 d00cf29f23627fc54eb992dde6a79112677cd86c 0   projectfolder</code> 的信息，删除掉即可。</p><ol><li>删除索引：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> --cached projectfolder</span><br></pre></td></tr></table></figure><p>好了，现在可以重新添加子模块了。</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>&emsp;&emsp;一般的克隆是不会下载图片的。需要递归克隆，命令同 <code>git submodule</code>。</p><h1 id="issues"><a href="#issues" class="headerlink" title="issues"></a>issues</h1><p>&emsp;&emsp;issues的中文含义是问题。issues是代码讨论问题的地方，非常重要，有任何bug都可以在这里询问或者找到答案。</p><h1 id="大文件"><a href="#大文件" class="headerlink" title="大文件"></a>大文件</h1><p>&emsp;&emsp;向仓库里添加了大文件，结果是无法存储大文件，报错内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">remote: error: Trace: b2adcbab0bce9ebf02ba45cb38ed13ae62fe226a26341ec1e7cb4db00774fb3a</span><br><span class="line">remote: error: See https://gh.io/lfs <span class="keyword">for</span> more information.</span><br><span class="line">remote: error: File C/docs/C++ 标准库参考 (STL).pdf is 109.78 MB; this exceeds GitHub<span class="string">&#x27;s file size limit of 100.00 MB</span></span><br><span class="line"><span class="string">remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.</span></span><br><span class="line"><span class="string">To https://github.com/Adonothing/ProgramLearn.git</span></span><br><span class="line"><span class="string"> ! [remote rejected] main -&gt; main (pre-receive hook declined)</span></span><br></pre></td></tr></table></figure><p>所以建议不要使用大文件。好像有些其他规则是支持大文件的，不做讨论。</p><p>&emsp;&emsp;可是我们在这里直接在文件系统中删除这个大的文件，然后再次提交，会发现这个问题并未得到解决，并带来了新的报错。因为在git中已经有了大文件添加的记录。</p><p>&emsp;&emsp;由于无法直接解决该问题。所以解决方法是：重新找地方克隆项目到本地，然后再重新向其中添加文件（不要添加大文件了），再上传。</p><h1 id="回退提交"><a href="#回退提交" class="headerlink" title="回退提交"></a>回退提交</h1><h2 id="网页操作"><a href="#网页操作" class="headerlink" title="网页操作"></a>网页操作</h2><p>&emsp;&emsp;如何在网页上回退上个提交版本？</p><h2 id="本地操作-1"><a href="#本地操作-1" class="headerlink" title="本地操作"></a>本地操作</h2><p>git 回滚</p><ol><li>查看日志：git log，每个版本有自己的哈希值，记为版本号。<ol><li>键入 q 退出日志。</li></ol></li><li>已提交,没有push<ol><li>git reset —soft 撤销commit</li><li>git reset —mixed 撤销commit和add两个动作</li></ol></li><li>已提交，并且push<ol><li>git reset —hard 版本号 撤销并舍弃版本号之后的提交记录。使用需要谨慎。</li><li>git revert 撤销。但是保留了提交记录。</li><li>要强制提交修改：git push -f</li></ol></li></ol><h1 id="公共或私有"><a href="#公共或私有" class="headerlink" title="公共或私有"></a>公共或私有</h1><ol><li>在设置里，通用最下面更改可见，即可更改公共或私有。</li><li>fork 是无法私有的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：基础教程</title>
      <link href="/posts/20231205d.html"/>
      <url>/posts/20231205d.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>参考教程：<a href="https://www.fomal.cc/categories/魔改教程/">fomal 魔改教程</a></p><p>项目源码：<a href="https://github.com/fomalhaut1998/hexo-theme-Fomalhaut">hexo-theme-Fomalhaut</a></p></div><h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a><a href="./20240221c.html#基础教程">博客搭建教程导航</a></h1><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="网络链接"><a href="#网络链接" class="headerlink" title="网络链接"></a>网络链接</h2><p>&emsp;&emsp;必须联网。即使不谈图床，有些基本的库文件都是需要网络加载的。例如要用到的部分前端三件套之一的 js 脚本，位置见文件<a href="./../../_config.butterfly.yml">_config.butterfly.yml</a>，关键词为 <code>inject</code> 和 <code>bottom</code>。</p><h2 id="勘误"><a href="#勘误" class="headerlink" title="勘误"></a>勘误</h2><p>&emsp;&emsp;随着时间的更迭，原作者 Fomal 的教程和源码出现了部分严重的错误，在搭建博客时就需要注意。 </p><h3 id="npm-镜像源"><a href="#npm-镜像源" class="headerlink" title="npm 镜像源"></a>npm 镜像源</h3><p>&emsp;&emsp;原文中的提到的淘宝镜像源已经被舍弃，更新了新的镜像源，具体内容如下。</p><details class="folding-tag" blue><summary> npm 镜像源 </summary>              <div class='content'>              <p>原错误命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>新正确命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果已经使用了错误镜像源，需要以下命令进行更改：</p><p>查看镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>清空缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><p>最后切换新源即可。</p>              </div>            </details><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>&emsp;&emsp;这真是一个很离谱的错误，错误现象为网站主题的美化设置、一些按钮、一图流背景都无法显示。</p><details class="folding-tag" blue><summary> jQuery 文件错误 </summary>              <div class='content'>              <p>&emsp;&emsp;错误来源于 js 脚本 jQuery 错误。jQuery 是一个 JavaScript 工具库，对 HTML 的元素和功能提供方便的支持。这就是原因所在。</p><p>本地文件<a href="./../../_config.butterfly.yml">_config.butterfly.yml</a>，关键词为 <code>inject</code>、<code>bottom</code> 和 <code>jQuery</code>。本地文件调用了该库，原代码如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.staticfile.org/jquery/3.6.3/jquery.min.js&quot;&gt;&lt;/script&gt;</span> <span class="comment"># jQuery</span></span><br></pre></td></tr></table></figure><p>浏览器报错内容为：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught SyntaxError: Unexpected end of <span class="built_in">input</span>(at jquery.<span class="built_in">min</span>.<span class="keyword">j</span><span class="variable">s:2</span>:<span class="number">85449</span>)  jquery.<span class="built_in">min</span>.<span class="keyword">j</span><span class="variable">s:2</span></span><br></pre></td></tr></table></figure><p>查看 jquery.min.js 文件，发现结尾处异常，没有函数闭合结束符号 <code>});</code>。由于这个脚本源自网络，所以原因大概是托管源代码的网站的源码文件被错误修改。解决办法为将 jQuery 版本更换为 <code>3.6.0</code>，博客功能立刻正常。而在崩溃了一段时间后（至少两周），使用 <code>3.6.3</code> 版本文件再次正常，说明问题已经修复。</p>              </div>            </details><h1 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h1><p>&emsp;&emsp;查看 hexo 和主题 butterfly 的版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">butterfly 4.3.1</span><br><span class="line">hexo: 6.3.0</span><br><span class="line">hexo-cli: 4.3.1</span><br><span class="line">os: win32 10.0.19045</span><br><span class="line">node: 20.10.0</span><br><span class="line">acorn: 8.10.0</span><br><span class="line">ada: 2.7.2</span><br><span class="line">ares: 1.20.1</span><br><span class="line"><span class="built_in">base64</span>: 0.5.0</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">cjs_module_lexer: 1.2.2</span><br><span class="line">cldr: 43.1</span><br><span class="line">icu: 73.2</span><br><span class="line">llhttp: 8.1.1</span><br><span class="line">modules: 115</span><br><span class="line">napi: 9</span><br><span class="line">nghttp2: 1.57.0</span><br><span class="line">nghttp3: 0.7.0</span><br><span class="line">ngtcp2: 0.8.1</span><br><span class="line">openssl: 3.0.12+quic</span><br><span class="line">simdutf: 3.2.18</span><br><span class="line">tz: 2023c</span><br><span class="line">undici: 5.26.4</span><br><span class="line">unicode: 15.0</span><br><span class="line">uv: 1.46.0</span><br><span class="line">uvwasi: 0.0.19</span><br><span class="line">v8: 11.3.244.8-node.25</span><br><span class="line">zlib: 1.2.13.1-motley</span><br></pre></td></tr></table></figure><h1 id="编译命令"><a href="#编译命令" class="headerlink" title="编译命令"></a>编译命令</h1><p>&emsp;&emsp;本文记录利用hexo操作博客的命令。</p><p>清理博客：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成博客：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>上传博客到服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>运行本地服务启动博客：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>综上所述：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo generate; hexo d; hexo s</span><br></pre></td></tr></table></figure><h1 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h1><p>&emsp;&emsp;启动本地服务器后，修改博客文章的内容并保存后，对应 localhost 网页内容会自动修改，在网页端刷新即可，不需要重新编译和启动。除此以外本地更改，网页端后没反应的情况，项目需要重新编译。</p><p>&emsp;&emsp;出现异常，可以在浏览器上键入 F12，进入源代码模式，查看报错。从上到下，依次解决报错，博客就会显示正常。</p><h1 id="设置部署网址"><a href="#设置部署网址" class="headerlink" title="设置部署网址"></a>设置部署网址</h1><p>&emsp;&emsp;在 hexo 配置文件 _config.yml 中有如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">https://github.com/Adonothing/adonothing.github.io.git</span> <span class="comment"># 这里写上你的Github地址</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>在此处进行修改即可。</p><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>&emsp;&emsp;在 <a href="../personal/about/index.md">../personal/about/index.md</a> 里修改。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> bug </tag>
            
            <tag> pandoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：未来可期</title>
      <link href="/posts/20231205c.html"/>
      <url>/posts/20231205c.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建教程导航"><a href="#博客搭建教程导航" class="headerlink" title="博客搭建教程导航"></a><a href="./20240221c.html#未来可期">博客搭建教程导航</a></h1><h1 id="时间自动更新"><a href="#时间自动更新" class="headerlink" title="时间自动更新"></a>时间自动更新</h1><p>&emsp;&emsp;每篇的博客的开头如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 博客搭建教程（三）：未来可期</span><br><span class="line">description: 🥝本文记录对网页搭建的构想，集思广益</span><br><span class="line">mathjax: true</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> VSCode</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 博客教程</span><br><span class="line">abbrlink: 20231205c</span><br><span class="line">date: 2023-12-05 20:35:52</span><br><span class="line"><span class="section">updated: 2023-12-05 20:35:52</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>其中标签 <code>date</code> 和 <code>updated</code> 能不能自动更新呀？新建文件的时候自动更新 <code>date</code> 标签，保存文件的时候更新 <code>updated</code> 标签！求大神！</p><h1 id="文字动效"><a href="#文字动效" class="headerlink" title="文字动效"></a>文字动效</h1><p>&emsp;&emsp;可以采用 <code>typed.js</code> 做文字动效。用 <code>aplayer.js</code> 做音频，是否可以结合两者做出字随声出。期待一下！</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡尔曼滤波</title>
      <link href="/posts/20231205a.html"/>
      <url>/posts/20231205a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>想厘清卡尔曼滤波，就必须要讲清一些最基本的 “文字游戏”。<code>观测值</code> 是测量得到的，物体实际属性为 <code>真实值</code> 或者叫 <code>实际值</code>。但是这个地方要注意的是，<code>观测值</code> 也是 “准确的”，我们把测量的误差单独拿出来一项作为 <code>噪音</code>。所以那些系数矩阵（物理理论关系）也是 “准确的”，所有的误差均归结于 <code>噪音</code>。如果说你认为模型不准确等等，那些因素就称为 <code>错误</code>；<code>错误</code> 往往会带来 <code>定值偏差</code>。一般情况下，不考虑 <code>错误</code>。所以，去除噪音的物理属性称为 <code>理想值</code>或者叫 <code>理论值</code>。因为我们经常谈到理想状态下，也就是没有噪音的理论值公式。而在导航领域是必须要合理考虑影响结果精度的一些关键 <code>噪音</code> 的。</p></div><h1 id="数学导航"><a href="#数学导航" class="headerlink" title="数学导航"></a><a href="./20240210a.html#卡尔曼滤波">数学导航</a></h1><h1 id="卡尔曼滤波"><a href="#卡尔曼滤波" class="headerlink" title="卡尔曼滤波"></a>卡尔曼滤波</h1><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><ol><li><a href="https://www.bilibili.com/video/BV1Rh41117MT/?p=3&amp;share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【从放弃到精通！卡尔曼滤波从理论到实践~】</a>：从该教程中提取公式并理解。这个讲得很好，但是公式不够严谨，还有小错误，而且完全跳过了重要的更新过程。</li><li><a href="https://www.bilibili.com/video/BV1iv4y1N7As/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【【不要再看那些过时的卡尔曼滤波老教程了】2022巨献，卡尔曼滤波-目标追踪从理论到实战最新版全套教程！建议收藏】 </a>：只看了p1而且讲得很不好，但是帮助理解更细那块有点点小用吧。</li><li><a href="https://zhuanlan.zhihu.com/p/433560568">一文看懂卡尔曼滤波（附全网最详细公式推导） - 付聪的文章 - 知乎</a>：公式推导挺全面的，但是流畅度还是不如我自己的这篇。</li></ol><h2 id="基本滤波知识"><a href="#基本滤波知识" class="headerlink" title="基本滤波知识"></a>基本滤波知识</h2><h3 id="状态空间表达式"><a href="#状态空间表达式" class="headerlink" title="状态空间表达式"></a>状态空间表达式</h3><h4 id="状态方程"><a href="#状态方程" class="headerlink" title="状态方程"></a>状态方程</h4><p>&emsp;&emsp;<code>状态方程</code> 如下：</p><p><a id= "eq:状态方程"></a></p><script type="math/tex; mode=display">    x_t = F \cdot x_{t-1} + B \cdot u_{t-1} + m_t</script><p>解释：当前时刻的状态 $x<em>t$ 等于上一时刻的状态 $x</em>{t-1}$ 乘以系数 $F$，加上输入值 $u_t$ 乘以系数 $B$，最后加上 <code>过程噪声</code> $m_t$。</p><p>&emsp;&emsp;$F$ 又称为 <code>状态转移矩阵</code>，因为 $F$ 的大小决定了状态变化的快慢。$B$ 又称为<code>控制矩阵</code>，因为 $B$ 的大小决定了输入对系统影响的程度。</p><p>&emsp;&emsp;如何理解<code>过程噪声</code> $m_t$？状态方程的含义是我们对系统的数学建模，构建了一个数学表达式，但是实际的系统往往是复杂的，在随时间变化的时候，会受到各种各样因素的干扰，可以认为是一个总干扰，这种干扰是随机的，符合正太分布（高斯分布）。</p><h4 id="观测方程"><a href="#观测方程" class="headerlink" title="观测方程"></a>观测方程</h4><p>&emsp;&emsp;<code>观测方程</code> 如下：</p><p><a id= "eq:观测方程"></a></p><script type="math/tex; mode=display">    z_t = H \cdot x_t + n_t</script><p>$z_t$ 是观测量，$x_t$ 是状态量，$H$ 是状态量的系数，又称 <code>观测矩阵</code> 因为我们假定观测量和状态量之间的关系是线性的，可以由这个线性矩阵 $H$ 表示。$n_t$ 是 <code>观测噪声</code>。</p><p>&emsp;&emsp;可以这样理解：测量值 $z_t$ 和状态量 $x_t$ 存在一种线性关系，但是测量总是有误差的，所以要加上观测噪声 $n_t$，观测噪声同样符合正太分布。</p><p>&emsp;&emsp;我们可以用一个方框图表示这个系统：</p><style>  .container1 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 31%; /* 16大格 * 5大格，高宽比为：0.3125 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }    .container-iframe {      position: absolute; /* 设置iframe的定位方式为绝对定位 */      top: 0; /* 将iframe定位到容器的顶部 */      left: 0; /* 将iframe定位到容器的左侧 */      width: 100%; /* 设置iframe的宽度为100% */      height: 100%; /* 设置iframe的高度为100% */      border: none; /* 可选：移除iframe的边框 */  }</style><div class="container1">      <iframe class="container-iframe" src="https://viewer.diagrams.net/?tags=%7B%7D&highlight=0000ff&edit=_blank&layers=1&nav=1&title=SystemBlockDiagramA#R7VpLc9owEP41PiZj4wf2MQGSTGeaZIaZNu0l49gKqAiLygJMfn0lLL9kORCICQzlgrReVvJ%2B%2B9IKzexNk1viz8bfcQiQ1tHDRDP7WqdjOI7BvjhllVI8w0oJIwJDwVQQhvANCKIuqHMYgrjCSDFGFM6qxABHEQhoheYTgpdVtleMqqvO%2FBGoEYaBj%2BrUnzCk45TqdroF%2FQ7A0Thb2XC89MnUz5iFiHjsh3iZktYvZw40s0cwpulomvQA4srL9JJq4Kbhab4xAiK61Q%2BeF3Yc2L8n0XSCkvHg9Uf4dCGkLHw0Fy8sNktXmQZAFF5xRbJZgPw4hoFmXo%2FpFDGCwYYEz6MQ8EV0NnvFERUoGg6b13cplgRhRfFiz7cATwElK8awLNRtC2MYlzSd0QhAPoWLKly%2BQH2Ui8tXeMSQ7aSjCws1hdZ0YZ%2BW6V26VSExnpMAiN%2BVFSyJsvSNoqhPRoDWRLFB6dUL0hrBD6DZUaDJ3M26eda611q3n85qCFcRXI4hBcOZH%2FCnS%2BbVVbi3BngBCAXJuxA3KS7DpGQCrsIELL0Z7YpqP6pHs0GPCdcjZU7TqEr2xrSqr5gSPAE9jDBhlAhHgCsRIiSRfARHEfcxpkfA6Ndcf5AFoivxYArDkC%2BjBGhHJ9weI9OUMNJz4y6h5ChQMttCqXvusctyJUxkh9g2ctnOBkEtxy13M5Ise874EJMBQiz5c0eYAQLZ0txb%2BiClPhakTYHsxQ8mo7UBPMwpghFoL8DV9KsIcNYhA5zXEOCuTytR2PoXJ4qsSj3fGCTXT7bhXdq7RaEaunVRLcchQ1UOc0%2BYax0H8cT%2BQirgOn%2FnvHxfo3YRr2G7YgyGM0vW2GXP2WjEv%2F%2FXD3kIdL1Lr%2FyxvraYMFS1816eDBJIn8QTPv7F6cyg01k%2FKbH1V9kkYu%2FyVDDy6a9MBp8UP1vPVh8FLPXFzZkhdbTNKftYopAnW9eOlVBe%2BeRnuO0qIWYX%2FqrENuMMcfOGbal0s6uHdzZIJX5ueFOda%2Faz8QZ71T%2FLXk%2FMDmVYzV0rcseWBBmtVeTf9P593PHCyd1QX%2F25n6CHB0PZF%2BIJa%2FpMzy1z2VKFYzr1orOtVKXE5tMz1anVnI7cL9rZyzYdoFv2svf7TGdYJTqGBIjxxb5mNSB0d9wH5ZphH7CjqtSjquFwVjHLlRHZ%2FZ7Bk7tJbd4zqKsDVduDO8LbuQYuVz6AHLQ9rgapqYaLzq%2BGc%2FUjq%2BFaOIrt0G7YqW3wXp4sH9eUfN2jCsrdTfceW4dk%2BRb5wIXkFldhJ32B4sptmQNeoKj9V1UYHncr5Uh8zrXzzLhvk6QuKreLvf2OTYu%2F5qTsxR%2BczME%2F" frameborder="0">    </iframe>  </div><h3 id="参数分析"><a href="#参数分析" class="headerlink" title="参数分析"></a>参数分析</h3><p>&emsp;&emsp;噪音服从均值为零的正态分布，可以记为公式 <code>噪音服从正态分布</code>：</p><p><a id= "eq:噪音服从正态分布"></a></p><script type="math/tex; mode=display">\begin{aligned}    m_t \in N(0,Q) \\     n_t \in N(0,R)\end{aligned}</script><p>他们的均值均为零，方差分别为 $Q$ 和 $R$，方差为常数，与时间无关。$m_t$ 和 $n_t$ 就是其中的一个取值，只是取得这个结果的概率服从正态分布，用公式 <code>噪音服从正态分布的表达式</code> 表示：</p><p><a id= "eq:噪音服从正态分布的表达式"></a></p><script type="math/tex; mode=display">\begin{aligned}    f (m_t)     = \frac {1}         {\sqrt{2 \cdot \pi \cdot Q}}        \cdot e^{             - \frac {m_t^2}            {2 \cdot Q}        } \\    f (n_t)     = \frac {1}         {\sqrt{2 \cdot \pi \cdot R}}        \cdot e^{             - \frac {n_t^2}            {2 \cdot R}        }\end{aligned}</script><h3 id="超参数"><a href="#超参数" class="headerlink" title="超参数"></a>超参数</h3><p>&emsp;&emsp;噪音的方差，具体是多少，我们是不知道的，是需要不断调节的参数，从而使系统达到稳定。和调节PID一样，用公式 <code>卡尔曼滤波和PID调参</code> 表示：</p><p><a id= "eq:卡尔曼滤波和PID调参"></a></p><script type="math/tex; mode=display">    Q,R \sim PID</script><h3 id="卡尔曼滤波的理解"><a href="#卡尔曼滤波的理解" class="headerlink" title="卡尔曼滤波的理解"></a>卡尔曼滤波的理解</h3><p>&emsp;&emsp;通过卡尔曼滤波也不会得到真实值，而是每个时刻状态的 <code>最优估计值</code> $\widehat{x}<em>t$，是修正值，也叫 <code>后验估计值</code>。总结来说是，上一时刻的 <code>最优估计值</code> $\widehat{x}</em>{t-1}$，根据物理理论再加上过程噪声（状态方程）得到的 <code>先验估计值</code> $\hat{x}_t^{-}$，然后利用有噪音的观测值（观测方程） $z_t$，进行加权得到最优估计值 $\widehat{x}_t$。这样从先验到后验，也就实现了 <code>预测到更新</code>，而最优估计值的不断变化，也就是 <code>迭代</code>。从先验估计的正态分布和观测值的正态分布的两个波峰到后验（最优）估计正态分布的一个波峰的变化，也就是实现了 <code>滤波</code>。前后对比方差减小了，也就是 <code>去除了部分噪音</code>。后验估计值居于先验估计值和观测值之间，更加接近真实值，所以这是一种 <code>加权滤波</code>。可以通过观察图解：<a href="#一阶简单演示">一阶简单演示</a>来理解上述表述。</p><h2 id="通俗公式理解"><a href="#通俗公式理解" class="headerlink" title="通俗公式理解"></a>通俗公式理解</h2><h3 id="预测模型"><a href="#预测模型" class="headerlink" title="预测模型"></a>预测模型</h3><p>&emsp;&emsp;考虑一个情景，一辆匀加速（加速度为 $a$）直线运动的小车行驶在公路上，我们研究小车的状态有位置 $p$ 和速度 $v$，根据物理规律构建状态方程，用公式 <code>匀加速直线运动1</code> 表示：</p><p><a id= "eq:匀加速直线运动1"></a></p><script type="math/tex; mode=display">\begin{aligned}    &p_t = p_{t-1} + v_{t-1}\cdot\Delta t + \frac {a}2\cdot\Delta t^2 \\    &v_t = v_{t-1} + a\cdot\Delta t\end{aligned}</script><p>其中 $t$ 表示当前时刻，$t - 1$ 表示上一时刻。这是高中物理学习的标准的位置和速度公式。写成矩阵形式，用公式 <code>匀加速直线运动2</code> 表示：</p><p><a id= "eq:匀加速直线运动2"></a></p><script type="math/tex; mode=display">    \begin{bmatrix}        p_t \\        v_t    \end{bmatrix}    = \begin{bmatrix}        1 & \Delta t \\        0 & 1    \end{bmatrix}    \cdot\begin{bmatrix}        p_{t-1} \\        v_{t-1}    \end{bmatrix}    + \begin{bmatrix}        \frac{\Delta t^2}2 \\        \Delta t    \end{bmatrix} \cdot a</script><p>写成矩阵的形式，用公式 <code>理想的状态方程</code> 表示：</p><p><a id= "eq:理想的状态方程"></a></p><script type="math/tex; mode=display">    \underline{x} = F \cdot \underline{x_{t-1}} + B \cdot u_{t-1}</script><p>其中下划线 $\underline{x}$ 表示没用噪音的理想值。上式加上噪音后，用公式 <code>过程噪音</code> 表示：</p><p><a id= "eq:过程噪音"></a></p><script type="math/tex; mode=display">    \begin{bmatrix}        1 & 0 \\        0 & 1    \end{bmatrix} \cdot    \begin{bmatrix}        r_t(p) \\        r_t(v)    \end{bmatrix}</script><p>满足<a href="#eq:状态方程">状态方程</a>。其中，$r_t(p)$ 是位置噪音，$r_t(v)$ 是速度噪音，均服从正太分布，噪音是随机的，与时间有关，每个时刻产生随机的噪音。</p><h3 id="预测方程"><a href="#预测方程" class="headerlink" title="预测方程"></a>预测方程</h3><h4 id="状态预测"><a href="#状态预测" class="headerlink" title="状态预测"></a>状态预测</h4><p>&emsp;&emsp;依据去除噪音的<a href="#eq:状态方程">状态方程</a>，就能直接写出先验估计的表达式，用公式 <code>先验估计</code> 表示：</p><p><a id= "eq:先验估计"></a></p><script type="math/tex; mode=display">    \hat{x}_{t}^{-} = F \cdot \hat{x}_{t-1} + B \cdot u_{t-1}</script><p>符号 $\hat{x}<em>{t}^{-}$ 和 $\hat{x}</em>{t-1}$ 的含义在前文<a href="#卡尔曼滤波直观图解">卡尔曼滤波直观图解</a>中已经提到，引入符号 $\hat{}$ 和$^{-}$ 是为了表示估计和先验。</p><h4 id="状态误差预测"><a href="#状态误差预测" class="headerlink" title="状态误差预测"></a>状态误差预测</h4><p>&emsp;&emsp;上式<a href="#eq:先验估计">先验估计</a>对比<a href="#eq:状态方程">状态方程</a>，可以求出 <code>先验误差</code> ${e}_{t}^{-}$，用公式 <code>先验误差</code> 表示：</p><p><a id= "eq:先验误差"></a></p><script type="math/tex; mode=display">    {e}_{t}^{-} = x_{t} - \hat{x}_{t}^{-} = F \cdot (x_{t-1} - \hat{x}_{t-1}) + m_t</script><p>先验误差表示真实值和预测值的差值。其中$x<em>{t} - \hat{x}</em>{t}$为 <code>后验误差</code> ${e}_t$，用公式 <code>后验误差</code> 表示：</p><p><a id= "eq:后验误差"></a></p><script type="math/tex; mode=display">    {e}_t = x_{t} - \hat{x}_{t}</script><p>后验误差表示真实值和估计值的差值。所以上式<a href="#eq:先验误差">先验误差</a>可以用公式 <code>匀加速直线运动2</code> 进一步表示为：</p><p><a id= "eq:先验误差和后验误差的关系"></a></p><script type="math/tex; mode=display">    {e}_{t}^{-} = F \cdot e_{t-1} + m_t</script><p>其中误差 $m_t$ 是个随机值，我们能利用的就是它服从正态分布，均值为零没有利用价值，方差为常数 $Q$ ，所以按道理来说两边求方差，但是考虑到这不可能不是一个一维的，而是多维的矩阵，我们要求每个元素的方差，所以这里求协方差，我们只用对角线的元素，因为协方差矩阵的对角线的元素是每个变量的方差，具体可以参考：<a href="./20231204a.html">协方差</a>。那么求先验误差的协方差矩阵，用公式 <code>先验误差的协方差矩阵1</code> 表示：</p><p><a id= "eq:先验误差的协方差矩阵1"></a></p><script type="math/tex; mode=display">\begin{aligned}    Cov({e}_{t}^{-},{e}_{t}^{-}) &= Cov({e}_{t}^{-}) \\    &= Cov(F \cdot e_{t-1} + m_t) \\    &= F \cdot Cov(e_{t-1}) \cdot F^{T} + Cov(m_t) \\\end{aligned}</script><p>记 <code>先验误差的协方差矩阵</code> $Cov({e}<em>{t}^{-}) = P</em>{t}^{-}$，则上式可以用公式 <code>先验误差的协方差矩阵2</code> 表示：</p><p><a id= "eq:先验误差的协方差矩阵2"></a></p><script type="math/tex; mode=display">    P_{t}^{-} = F \cdot P_{t-1} \cdot F^{T} + Q</script><p>其中 $P_{t-1}$ 是上一时刻的后验误差的协方差矩阵。不同状态之间的噪音很可能不是独立的，他们具有一定的相关性。</p><h3 id="更新模型"><a href="#更新模型" class="headerlink" title="更新模型"></a>更新模型</h3><p>&emsp;&emsp;对于这个小车，我们有卫星测量，卫星只能直接测量小车的位置 $z_p$，卫星无法直接测量速度 $z_v$，所以理想的位置和速度观测方程中不带速度分量，可以用公式 <code>位置和速度观测方程</code> 表示：</p><p><a id= "eq:位置和速度观测方程"></a></p><script type="math/tex; mode=display">\begin{aligned}    z_p &= p_t\end{aligned}</script><p>写成矩阵的形式，用公式 <code>位置和速度观测方程的矩阵形式</code> 表示：</p><p><a id= "eq:位置和速度观测方程的矩阵形式"></a></p><script type="math/tex; mode=display">    \begin{bmatrix}        z_p    \end{bmatrix}    = \begin{bmatrix}        1 & 0    \end{bmatrix}    \cdot\begin{bmatrix}        p_t \\        v_t    \end{bmatrix}</script><p>一定不能写成下面的形式，因为 $z_v$ 没有被观测，而不是 $z_v = 0$，用公式 <code>错误的位置和速度观测方程</code> 表示：</p><p><a id= "eq:错误的位置和速度观测方程"></a></p><script type="math/tex; mode=display">\begin{aligned}    z_p &= p_t \\     z_v &= 0\end{aligned}</script><p>错误的矩阵的形式，用公式 <code>错误的位置和速度观测方程的矩阵形式</code> 表示：</p><p><a id= "eq:错误的位置和速度观测方程的矩阵形式"></a></p><script type="math/tex; mode=display">    \begin{bmatrix}        z_p \\        z_v    \end{bmatrix}    = \begin{bmatrix}        1 & 0 \\        0 & 0    \end{bmatrix}    \cdot\begin{bmatrix}        p_t \\        v_t    \end{bmatrix}</script><p>其中引入了速度观测值 $v_t$，但是速度是没有测量的，可以去掉这个测量量。同样的有其他传感器的话可以增加测量量。所以观测方程的维度可以和状态方程的维度不同。写成矩阵形式，用公式 <code>匀加速直线运动2</code> 表示：</p><p><a id= "eq:理想的观测方程"></a></p><script type="math/tex; mode=display">    \underline{z_t} = H \cdot \underline{x_t}</script><p>上式加上以下噪音，用公式 <code>观测噪音</code> 表示：</p><p><a id= "eq:观测噪音"></a></p><script type="math/tex; mode=display">    \begin{bmatrix}        1 & 0    \end{bmatrix}\cdot    \begin{bmatrix}        \Delta p_t \\        \Delta v_t    \end{bmatrix}</script><p>其中，理想值 $\underline{z_t}$ 和实际值 $z_t$ 之间存在位置观测噪音 $\Delta p_t$，速度观测噪音 $\Delta v_t$。可以看到该<a href="#eq:位置和速度观测方程的矩阵形式">位置和速度观测方程的矩阵形式</a>加上噪音后，满足<a href="#eq:观测方程">观测方程</a>。</p><h3 id="更新方程"><a href="#更新方程" class="headerlink" title="更新方程"></a>更新方程</h3><h4 id="修正估计"><a href="#修正估计" class="headerlink" title="修正估计"></a>修正估计</h4><p>&emsp;&emsp;先验估计值是理想状态下，没有噪音，是根据物理理论规律推导出来的当前时刻的预测的状态值 $\hat{x}_t^-$。如果我们把观测方程也去除噪音值，当作一个理想的公式，并把这个先验估计值 $\hat{x}_t^-$ 带入去除噪音的观测方程中，那么实际的观测值和理论上理想的观测值之间存在一个差值，这个值就叫 <code>测量残差</code>，也叫 <code>残差</code>，记为 $l_t$，用公式 <code>残差</code> 表示：</p><p><a id= "eq:残差"></a></p><script type="math/tex; mode=display">    l_t = z_t - H \cdot \hat{x}_t^-</script><p>&emsp;&emsp;我们永远无法得到状态的真实值 $x_t$，只能尽量得到一个最优的估计值 $\hat{x}_t$，但是这个值无法直接用先验估计值 $\hat{x}_t^-$ 和残差直接表示，因为残差是理想状态计算的观测值和实际的观测值之间的差值，但是这个值并不能直接表示后验估计值 $\hat{x}_t$ 和先验估计值 $\hat{x}_t^-$ 之间的差值，但是可以用一个系数 $K_t$ 使他们相等，用公式 <code>最优估计偏差和残差的关系</code> 表示：</p><p><a id= "eq:最优估计偏差和残差的关系"></a></p><script type="math/tex; mode=display">    \hat{x}_t - \hat{x}_t^- = K_t \cdot (z_t - H \cdot \hat{x}_t^-)</script><p>其中 $K_t$ 又称为 <code>卡尔曼滤波系数</code>，上式我们习惯用公式 <code>最优估计值计算公式</code> 写成：</p><p><a id= "eq:最优估计值计算公式"></a></p><script type="math/tex; mode=display">    \hat{x}_t = \hat{x}_t^- + K_t \cdot (z_t-H \cdot \hat{x}_t^-)</script><p>这样，最优估计值 $\hat{x}_t$ 等于当前时刻的预测值 $\hat{x}_t^-$，加上权重 $K_t$乘以观测误差 $z_t-H \cdot \hat{x}_t^-$。</p><h4 id="更新卡尔曼增益"><a href="#更新卡尔曼增益" class="headerlink" title="更新卡尔曼增益"></a>更新卡尔曼增益</h4><p>&emsp;&emsp;那么这个权重 $K_t$ 给多少呢？怎么给呢？是随便给吗？有什么依据吗？</p><p>&emsp;&emsp;答：当然是有依据的。依据当然是真实值和最优估计值之间的差值 ${e}_t$ 最小，即后验误差最小，后验误差见公式<a href="#eq:后验误差">后验误差</a>。将上式最优估计值带入公式<a href="#eq:后验误差">后验误差</a>中，用公式 <code>后验误差变换1</code> 表示：</p><p><a id= "eq:后验误差变换1"></a></p><script type="math/tex; mode=display">\begin{aligned}    {e}_t = x_{t} - [\hat{x}_t^- + K_t \cdot (z_t - H \cdot \hat{x}_t^-)]\end{aligned}</script><p>继续化简，将<a href="#eq:观测方程">观测方程</a>带入上式中，用公式 <code>后验误差变换2</code> 表示：</p><p><a id= "eq:后验误差变换2"></a></p><script type="math/tex; mode=display">\begin{aligned}    {e}_t &= x_{t} - [\hat{x}_t^- + K_t \cdot (H \cdot x_{t} + n_t - H \cdot \hat{x}_t^-)] \\    &= (x_{t} - \hat{x}_t^-) - K_t \cdot H \cdot (x_{t} - \hat{x}_t^-) - K_t \cdot n_t\end{aligned}</script><p>继续化简，将公式<a href="#eq:先验误差">先验误差</a> ${e}_{t}^{-}$ 带入上式中，用公式 <code>后验误差变换3</code> 表示：</p><p><a id= "eq:后验误差变换3"></a></p><script type="math/tex; mode=display">\begin{aligned}    {e}_t &= (x_{t} - \hat{x}_t^-) - K_t \cdot H \cdot (x_{t} - \hat{x}_t^-) - K_t \cdot n_t \\    &= {e}_{t}^{-} - K_t \cdot H \cdot {e}_{t}^{-} - K_t \cdot n_t \\    &= (I - K_t \cdot H) \cdot {e}_{t}^{-} - K_t \cdot n_t\end{aligned}</script><p>同理，接下来求后验误差的协方差矩阵，用公式 <code>后验误差的协方差矩阵1</code> 表示：</p><p><a id= "eq:后验误差的协方差矩阵1"></a></p><script type="math/tex; mode=display">\begin{aligned}    Cov({e}_{t},{e}_{t}) &= Cov({e}_{t}) \\    &= Cov[(I - K_t \cdot H) \cdot {e}_{t}^{-} - K_t \cdot n_t] \\    &= (I - K_t \cdot H) \cdot Cov({e}_{t}^{-}) \cdot (I - K_t \cdot H)^T +  K_t \cdot Cov(n_t) \cdot K_t^T\end{aligned}</script><p>记 <code>后验误差的协方差矩阵</code> $Cov({e}<em>{t}) = P</em>{t}$，则上式可以用公式 <code>后验误差的协方差矩阵2</code> 表示：</p><p><a id= "eq:后验误差的协方差矩阵2"></a></p><script type="math/tex; mode=display">\begin{aligned}    P_{t} &= (I - K_t \cdot H)         \cdot P_{t}^{-}         \cdot (I - K_t \cdot H)^T         +  K_t \cdot R \cdot K_t^T \\    &= (P_{t}^{-} - K_t \cdot H \cdot P_{t}^{-})         \cdot (I - H^T \cdot K_t^T)         + K_t \cdot R \cdot K_t^T \\    &= P_{t}^{-}         - K_t \cdot H \cdot P_{t}^{-}        - P_{t}^{-} \cdot H^T \cdot K_t^T \\        &+ K_t \cdot H \cdot P_{t}^{-} \cdot H^T \cdot K_t^T        + K_t \cdot R \cdot K_t^T \\    &= P_{t}^{-}         - K_t \cdot H \cdot P_{t}^{-}        - (K_t \cdot H \cdot P_{t}^{-})^T        + K_t \cdot (H \cdot P_{t}^{-} \cdot H^T + R) \cdot K_t^T\end{aligned}</script><p>其中之所以能化简，是由于误差的协方差矩阵 $P<em>{t}$ 和 $P</em>{t}^-$ 均是自相关矩阵，即以对角线为分界线，矩阵是对称的，这是协方差矩阵的性质，具体可以参考：<a href="./20231204a.html">协方差</a>。前面提到我们只用协方差对角线的元素，我们想要后协方差矩阵 $P<em>{t}$ 对角线上的每个元素都最小，只要让该矩阵对角线上的和最小就行了，即矩阵 $P</em>{t}$ 的迹最小（参考：<a href="20231210a.html">矩阵的迹</a>），用公式 <code>后验误差的协方差矩阵的迹</code> 表示：</p><p><a id= "eq:后验误差的协方差矩阵的迹"></a></p><script type="math/tex; mode=display">\begin{aligned}    T(P_{t}) &= T(P_{t}^{-})         - 2 \cdot T(K_t \cdot H \cdot P_{t}^{-})        + T[K_t \cdot (H \cdot P_{t}^{-} \cdot H^T + R) \cdot K_t^T] \\    &= T[K_t \cdot (H \cdot P_{t}^{-} \cdot H^T + R) \cdot K_t^T]         - 2 \cdot T(K_t \cdot H \cdot P_{t}^{-})        + T(P_{t}^{-}) \\   \end{aligned}</script><p>其中 $T()$ 代表矩阵的迹。把上式看作是关于 $K_t$ 的函数，用公式 <code>关于卡尔曼滤波系数的函数</code> 表示：</p><p><a id= "eq:关于卡尔曼滤波系数的函数"></a></p><script type="math/tex; mode=display">\begin{aligned}    f(x) &= a \cdot x^2 - b \cdot x + c,    \quad(a,b\text{是正的常数}) \\    f'(x) &= 2 \cdot a \cdot x - b\end{aligned}</script><p>显然，这个函数是一个开口向上的一元二次函数，有极小值。它是一个凸函数，导数为0的点就是最小值。将公式<a href="#eq:后验误差的协方差矩阵的迹">后验误差的协方差矩阵的迹</a>求导，因为和的求导等于导的求和，所以矩阵迹的求导同矩阵求导求导用公式 <code>后验误差的协方差矩阵的迹的转置</code> 表示：</p><p><a id= "eq:后验误差的协方差矩阵的迹的转置"></a></p><script type="math/tex; mode=display">\begin{aligned}    {\frac {dT(P_{t})} {dK_{t}}}    &= T\left[K_{t} \cdot \left(H \cdot P_{t}^{-} \cdot H^{T} + R \right)\right]        + T\left[K_{t} \cdot (H \cdot P_{t}^{-} \cdot H^{T} + R)\right]        - T\left[2 \cdot (H \cdot P_{t}^{-})^{T}\right] \\    &= T\left[K_{t} \cdot \left(H \cdot P_{t}^{-} \cdot H^{T} + R \right)\right]        -2 \cdot T\left[(H \cdot P_{t}^{-})^{T}\right] \\    &= 0    \end{aligned}</script><p>这里是对矩阵的求导，求导公式从函数求导理解，想完全弄清楚，那么具体矩阵的求导需要单独学习，这里不做深入探讨。使得上式为零，等式左右两边矩阵的迹相等使得矩阵相等即可。那么可计算出卡尔曼滤波系数 $K_{t}$，用公式 <code>卡尔曼滤波系数</code> 表示：</p><p><a id= "eq:卡尔曼滤波系数"></a></p><script type="math/tex; mode=display">    K_t = \frac {P_t^- \cdot H^T} {H \cdot P_t^- \cdot H^T + R}</script><h4 id="更新后验误差的协方差"><a href="#更新后验误差的协方差" class="headerlink" title="更新后验误差的协方差"></a>更新后验误差的协方差</h4><p>&emsp;&emsp;将计算得到的卡尔曼滤波系数 $K_t$ 带入公式<a href="#eq:后验误差的协方差矩阵2">后验误差的协方差矩阵2</a>，计算得到后验误差协方差矩阵，用公式 <code>后验误差的协方差矩阵3</code> 表示：</p><p><a id= "eq:后验误差的协方差矩阵3"></a></p><script type="math/tex; mode=display">\begin{aligned}    P_{t} &= P_{t}^{-} - K_t \cdot H \cdot P_{t}^{-} \\        &= (I - K_t \cdot H) \cdot P_{t}^{-} \\\end{aligned}</script><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;至此，卡尔曼滤波的五个重要的公式已经全部推导完成。分别是：<a href="#eq:先验估计">先验估计</a>、<a href="#eq:先验误差的协方差矩阵2">先验误差的协方差矩阵2</a>、<a href="#eq:卡尔曼滤波系数">卡尔曼滤波系数</a>、<a href="#eq:最优估计值计算公式">最优估计值计算公式</a>、<a href="#eq:后验误差的协方差矩阵3">后验误差的协方差矩阵3</a>。综上，我们把这五个重要的公式写在一起：</p><p>预测公式，用公式 <code>预测</code> 表示：</p><p><a id= "eq:预测"></a></p><script type="math/tex; mode=display">\begin{aligned}    \hat{x}_{t}^{-} &= F \cdot \hat{x}_{t-1} + B \cdot u_{t-1} \\    P_{t}^{-} &= F \cdot P_{t-1} \cdot F^{T} + Q \end{aligned}</script><p>含义为：根据系统的物理模型，使用上一时刻的状态估计和控制输入，预测系统的下一时刻状态和状态方差。</p><p>更新公式，用公式 <code>更新</code> 表示：</p><p><a id= "eq:更新"></a></p><script type="math/tex; mode=display">\begin{aligned}    K_t &= \frac {P_t^- \cdot H^T} {H \cdot P_t^- \cdot H^T + R} \\    \hat{x}_t &= \hat{x}_t^- + K_t \cdot (z_t - H \cdot \hat{x}_t^-) \\    P_{t} &= (I - K_t \cdot H) \cdot P_{t}^{-}\end{aligned}</script><p>含义为：通过比较系统的观测值和预测值，结合观测噪声和系统模型的不确定性，更新系统的状态估计和方差。</p><p>&emsp;&emsp;上面没有说误差的方差而是直接说的是 “先验估计” $\hat{x}_{t}^{-}$ 和 “后验估计” $\hat{x}_t$ 的方差，是因为虽然我们不知道真实值 $x_t$ （不可测也是不可观的），但是它是个常数，由方差的性质知，变量增加或者减少一个常数，其方差值不变，所以这个误差方差就是该估计值的正太分布的方差。至于为什么直接说方差而不是协方差矩阵，上文已经提及了。</p><h3 id="一轮简单迭代计算"><a href="#一轮简单迭代计算" class="headerlink" title="一轮简单迭代计算"></a>一轮简单迭代计算</h3><p>&emsp;&emsp;对于上述小车，只考虑状态量位置 $p$，初始位置 $p<em>0 = 0$，初始速度 $v_0 = 0$，加速度 $a_0 = 1$。则易得：$F = 1$、$B = 0.5$、$u = 1$。假设卫星直接测量得到小车的位置，即 $H = 1$。初始值：$\hat{x}</em>{0}^{-} = 0$、规定给零$P_{0} = 0$。给定带误差的观测值：$z_t = 1$，误差比较大。</p><p>则进行第一轮计算：$\hat{x}<em>{1}^{-} = 0.5$、$P</em>{1}^{-} = Q$、$K<em>1 = Q/(Q +R)$、$\hat{x}_1 = 0.5 + 0.5 \cdot Q/(Q +R)$、$P</em>{1} = (Q \cdot R)/(Q +R)$。实际值 $x<em>1 = 0.5$，可以看到我们模拟的是系统的物理模型建立很准确，所以先验估值 $\hat{x}</em>{1}^{-}$ 很准确，其可信度高，我们调参就是把状态误差的方差 $Q$ 调小，取值为 $0.005$：而观测值误差很大，其可信度低，我们调参就是把观测误差的方差 $R$ 调大，取值为 $0.1$。则 $P<em>{1}^{-} = 0.005$、$K_1 = 0.0476$、$\hat{x}_1 = 0.524$、$P</em>{1} = 0.00476$。仔细观察，我们可以发现有趣的现象，用公式 <code>方差比较</code> 表示为：</p><p><a id= "eq:方差比较"></a></p><script type="math/tex; mode=display">\begin{aligned}    Q - P_1 = Q - \frac {Q \cdot R} {Q + R} = \frac {Q^2} {Q + R} > 0 \\    R - P_1 = R - \frac {Q \cdot R} {Q + R} = \frac {R^2} {Q + R} > 0\end{aligned}</script><p>从上式可以看出，最优估计的方差是比过程噪音和观测噪音都小的。这也符合我们的预期。</p><h3 id="一阶简单演示"><a href="#一阶简单演示" class="headerlink" title="一阶简单演示"></a>一阶简单演示</h3><p>&emsp;&emsp;我们使用 <code>geogebra</code> 软件做演示。由于部分符号不支持，这里做替换。数学模型还是选用一维小车匀加速直线运动：</p><p>给定值：$F = 1$、$B = 0.5$、$H = 1$、$u = 1$、$P<em>{0-hou} = 0$、$x</em>{0-hou} = 0$</p><p>数值滑块：$Q$、$R$。</p><p>第一轮：</p><p>观测值的正态分布（<span class='p red'>红色曲线</span>）得先给，以此来创造滑动点 $Guan$（<span class='p green'>绿色点</span>），取它的横坐标 $z<em>1 = x(Guan)$ 作为观测值。想要得到观测值的正态分布需要先给真实值 $x</em>{1-zhen}$。之所以将 $x<em>{1}$ 记为 $x</em>{1-zhen}$，是为了 Latex 公式直接运用于 <code>geogebra</code> 绘图软件中。用公式 <code>geogebra观测值的正态分布公式</code> 表示为：</p><p><a id= "eq:geogebra观测值的正态分布公式"></a></p><script type="math/tex; mode=display">\begin{aligned}    f_{1-guan}(x)     = \frac {1}         {\sqrt{2 \cdot \pi} \cdot \sqrt{R}}        \cdot e^{             - \frac {(x - x_{1-zhen})^2}            {2 \cdot R}        }\end{aligned}</script><p>迭代公式用 <code>geogebra卡尔曼滤波公式</code> 表示为：</p><p><a id= "eq:geogebra卡尔曼滤波公式"></a></p><script type="math/tex; mode=display">\begin{aligned}    x_{1-xian} = F \cdot x_{0-hou} + B \cdot u\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}    P_{1-xian} = F^2 \cdot P_{0-hou} + Q\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}    K_1 = \frac {P_{1-xian} \cdot H} {H^2 \cdot P_{1-xian} + R}\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}    x_{1-hou} = x_{1-xian} + K_1 \cdot (z_1 - H \cdot x_{1-xian})\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}    P_{1-hou} = (1 - K_1 \cdot H) \cdot P_{1-xian}\end{aligned}</script><p>正态分布公式：</p><p>先验估计的正态分布曲线用<span class='p blue'>蓝色</span>表示，公式用 <code>geogebra先验估计的正态分布公式</code> 表示为：</p><p><a id= "eq:geogebra先验估计的正态分布公式"></a></p><script type="math/tex; mode=display">\begin{aligned}    f_{1-xian}(x)     = \frac {1}         {\sqrt{2 \cdot \pi} \cdot \sqrt{P_{1-xian}}}        \cdot e^{             - \frac {(x - x_{1-xian})^2}            {2 \cdot P_{1-xian}}        }\end{aligned}</script><p>后验估计的正态分布曲线用<span class='p purple'>紫色</span>表示，公式用 <code>geogebra后验估计的正态分布公式</code> 表示为：</p><p><a id= "eq:geogebra先验估计的正态分布公式"></a></p><script type="math/tex; mode=display">\begin{aligned}    f_{1-hou}(x)     = \frac {1}         {\sqrt{2 \cdot \pi} \cdot \sqrt{P_{1-hou}}}        \cdot e^{             - \frac {(x - x_{1-hou})^2}            {2 \cdot P_{1-hou}}        }\end{aligned}</script><p>注意复制粘贴到 geogebra 中时不能有对齐符号 “&amp;”。演示结果如下：</p><style>  .container2 {      width: 100%; /* 设置容器的宽度为90% */      margin: 0 auto; /* 水平居中容器 */      position: relative; /* 设置容器的定位方式为相对定位 */      padding-top: 72%; /* width="700px" height="500px"，高宽比为：0.714 */      height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  }</style><div class="container2">      <iframe class="container-iframe" src="https://www.geogebra.org/material/iframe/id/cjm659q3/width/700/height/500/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/true/ctl/false" frameborder="0"></iframe>  </div><br><p>&emsp;&emsp;通过图解调节参数，可以大大增加我们对卡尔曼滤波原理的理解。其中有很重要的地方需要说明。1. 是状态模型更可靠还是观测模型更可靠，我们就把哪个模型对应的权重调大。虽然在我们认识卡尔曼滤波之前会认为，过程噪音和观测噪音的方差是系统固有的，而我们需要去给权重提高某个模型的可靠度。而卡尔曼滤波和这个表面的、固式的思维恰好是相反的，权重是通过计算得到的，不用我们手动给，只要依照误差方差最小的原则计算出来即可。而过程噪音和观测噪音才是我们要调节的参数，也就是我们要调节的权重，方差给的越小，说明离散程度越小，说明越可靠。也就是说：如果该物理模型更准确，那么我们就把过程噪音的方差调小；如果传感器的精度很高，我们就把观测噪音方差调小。经过反复调节参数，我们发现最优估计曲线（迭代后的）和真实轨迹吻合度很好时，此时的方差参数往往就和物理系统实际的方差参数几乎一致。2. 调节参数时，我们把观测值远离真实值，最优估计值也会跟着远离真实值，但是明明还受到了先验估计值的约束，而此时最优估计的效果不好。简单分析会发现此时说明观测模型不准确了，应该降低其权重，所以将观测噪音方差调大，最优估计值会更信任先验估计值，那么可能此时的最优估计效果才更好。</p><h3 id="多次迭代仿真"><a href="#多次迭代仿真" class="headerlink" title="多次迭代仿真"></a>多次迭代仿真</h3><p>&emsp;&emsp;所有的代码算法，严格按照公式推导进行设计。所有的代码变量全部取自于latex公式符号。这样接口就做好了，这样逻辑思维的一致性，严谨性，可读性，方便性，记忆性，代码的移植性都得到了极大地提升。有两点需要额外设计：一是初始值，这是在公式推导中没有提及的。二是遇到了数值分析问题，需要对公式进行移项等基本变化进行改造；但也是要详细列写公式的，并严格依据公式写代码；数值问题是在跑代码时发现的，发现数值问题，再回头先改公式，再改代码。</p><p>&emsp;&emsp;代码只是一种机器表达语言，核心还是算法。代码需要分解成合适的文件、函数方便调用。重复的功能一定要做成函数，既能提升开发效率，又能方便维护。分解成合适的文件便于阅读和使用。不要在某个语言上写任何偏门的语法，尽量都写通用的语法，方便移植。</p><p>&emsp;&emsp;显然，我想分得更细、更合理一些。这次准备采用的语言有：matlba、C、C++、Python、Java、Verilog 来写。先写，然后进行函数化，然后进行文件化。比较好画图的是 Java、Python、matlab，所以仿真出来的数组还是要做成数据库保存下来，用其他编程语言作图。</p><p>&emsp;&emsp;例子还是用这个车，但是公式还是用通用的状态方程和过程方程，不用特例的力学方程。我们观察发现，真实值的方程和实际值的方程只差一个噪音，所以函数的功能就可以做成一个调用关系。初始值：</p><p>小车的初始速度：<br>小车的初始加速度：<br>位置的过程噪音，<br>速度的过程噪音，<br>传感器的观测噪音</p><p>&emsp;&emsp;我们先来看看 matlab。</p><h4 id="matlab仿真"><a href="#matlab仿真" class="headerlink" title="matlab仿真"></a>matlab仿真</h4><p>&emsp;&emsp;所有的代码算法，严格按照公式推导进行设计。所有的代码变量全部取自于latex公式符号。这样接口就做好了，这样逻辑思维的一致性，严谨性，可读性，方便性，记忆性，代码的移植性都得到了极大地提升。有两点需要额外设计：一是初始值，这是在公式推导中没有提及的。二是遇到了数值分析问题，需要对公式进行移项等基本变化进行改造；但也是要详细列写公式的，并严格依据公式写代码；数值问题是在跑代码时发现的，发现数值问题，再回头改公式。matlab 仿真公式如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 清理</span></span><br><span class="line">close all; clear; clc;</span><br><span class="line"><span class="comment">% 估计小车在每一时刻的位置和速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 无噪音的理想值</span></span><br><span class="line">T = (<span class="number">1</span> : <span class="number">100</span>); <span class="comment">% 离散的时间序列，单位是s</span></span><br><span class="line">p = <span class="built_in">zeros</span>(<span class="number">1</span>, <span class="built_in">length</span>(T)); v = <span class="built_in">zeros</span>(<span class="number">1</span>, <span class="built_in">length</span>(T)); </span><br><span class="line">p(<span class="number">1</span>) = <span class="number">0</span> <span class="comment">% 小车的初始位置</span></span><br><span class="line">v(<span class="number">1</span>) = <span class="number">3</span> <span class="comment">% 小车的初始速度</span></span><br><span class="line">a = <span class="number">0.1</span>; <span class="comment">% 加速度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t = <span class="number">2</span> : <span class="built_in">length</span>(T)</span><br><span class="line">    p(t) = p(t - <span class="number">1</span>) + v(t - <span class="number">1</span>) + <span class="number">1</span>/<span class="number">2</span> * a; <span class="comment">% 理想的位置</span></span><br><span class="line">    v(t) = v(t - <span class="number">1</span>) + a; <span class="comment">% 理想的速度值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">underline_x = [p; v];</span><br><span class="line"> </span><br><span class="line"><span class="comment">%% 有噪音的实际值，模拟噪音</span></span><br><span class="line"><span class="comment">% 状态噪音</span></span><br><span class="line">sigma_r = <span class="number">0.01</span></span><br><span class="line">r_p = sigma_r * <span class="built_in">randn</span>(<span class="number">1</span>, <span class="built_in">length</span>(T));</span><br><span class="line">r_v = sigma_r * <span class="built_in">randn</span>(<span class="number">1</span>, <span class="built_in">length</span>(T));</span><br><span class="line">x = underline_x;</span><br><span class="line"><span class="keyword">for</span> t = <span class="number">2</span> : <span class="built_in">length</span>(T)</span><br><span class="line">    x(<span class="number">1</span>, t) = x(<span class="number">1</span>, t - <span class="number">1</span>) + x(<span class="number">2</span>, t - <span class="number">1</span>) + <span class="number">1</span>/<span class="number">2</span> * a + r_p(t); <span class="comment">% 真实的位置</span></span><br><span class="line">    x(<span class="number">2</span>, t) = x(<span class="number">2</span>, t - <span class="number">1</span>) + a + r_v(t); <span class="comment">% 真实的速度值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 观测噪音</span></span><br><span class="line">sigma_Delta_p = <span class="number">3</span></span><br><span class="line">Delta_p = sigma_Delta_p * <span class="built_in">randn</span>(<span class="number">1</span>, <span class="built_in">length</span>(T)); <span class="comment">% GPS测量误差，标准差为3m</span></span><br><span class="line">z = x(<span class="number">1</span>, :) + Delta_p; <span class="comment">% GPS的观测值，带有测量误差</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 卡尔曼滤波</span></span><br><span class="line"><span class="comment">% 已知量</span></span><br><span class="line"><span class="comment">% 已知的线性变换矩阵</span></span><br><span class="line">F = [<span class="number">1</span>, <span class="number">1</span>; <span class="number">0</span>, <span class="number">1</span>]; <span class="comment">% 状态转移矩阵</span></span><br><span class="line">B = [<span class="number">1</span>/<span class="number">2</span>; <span class="number">1</span>]; <span class="comment">% 控制矩阵</span></span><br><span class="line">u = a;</span><br><span class="line">H = [<span class="number">1</span>, <span class="number">0</span>];</span><br><span class="line">sigma_Q = <span class="number">0.01</span></span><br><span class="line">Q = [sigma_Q^<span class="number">2</span>, <span class="number">0</span>; <span class="number">0</span>, sigma_Q^<span class="number">2</span>]; <span class="comment">% 过程噪声的协方差矩阵，这是一个超参数</span></span><br><span class="line">sigma_R = <span class="number">3</span></span><br><span class="line">R = sigma_R^<span class="number">2</span>; <span class="comment">% 观测噪声的协方差矩阵，也是一个超参数。因为是一维的，就是一个数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 初始化</span></span><br><span class="line">hat_x_ = <span class="built_in">zeros</span>(<span class="number">2</span>, <span class="built_in">length</span>(T)); hat_x = <span class="built_in">zeros</span>(<span class="number">2</span>, <span class="built_in">length</span>(T));</span><br><span class="line">hat_x(:, <span class="number">1</span>) = [<span class="number">0</span>; <span class="number">0</span>]; <span class="comment">% 初始状态，[位置, 速度]，就是我们要估计的内容，开始时都未知，设为0</span></span><br><span class="line">P = [<span class="number">0.1</span>, <span class="number">0</span>; <span class="number">0</span>, <span class="number">0.1</span>]; <span class="comment">% 先验误差协方差矩阵的初始值，根据经验给出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 卡尔曼滤波5个关键公式</span></span><br><span class="line"><span class="keyword">for</span> t = <span class="number">2</span>:<span class="built_in">length</span>(T)</span><br><span class="line">    hat_x_(:, t) = F * hat_x(:, t - <span class="number">1</span>) + B * u;</span><br><span class="line">    P_ = F * P * F&#x27; + Q;</span><br><span class="line">    K = (P_ * H&#x27;) / (H * P_ * H&#x27; + R);</span><br><span class="line">    hat_x(:, t) = hat_x_(:, t) + K * (z(:, t) - H * hat_x_(:, t));</span><br><span class="line">    P = (<span class="built_in">eye</span>(<span class="number">2</span>) - K * H) * P_;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 绘图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(T, underline_x(<span class="number">1</span>, :), <span class="string">&#x27;b&#x27;</span>); <span class="comment">% 位置的理想值</span></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(T, x(<span class="number">1</span>, :), <span class="string">&#x27;g&#x27;</span>); <span class="comment">% 位置的实际值</span></span><br><span class="line"><span class="built_in">plot</span>(T, z(<span class="number">1</span>, :), <span class="string">&#x27;m&#x27;</span>); <span class="comment">% 位置的观测值</span></span><br><span class="line"><span class="built_in">plot</span>(T, hat_x(<span class="number">1</span>, :), <span class="string">&#x27;r.&#x27;</span>); <span class="comment">% 位置的最优估计值</span></span><br><span class="line">title(<span class="string">&#x27;对位置的估计&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>); ylabel(<span class="string">&#x27;位置&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(T, underline_x(<span class="number">2</span>, :)); <span class="comment">% 速度的理想值</span></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(T, x(<span class="number">2</span>, :), <span class="string">&#x27;g&#x27;</span>); <span class="comment">% 速度的实际值</span></span><br><span class="line"><span class="built_in">plot</span>(T, hat_x(<span class="number">2</span>, :), <span class="string">&#x27;r.&#x27;</span>); <span class="comment">% 速度的最优估计值</span></span><br><span class="line">title(<span class="string">&#x27;对速度的估计&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>); ylabel(<span class="string">&#x27;速度&#x27;</span>);</span><br></pre></td></tr></table></figure><p>其中，用matlab做实时脚本时，这些地方可以做数字滑块：1. 初始位置 <code>p(1)</code> 和速度 <code>v(1)</code>，2. 过程噪声的标准差 <code>sigma_r</code> 和观测噪声的标准差 <code>sigma_Delta_p</code>，3. 超参数 $Q$ 和 $R$ 的标准差 <code>sigma_Q</code> 和 <code>sigma_R</code>。</p><p>&emsp;&emsp;不管初始位置和速度时多少，卡尔曼滤波很快就能收敛，跟上脚步，和实际值接近。过程噪声的标准差不能很大，很大说明状态方程的物理模型建立的不合理，且在没有观测速度的条件下，卡尔曼滤波效果特别是对速度的估计值就很差；除非观测噪声很小，观测精度很高，卡尔曼滤波在状态方程的物理模型建立的不合理的条件下，依赖观测值也能得到较好的结果。超参数 $Q$ 和 $R$ 可能需要不断地调试，以达到最佳的曲线效果；可以发现把超参数的标准差和模拟噪音的标准差设置一样时效果最好；实际中由于对过程噪声的未知，需要通过不断调试更改超参数，以使得曲线最佳，此时的超参数基本上就和系统的噪音相差无几。</p><h4 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h4><p>&emsp;&emsp;需要考虑matlab仿真的时间复杂度。就是考虑算力问题。时间复杂度想得到的答案是随着数据规模的增加，程序的运行次数是线性增加还是指数增加的。从这里我们不难看出，数据规模有三个量，一个是状态量的维度 $m$，一个是观测量的维度 $n$，一个是数组的长度 $t$。显然循环停止的条件是数组跑完，所以时间复杂度肯定包含 $\cdot t$ 项。接下来就只用考虑单步预测的时间复杂度：显然不管计算了多少次，复杂度只和维度有关，所以，用公式 <code>时间复杂度</code> 表示：</p><p><a id= "eq:时间复杂度"></a></p><script type="math/tex; mode=display">\begin{aligned}    T &= O(m + n \cdot t) \\    T &= O(n^2)\end{aligned}</script><p>这是对的吗？应该是对的吧？</p><h3 id="GNSS定位"><a href="#GNSS定位" class="headerlink" title="GNSS定位"></a>GNSS定位</h3><h3 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h3><p>&emsp;&emsp;以上推导的公式形式常用于自动控制领域。在卫星导航领域，状态空间表达式如下，用公式 <code>状态空间表达式</code> 表示：</p><p><a id= "eq:状态空间表达式"></a></p><script type="math/tex; mode=display">\left\{\begin{aligned}    X_k &= \Phi_k \cdot X_{k-1} + \psi_{k,k-1} \cdot U_{k-1} + \Gamma_{k,k-1} \cdot \Omega_{k-1} \\    L_k &= B_k \cdot X_k + G_k \cdot U_k + \Delta_k\end{aligned}\right.</script><p>上式和<a href="#eq:状态方程">状态方程</a>以及<a href="#eq:观测方程">观测方程</a>还有三个区别：</p><p>一个是下角标 $<em>{k,k-1}$ 出现在一些系数矩阵上，这是为什么呢？是因为系数矩阵所乘以的矩阵变量是上一时刻的，从上一时刻到这一个时刻的矩阵变换关系表示为 ${k,k-1}$。第二个变化是观测方程的单噪音项变成了两项相乘，其中 ${\Omega}</em>{k-1}$ 为上一时刻的动态噪声，${\Gamma}_{k,k-1}$ 为噪音变化矩阵。第三个变化是在观测方程中，该时刻的控制项 $G_k \cdot U_k$，该控制项将影响观测值，在部分传感器中会出现这种观测方程，这种传感器我目前还没见过。</p><p>&emsp;&emsp;同理，可以得到卡尔曼滤波公式：</p><p>时间更新，用公式 <code>时间更新</code> 表示：</p><p><a id= "eq:时间更新"></a></p><script type="math/tex; mode=display">\left\{\begin{aligned}    \widehat{X}_{k,k-1} &= \Phi_{k,k-1} \cdot \widehat{X}_{k-1,k-1} + \psi_{k,k-1} \cdot U_{k-1} \\    D_{X_{k,k-1}} &= \Phi_{k,k-1} \cdot D_{X_{k-1,k-1}} \cdot \Phi_{k,k-1}^{T}         + \Gamma_{k,k-1} \cdot D_{\Omega_{k-1}} \cdot \Gamma_{k,k-1}^{T}\end{aligned}\right.</script><p>上式与公式<a href="#eq:预测">预测</a>除了符号以外完全相同，但是确实不够优雅，可读性也不如<a href="#eq:预测">预测</a>，比如先验误差符号有点怪怪的。之前叫预测，但是这里叫一步预测公式的时间更新，因为从公式上来说，是从上一个时刻推导到这时刻。但是预测的叫法和时间更新的叫法值得是一个东西。</p><p>测量更新，用公式 <code>测量更新1</code> 表示：</p><p><a id= "eq:测量更新1"></a></p><script type="math/tex; mode=display">\begin{aligned}    \widehat{X}_{k,k} &= \widehat{X}_{k,k-1} + J_k \cdot l_k \\     D_{X_{k,k}} &= (I - J_k \cdot B_k) \cdot D_{X_{k,k-1}}\end{aligned}</script><p>其中，用公式 <code>测量更新2</code> 表示：</p><p><a id= "eq:测量更新2"></a></p><script type="math/tex; mode=display">\begin{aligned}    J_k &= D_{X_{k,k-1}} \cdot B_k^T\big(B_k \cdot D_{X_{k,k-1}} \cdot B_k^T + D_{\Delta_k}\big)^{-1} \\    l_k &= L_k - Z_k - B_k \cdot \widehat{X}_{k,k-1}\end{aligned}</script><p>其中，用公式 <code>非随机控制向量</code> 表示：</p><p><a id= "eq:非随机控制向量"></a></p><script type="math/tex; mode=display">    Z_{k} = G_{k} \cdot U_{k}</script><p>上式和<a href="#eq:更新">更新</a>方程除了符号以及状态方程那儿说的不同之处以外没有任何不同。这里 $J_k$ 除了之前叫卡尔曼滤波系数，这里还叫滤波增益矩阵。$l_k$ 除了叫验前残差以外还叫<code>新息矩阵</code>、<code>OMC向量</code>。</p><h3 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h3><p>&emsp;&emsp;在GNSS定位数据处理中，通常不涉及控制向量。非随机控制项为零时，即方程和观测方程中 $U_k = 0$，也即卡尔曼滤波公式中 $U_k = 0$ 和 $Z_k = 0$，去掉包含这两项的内容即可。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> matlab </tag>
            
            <tag> 卡尔曼滤波 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程：bug汇总</title>
      <link href="/posts/20231204c.html"/>
      <url>/posts/20231204c.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建导航"><a href="#博客搭建导航" class="headerlink" title="博客搭建导航"></a><a href="./20240221c.html#bug汇总">博客搭建导航</a></h1><h1 id="目录跳转异常"><a href="#目录跳转异常" class="headerlink" title="目录跳转异常"></a>目录跳转异常</h1><h2 id="一级标题跳转异常"><a href="#一级标题跳转异常" class="headerlink" title="一级标题跳转异常"></a>一级标题跳转异常</h2><p>&emsp;&emsp;网页中点击一级标题无法正常跳转。这种情况偶尔会出现，bug 原因未知。</p><h2 id="文章内标题跳转异常"><a href="#文章内标题跳转异常" class="headerlink" title="文章内标题跳转异常"></a>文章内标题跳转异常</h2><p>&emsp;&emsp;问题描述：我们知道在超链接后面添加 <code>#</code> 和 <code>标题内容</code> 可以跳转到网页指定标题，但是如果标题包含数字和字母时，虽然仍然可以跳转到指定网页，但是无法正常跳转到指定标题下。这种情况偶尔会出现，bug 原因未知。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">标题为纯中文正常跳转：[<span class="string">数学导航</span>](<span class="link">./20240210a.html#协方差</span>)</span><br><span class="line"></span><br><span class="line">标题含数字不可正常跳转：[<span class="string">文章导航总览</span>](<span class="link">./20240221a.html#2024年2月</span>)</span><br><span class="line"></span><br><span class="line">标题含英文不可正常跳转：[<span class="string">博客搭建导航</span>](<span class="link">./20240221c.html#bug汇总</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>标题为纯中文正常跳转：<a href="./20240210a.html#协方差">数学导航</a></p><p>标题含数字不可正常跳转：<a href="./20240221a.html#2024年2月">文章导航总览</a></p><p>标题含英文不可正常跳转：<a href="./20240221c.html#bug汇总">博客搭建导航</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p>&emsp;&emsp;hexo在渲染公式时出现了如下错误：</p><h2 id="独立公式渲染错误"><a href="#独立公式渲染错误" class="headerlink" title="独立公式渲染错误"></a>独立公式渲染错误</h2><h3 id="公式不分行"><a href="#公式不分行" class="headerlink" title="公式不分行"></a>公式不分行</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染错误演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line"><span class="code">    \rho_&#123;XY&#125;</span></span><br><span class="line"><span class="code">    &amp;= \frac&#123;\sum_&#123;i=1&#125;^n \left[</span></span><br><span class="line"><span class="code">            \frac&#123;\left( x_i - \overline&#123;x&#125; \right)&#125;</span></span><br><span class="line"><span class="code">            &#123;\overline&#123;x&#125;&#125; \cdot</span></span><br><span class="line"><span class="code">            \frac&#123;\left(y_i - \overline&#123;y&#125; \right)&#125;</span></span><br><span class="line"><span class="code">            &#123;\overline&#123;y&#125;&#125; \right]</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">        &#123;n&#125; \\</span></span><br><span class="line"><span class="code">    &amp;= \frac&#123;Cov \left( X,Y \right)&#125;</span></span><br><span class="line"><span class="code">        &#123;\overline&#123;x&#125; \cdot \overline&#123;y&#125;&#125; \\</span></span><br><span class="line"><span class="code">\end&#123;aligned&#125;</span></span><br><span class="line"><span class="code">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><img src="https://picture.adunas.top/EquationErrorB.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="公式不渲染"><a href="#公式不渲染" class="headerlink" title="公式不渲染"></a>公式不渲染</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染错误演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">C =(c<span class="emphasis">_&#123;ij&#125;)_</span>&#123;n \times n&#125;</span><br><span class="line"><span class="code">    =\begin&#123;pmatrix&#125;</span></span><br><span class="line"><span class="code">        c_&#123;11&#125; &amp; c_&#123;12&#125; &amp; \ldots &amp; c_&#123;1n&#125; \\</span></span><br><span class="line"><span class="code">        c_&#123;21&#125; &amp; c_&#123;22&#125; &amp; \ldots &amp; c_&#123;2n&#125; \\</span></span><br><span class="line"><span class="code">        \cdot &amp; \cdot &amp; &amp; \cdot \\</span></span><br><span class="line"><span class="code">        \cdot &amp; \cdot &amp; &amp; \cdot \\</span></span><br><span class="line"><span class="code">        \cdot &amp; \cdot &amp; &amp; \cdot \\</span></span><br><span class="line"><span class="code">        \cdot &amp; \cdot &amp; &amp; \cdot \\</span></span><br><span class="line"><span class="code">        c_&#123;n1&#125; &amp; c_&#123;n2&#125; &amp; \ldots &amp; c_&#123;nn&#125;</span></span><br><span class="line"><span class="code">    \end&#123;pmatrix&#125;</span></span><br><span class="line"><span class="code">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><img src="https://picture.adunas.top/EquationErrorA.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="嵌入公式渲染错误"><a href="#嵌入公式渲染错误" class="headerlink" title="嵌入公式渲染错误"></a>嵌入公式渲染错误</h2><h3 id="公式渲染范围错误"><a href="#公式渲染范围错误" class="headerlink" title="公式渲染范围错误"></a>公式渲染范围错误</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染错误演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$X = ( X<span class="emphasis">_&#123;1&#125;, X_</span>&#123;2&#125;, \ldots, X<span class="emphasis">_&#123;n&#125;)^&#123;T&#125;$ 为 $n$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><img src="https://picture.adunas.top/EquationErrorC.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>&emsp;&emsp;不是所有公式渲染错误。而且<a href="#独立公式渲染错误">独立公式渲染错误</a>和<a href="#嵌入公式渲染错误">嵌入公式渲染错误</a>不同时出现，会出现一种。当增加或者减少 <code>$</code> 和中文汉字之间的空格后，这两种错误都出现过。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>&emsp;&emsp;参考教程：<a href="http://t.csdnimg.cn/qWqOq">Hexo显示Latex公式最新解决方案</a>。</p><details class="folding-tag" blue><summary> 公式渲染错误解决方法 </summary>              <div class='content'>              <p>卸载hexo-math：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-math</span><br></pre></td></tr></table></figure><p>卸载hexo-renderer-marked：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked</span><br></pre></td></tr></table></figure><p>安装hexo-renderer-pandoc渲染器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-pandoc</span><br></pre></td></tr></table></figure><p>安装后一定要重启 VSCode 软件，然后重新生成网页，发现错误没变😂，在终端中还出现了新的错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc exited with code null.</span><br></pre></td></tr></table></figure><p>这个显示没有 pandoc，所以我们要在本地安装 pandoc。在<a href="https://www.pandoc.org/installing.html">pandoc官网</a>中下载并安装 pandoc。我安装的是 3.1.9 版本的，安装好以后不用额外操作。安装后一定要重启VSCode，输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p>显示结果如下，说明安装正确：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc.exe <span class="number">3.1</span>.<span class="number">9</span></span><br></pre></td></tr></table></figure><p>然后重新生成网页后，公式渲染正常。OK！</p>              </div>            </details><p>&emsp;&emsp;偶尔还是有渲染失败，不要灰心，重启VSCode，重新生成一遍。OK！pandoc永远的神！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;默认的公式渲染器 hexo-math 和 hexo-renderer-marked 不好用，hexo-renderer-pandoc 渲染器好用。</p><h2 id="移动端公式渲染错误"><a href="#移动端公式渲染错误" class="headerlink" title="移动端公式渲染错误"></a>移动端公式渲染错误</h2><p>&emsp;&emsp;参数 <code>equation</code> 会对公式自动编号，电脑端显示正常，手机端显示异常，并可能导致手机端的网页严重发热。原因是因为编号会自动在公式所在行的最右侧，而手机端长公式无法显示完全，导致原本网页渲染的宽度和公式编号的渲染宽度相互冲突。所以解决办法是不使用公式自动编号。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">错误显示源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">错误显示演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">正常显示源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">正常显示演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line"><span class="code">    \mathrm&#123;Cov&#125;(a \cdot X,b \cdot Y) = a \cdot b \cdot \mathrm&#123;Cov&#125;(X,Y),\quad(a,b\text&#123;是常数&#125;)</span></span><br><span class="line"><span class="code">\end&#123;equation&#125;</span></span><br><span class="line"><span class="code">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><img src="https://picture.adunas.top/EquationPhoneErrorA.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="code">    \mathrm&#123;Cov&#125;(a \cdot X,b \cdot Y) = a \cdot b \cdot \mathrm&#123;Cov&#125;(X,Y),\quad(a,b\text&#123;是常数&#125;)</span></span><br><span class="line"><span class="code">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><img src="https://picture.adunas.top/EquationPhoneCorrectA.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="文章渲染错误"><a href="#文章渲染错误" class="headerlink" title="文章渲染错误"></a>文章渲染错误</h1><p>&emsp;&emsp;生成的网页传到云端服务器，或启用本地服务，特定网页渲染可能出现异常。原网页为：<a href="./20231205b.html">Markdown语法（二）：Butterfly外挂标签</a>，异常内容为butterfly的tab分栏标签：</p><p><img src="https://picture.adunas.top/ButterflyErrorTabA.png" alt="butterfly的tab分栏标签异常"></p><h2 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h2><p>&emsp;&emsp;有时能生成正常的网页，此时你要单独备份正常的网页。将正常的网页替换掉错误的网页。云端服务器可以，本地服务器需要额外添加参数，只使用静态文件启动本地服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -s</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上述方法已经舍弃，因为操作麻烦，修改也很不人性化。改变这种现状的方法是如下。</p><h3 id="修改-bug"><a href="#修改-bug" class="headerlink" title="修改 bug"></a>修改 bug</h3><p>&emsp;&emsp;启动本地服务后，进入浏览器网址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，键入 F12，依次修补 bug。</p><h3 id="markdown-插入-Html-元素"><a href="#markdown-插入-Html-元素" class="headerlink" title="markdown 插入 Html 元素"></a>markdown 插入 Html 元素</h3><p>&emsp;&emsp;Hexo 容易重复渲染造成错误。解决办法：引入 <code>raw</code> 标签：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">Html 元素</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>在该标签内，所有元素会保留不再渲染，并保留 Html 元素。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> bug </tag>
            
            <tag> pandoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>协方差</title>
      <link href="/posts/20231204a.html"/>
      <url>/posts/20231204a.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学导航"><a href="#数学导航" class="headerlink" title="数学导航"></a><a href="./20240210a.html#协方差">数学导航</a></h1><h1 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h1><p>&emsp;&emsp;释义教程看这个：<a href="https://www.bilibili.com/video/BV1gX4y117aM/?share_source=copy_web&amp;vd_source=6b55cb6788b1952e04c06b095d772810">【协方差和相关系数｜说人话的统计学】</a>。协方差和方差所表达的物理特性是不同的。协方差的大小并不能表示变量的离散程度，而表示的是两个变量的相关程度，协方差为正是正相关，协方差为负是负相关，协方差为零是无关。协方差为正表示整体上，变量2随着变量1的增大而增大，减小而减小，呈正相关；协方差为负表示整体上，变量2随着变量1的增大而减小，减小而增大，呈负相关；协方差为零表示，变量2随着变量1变化是没有规律的，有的增，有的减小，有的不变，综合下来协方差为零，即无关。表达式如下：</p><script type="math/tex; mode=display">\begin{aligned}    Cov \left( X,Y \right)    &= \frac        {\sum_{i=1}^n \left[\left( x_i - \overline{x} \right) \cdot \left( y_i - \overline{y} \right)\right]}        {n} \\    &= E \left[ \left( X - E \left[ X \right] \right) \cdot \left( Y - E \left[ Y \right] \right) \right] \\    &= E \left[ X \cdot Y \right]         - 2 \cdot E \left[ Y \right] \cdot E \left[ X \right]         + E \left[ X \right] \cdot E \left[ Y \right] \\    &= E \left[ X \cdot Y \right] - E \left[ X \right] \cdot E \left[ Y \right]\end{aligned}</script><p>&emsp;&emsp;但是这并不准确。考虑一种情况，有两组，每组都有两个变量，组内的两个变量都是强相关，但是由于其中一组波动很小，所以协方差比另外一组小得多，这样就不是很科学。如果我们在协方差公式中引入标准差，将其标准化，就可以得到新的东西，叫<code>相关系数</code>：</p><script type="math/tex; mode=display">\begin{aligned}    \rho_{XY}    &= \frac{\sum_{i=1}^n \left[            \frac{\left( x_i - \overline{x} \right)}            {\overline{x}} \cdot            \frac{\left(y_i - \overline{y} \right)}            {\overline{y}} \right]        }        {n} \\    &= \frac{Cov \left( X,Y \right)}        {\overline{x} \cdot \overline{y}} \\\end{aligned}</script><p>标准化以后，相关系数的取值范围为 $ [-1,1] $ 。当 $ \rho = -1 $ 时，两个变量完全负相关；当 $ \rho = 0 $ 时，两个变量完全不相关；当 $ \rho = 1 $ 时，两个变量完全正相关，此时两个变量可以看作同一个变量，协方差完全变为方差。</p><h1 id="协方差矩阵"><a href="#协方差矩阵" class="headerlink" title="协方差矩阵"></a>协方差矩阵</h1><p>&emsp;&emsp;协方差矩阵的每个元素是各个向量元素之间的协方差。设 $ X = ( X<em>{1}, X</em>{2}, \ldots, X_{n})^{T} $ 为 $ n $ 维随机变量，称矩阵</p><script type="math/tex; mode=display">C =(c_{ij})_{n \times n}    =\begin{pmatrix}        c_{11} & c_{12} & \ldots & c_{1n} \\        c_{21} & c_{22} & \ldots & c_{2n} \\        \cdot & \cdot & & \cdot \\        \cdot & \cdot & & \cdot \\        \cdot & \cdot & & \cdot \\        \cdot & \cdot & & \cdot \\        c_{n1} & c_{n2} & \ldots & c_{nn}    \end{pmatrix}</script><p>为 $ n $ 维随机变量 $ X $ 的协方差矩阵（covariance matrix），也记为 $ D(x) $ ，其中</p><script type="math/tex; mode=display">    c_{ij} = Cov(X_i,X_j),i,j=1,2,\ldots,n</script><p>为 $ X $ 的分量 $ X<em>{i} $ 和 $ X</em>{j} $ 的协方差（设它们都存在）。</p><p>&emsp;&emsp;显然协方差矩阵是一个对角阵，因为：</p><script type="math/tex; mode=display">    c_{ij} = c_{ji}</script><p>同时，在对角线上，自己的协方差就是方差：</p><script type="math/tex; mode=display">    c_{ii} = Var(X_i),i=1,2,\ldots,n</script><p>所以协方差矩阵还是自相关矩阵，即以对角线为分界线，矩阵是对称的。我们在表示协方差矩阵的时候，还可以这样写：</p><script type="math/tex; mode=display">    C =(c_{ij})_{n \times n} = Cov ( X,X ) = Cov ( X )</script><p>这里的 $ X $ 一定要和<a href="#协方差">协方差</a>里的 $ X $ 区分出来。这里的 $ X $ 是多个元素的矩阵，而<a href="#协方差">协方差</a>里的 $ X $ 是单个元素的矩阵。当 $ X $ 是多个元素组成的矩阵，求 $ Cov $ 不再是求协方差，而是求协方差矩阵。</p><h1 id="matlab"><a href="#matlab" class="headerlink" title="matlab"></a>matlab</h1><p>&emsp;&emsp;在matlab中，创建实时脚本，分四节，求协方差矩阵并绘制散点图。</p><p>正相关：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">B = [<span class="number">3</span> <span class="number">5</span> <span class="number">9</span> <span class="number">15</span>];</span><br><span class="line">cov(A,B)</span><br><span class="line"><span class="built_in">scatter</span>(A,B,<span class="number">10</span>,<span class="string">&quot;filled&quot;</span>)<span class="comment">% 散点图</span></span><br></pre></td></tr></table></figure><p>负相关：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">B = [<span class="number">-3</span> <span class="number">-5</span> <span class="number">-9</span> <span class="number">-15</span>];</span><br><span class="line">cov(A,B)</span><br><span class="line"><span class="built_in">scatter</span>(A,B,<span class="number">10</span>,<span class="string">&quot;filled&quot;</span>)<span class="comment">% 散点图</span></span><br></pre></td></tr></table></figure><p>无关：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">B = [<span class="number">3</span> <span class="number">-15</span> <span class="number">9</span> <span class="number">-5</span>];</span><br><span class="line">cov(A,B)</span><br><span class="line"><span class="built_in">scatter</span>(A,B,<span class="number">10</span>,<span class="string">&quot;filled&quot;</span>)<span class="comment">% 散点图</span></span><br></pre></td></tr></table></figure><p>注意：这并不是无关：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>];</span><br><span class="line">B = [<span class="number">3</span> <span class="number">-5</span> <span class="number">9</span> <span class="number">-15</span>];</span><br><span class="line">cov(A,B)</span><br><span class="line"><span class="built_in">scatter</span>(A,B,<span class="number">10</span>,<span class="string">&quot;filled&quot;</span>)<span class="comment">% 散点图</span></span><br></pre></td></tr></table></figure><p>做一个<a href="./Covariance.mlx">实时脚本</a>，观察四组方差和散点图。</p><h1 id="协方差的性质"><a href="#协方差的性质" class="headerlink" title="协方差的性质"></a>协方差的性质</h1><ol><li>变量自己的协方差为方差：</li></ol><script type="math/tex; mode=display">    Cov(X,X) = Var(X)</script><ol><li>变量谁在前，谁在后，无所谓：</li></ol><script type="math/tex; mode=display">    Cov(X,Y) = \mathrm{Cov}(Y,X)</script><ol><li>变量的系数可以直接提到外面来，和前面求相关系数的道理一样：</li></ol><script type="math/tex; mode=display">    \mathrm{Cov}(a \cdot X,b \cdot Y) = a \cdot b \cdot \mathrm{Cov}(X,Y),\quad(a,b\text{是常数})</script><ol><li>变量和的协方差等于协方差的和：</li></ol><script type="math/tex; mode=display">    \mathrm{Cov}(X_{1}+X_{2},\quad Y) = \mathrm{Cov}(X_{1},\quad Y) + \mathrm{Cov}(X_{2},\quad Y)</script><ol><li>变量增加一个常系数，对协方差没有影响：</li></ol><script type="math/tex; mode=display">    Cov(X+a,Y+b)=Cov(X,Y)</script><ol><li>系数矩阵 $ A $ 、$ B $ 能直接提到 $ Cov $ 外面来：</li></ol><script type="math/tex; mode=display">\begin{aligned}    Cov (A \cdot X,B \cdot Y ) = A \cdot Cov (X,Y) \cdot B^{T}\end{aligned}</script>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 协方差 </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adunas的游戏账号昵称和ID</title>
      <link href="/posts/20231201b.html"/>
      <url>/posts/20231201b.html</url>
      
        <content type="html"><![CDATA[<h1 id="文章导航总览"><a href="#文章导航总览" class="headerlink" title="文章导航总览"></a><a href="./20240221a.html#Adunas的游戏账号昵称和ID">文章导航总览</a></h1><h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><p>&emsp;&emsp;嘿嘿，快来找我玩儿吧！</p><h2 id="Steam"><a href="#Steam" class="headerlink" title="Steam"></a>Steam</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">虚虚虚</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">453276613</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="原神"><a href="#原神" class="headerlink" title="原神"></a>原神</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小拼图</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">249975066</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="阴阳师"><a href="#阴阳师" class="headerlink" title="阴阳师"></a>阴阳师</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li><li class="tab"><button type="button" data-href="#分栏-3">区域</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">拉条算懂了</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16737549</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">暮之霞</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="王者荣耀"><a href="#王者荣耀" class="headerlink" title="王者荣耀"></a>王者荣耀</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">区域</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">五带八友</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">苹果QQ区</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="星穹铁道"><a href="#星穹铁道" class="headerlink" title="星穹铁道"></a>星穹铁道</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">华泽</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">119795499</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="蛋仔派对"><a href="#蛋仔派对" class="headerlink" title="蛋仔派对"></a>蛋仔派对</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小pinto</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0036274892</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="荒野乱斗"><a href="#荒野乱斗" class="headerlink" title="荒野乱斗"></a>荒野乱斗</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">昵称</button></li><li class="tab"><button type="button" data-href="#分栏-2">UID</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">阿斯塔</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2Q2JCQ0</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="·····"><a href="#·····" class="headerlink" title="·····"></a>·····</h2>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 游戏ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法（一）：基础语法</title>
      <link href="/posts/20231201a.html"/>
      <url>/posts/20231201a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Markdown语法自带格式参考：<a href="https://www.fomal.cc/posts/2013454d.html">Fomalhaut</a>、<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><blockquote><h1 id="Markdown语法的导航"><a href="#Markdown语法的导航" class="headerlink" title="Markdown语法的导航"></a>Markdown语法的导航</h1><ol><li><a href="./20231201a.html">Markdown语法（一）：基础语法</a>⇦当前位置🪂</li><li><a href="./20231206b.html">Markdown语法（二）：Html外挂标签</a></li><li><a href="./20231205b.html">Markdown语法（三）：Butterfly外挂标签</a></li></ol></blockquote><h1 id="博客搭建导航"><a href="#博客搭建导航" class="headerlink" title="博客搭建导航"></a><a href="./20240221c.html#Markdown基础语法">博客搭建导航</a></h1><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="列表-跟空格都可以"><a href="#列表-跟空格都可以" class="headerlink" title="列表(*,+,-跟空格都可以)"></a>列表(*,+,-跟空格都可以)</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><h1 id="Markdown语法的导航-1"><a href="#Markdown语法的导航-1" class="headerlink" title="Markdown语法的导航"></a>Markdown语法的导航</h1><ol><li><a href="./20231201a.html">Markdown语法（一）：基础语法</a>⇦当前位置🪂</li><li><a href="./20231206b.html">Markdown语法（二）：Html外挂标签</a></li><li><a href="./20231205b.html">Markdown语法（三）：Butterfly外挂标签</a></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法（三）：Butterfly外挂标签</title>
      <link href="/posts/20231205b.html"/>
      <url>/posts/20231205b.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Butterfly外挂标签参考：<a href="https://www.fomal.cc/posts/2013454d.html">Fomalhaut</a>、安知鱼的<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h1 id="博客搭建导航"><a href="#博客搭建导航" class="headerlink" title="博客搭建导航"></a><a href="./20240221c.html#Butterfly外挂标签">博客搭建导航</a></h1><blockquote><h1 id="Markdown语法的导航"><a href="#Markdown语法的导航" class="headerlink" title="Markdown语法的导航"></a>Markdown语法的导航</h1><ol><li><a href="./20231201a.html">Markdown语法（一）：基础语法</a></li><li><a href="./20231206b.html">Markdown语法（二）：Html外挂标签</a></li><li><a href="./20231205b.html">Markdown语法（三）：Butterfly外挂标签</a>⇦当前位置🪂</li></ol></blockquote><h1 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="引用note"><a href="#引用note" class="headerlink" title="引用note"></a>引用note</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line"></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line"></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>   1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><img src="https://picture.adunas.top/Article/HexoButterflyLabelCheckboxA.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><img src="https://picture.adunas.top/Article/HexoButterflyLabelRadioA.png" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line"></span><br><span class="line">正文内容</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line"></span><br><span class="line">正文内容</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><p>2.仓库信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object><p>3.拓展参数，支持shields的API的全部参数内容</p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>2.指定宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><br>3.指定宽度并添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>4.设置占位背景色：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><br>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>2.gallery 相册<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table></div><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></p><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h1><p>&emsp;&emsp;渲染时容易出现错误，所以一定要规范格式，要求是分栏标签 <code>&#123;% tabs 分栏 %&#125;` 和 `&#123;% endtabs %&#125;</code> 上下各空两行。Html标签，形如 <code>&lt;!-- tab [Tab caption] [@icon] --&gt;</code> 等上下各空一行。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line"></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line"></span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line"></span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="特效标签wow"><a href="#特效标签wow" class="headerlink" title="特效标签wow"></a>特效标签wow</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>3.slideInRight动画效果，持续5s，延时5s<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h1><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="气泡注释-bubble"><a href="#气泡注释-bubble" class="headerlink" title="气泡注释 bubble"></a>气泡注释 bubble</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="引用文献-reference"><a href="#引用文献-reference" class="headerlink" title="引用文献 reference"></a>引用文献 reference</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="PDF展示"><a href="#PDF展示" class="headerlink" title="PDF展示"></a>PDF展示</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="Hexo-tag-map-插件"><a href="#Hexo-tag-map-插件" class="headerlink" title="Hexo-tag-map 插件"></a>Hexo-tag-map 插件</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table></div><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>&lt;/div&gt;<script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="隐藏块"><a href="#隐藏块" class="headerlink" title="隐藏块"></a>隐藏块</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line"></span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line"></span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法（二）：Html外挂标签</title>
      <link href="/posts/20231206b.html"/>
      <url>/posts/20231206b.html</url>
      
        <content type="html"><![CDATA[<div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h1 id="博客搭建导航"><a href="#博客搭建导航" class="headerlink" title="博客搭建导航"></a><a href="./20240221c.html#Markdown内置Html语法">博客搭建导航</a></h1><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>&emsp;&emsp;Markdown 语法是完全兼容 <code>Html</code> 和 <code>CSS</code> 的。目前我测试的是不兼容 <code>js</code> 的，因为加入 <code>js</code> 内容好像总是失败了。同样的 js 代码放在 html 文件里运行正常，所以可能是 js 想调用 Markdown 文件中的元素，函数指令和 html 不同，总之感觉 js 指令无法指挥 markdown的元素。</p><p>&emsp;&emsp;我们知道，在前端三件套里，我们知道，”Html”、”CSS”和”js”可以全部放在一起，放在 “.html” 文件里，也可以分开分别放在三类文件里。但是目前测试无法使用 “js”，同时为了直观和方便，我们把 “Html”、”CSS”语法直接放在 Markdown 文件里。</p><p>&emsp;&emsp;引入 Html 相关标签是因为有些标签很好用，而 markdown 本身没有这个功能；或者是为了在博客文章里添加一些功能插件。所以在 markdown 语法里只会单独介绍实用的 Html 标签语法。</p><h1 id="交叉引用"><a href="#交叉引用" class="headerlink" title="交叉引用"></a>交叉引用</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">被引用位置：</span><br><span class="line">&lt;equal id= &quot;equ1&quot;&gt;&lt;/equal&gt;</span><br><span class="line">引用写法：</span><br><span class="line">见[公式1](#equ1)。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>被引用位置：</p><p><equal id= "equ1"></equal><br>引用写法：<br>见<a href="#equ1">公式1</a>。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="内联框架"><a href="#内联框架" class="headerlink" title="内联框架"></a>内联框架</h1><p>&emsp;&emsp;内联框架语法的关键字为 <code>iframe</code>。然而直接使用它的高度显示会有异常，因为高度100%是在父标签的高度下的。而宽度100%不存在这个问题，解决办法是引入容器关键字 <code>container</code>，方法指定容器的位置和大小，那么父标签就建立起来了。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数解释</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span>  </span><br><span class="line">.container1 &#123;  </span><br><span class="line"><span class="code">    width: 100%; /* 设置容器的宽度为90% */  </span></span><br><span class="line"><span class="code">    margin: 0 auto; /* 水平居中容器 */  </span></span><br><span class="line"><span class="code">    position: relative; /* 设置容器的定位方式为相对定位 */  </span></span><br><span class="line"><span class="code">    padding-top: 50%; /* 设置容器的上内边距为容器宽度的一半 */  </span></span><br><span class="line"><span class="code">    height: 0; /* 设置容器的高度为0，使其自适应内容的高度 */  </span></span><br><span class="line"><span class="code">&#125;  </span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">.container-iframe &#123;  </span></span><br><span class="line"><span class="code">    position: absolute; /* 设置iframe的定位方式为绝对定位 */  </span></span><br><span class="line"><span class="code">    top: 0; /* 将iframe定位到容器的顶部 */  </span></span><br><span class="line"><span class="code">    left: 0; /* 将iframe定位到容器的左侧 */  </span></span><br><span class="line"><span class="code">    width: 100%; /* 设置iframe的宽度为100% */  </span></span><br><span class="line"><span class="code">    height: 100%; /* 设置iframe的高度为100% */  </span></span><br><span class="line"><span class="code">    border: none; /* 可选：移除iframe的边框 */  </span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span>&gt;</span></span></span>  </span><br><span class="line"><span class="code">    &lt;iframe class=&quot;container-iframe&quot; src=&quot;https://viewer.diagrams.net/?tags=%7B%7D&amp;highlight=0000ff&amp;edit=_blank&amp;layers=1&amp;nav=1&amp;title=SystemBlockDiagramA#R7VpLc9owEP41PiZj4wf2MQGSTGeaZIaZNu0l49gKqAiLygJMfn0lLL9kORCICQzlgrReVvJ%2B%2B9IKzexNk1viz8bfcQiQ1tHDRDP7WqdjOI7BvjhllVI8w0oJIwJDwVQQhvANCKIuqHMYgrjCSDFGFM6qxABHEQhoheYTgpdVtleMqqvO%2FBGoEYaBj%2BrUnzCk45TqdroF%2FQ7A0Thb2XC89MnUz5iFiHjsh3iZktYvZw40s0cwpulomvQA4srL9JJq4Kbhab4xAiK61Q%2BeF3Yc2L8n0XSCkvHg9Uf4dCGkLHw0Fy8sNktXmQZAFF5xRbJZgPw4hoFmXo%2FpFDGCwYYEz6MQ8EV0NnvFERUoGg6b13cplgRhRfFiz7cATwElK8awLNRtC2MYlzSd0QhAPoWLKly%2BQH2Ui8tXeMSQ7aSjCws1hdZ0YZ%2BW6V26VSExnpMAiN%2BVFSyJsvSNoqhPRoDWRLFB6dUL0hrBD6DZUaDJ3M26eda611q3n85qCFcRXI4hBcOZH%2FCnS%2BbVVbi3BngBCAXJuxA3KS7DpGQCrsIELL0Z7YpqP6pHs0GPCdcjZU7TqEr2xrSqr5gSPAE9jDBhlAhHgCsRIiSRfARHEfcxpkfA6Ndcf5AFoivxYArDkC%2BjBGhHJ9weI9OUMNJz4y6h5ChQMttCqXvusctyJUxkh9g2ctnOBkEtxy13M5Ise874EJMBQiz5c0eYAQLZ0txb%2BiClPhakTYHsxQ8mo7UBPMwpghFoL8DV9KsIcNYhA5zXEOCuTytR2PoXJ4qsSj3fGCTXT7bhXdq7RaEaunVRLcchQ1UOc0%2BYax0H8cT%2BQirgOn%2FnvHxfo3YRr2G7YgyGM0vW2GXP2WjEv%2F%2FXD3kIdL1Lr%2FyxvraYMFS1816eDBJIn8QTPv7F6cyg01k%2FKbH1V9kkYu%2FyVDDy6a9MBp8UP1vPVh8FLPXFzZkhdbTNKftYopAnW9eOlVBe%2BeRnuO0qIWYX%2FqrENuMMcfOGbal0s6uHdzZIJX5ueFOda%2Faz8QZ71T%2FLXk%2FMDmVYzV0rcseWBBmtVeTf9P593PHCyd1QX%2F25n6CHB0PZF%2BIJa%2FpMzy1z2VKFYzr1orOtVKXE5tMz1anVnI7cL9rZyzYdoFv2svf7TGdYJTqGBIjxxb5mNSB0d9wH5ZphH7CjqtSjquFwVjHLlRHZ%2FZ7Bk7tJbd4zqKsDVduDO8LbuQYuVz6AHLQ9rgapqYaLzq%2BGc%2FUjq%2BFaOIrt0G7YqW3wXp4sH9eUfN2jCsrdTfceW4dk%2BRb5wIXkFldhJ32B4sptmQNeoKj9V1UYHncr5Uh8zrXzzLhvk6QuKreLvf2OTYu%2F5qTsxR%2BczME%2F&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;  </span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>padding-bottom</code> 是容器下内边距的宽度，设置为 50%，意味着容器高度最大为宽度的 50%。所以只要知道内联框架的高宽比，就知道了这个值设置多少。</li><li>将容器的高度 <code>height</code> 设置为 <code>0</code>，以确保容器的高度仅由内部内容撑开。</li><li><code>container-iframe</code> 是容器内部内容。语法上可以直接用 <code>iframe</code> 做内容，但是是不行的，这样是无法撑开的，还是回到了父标签高度没有指定的错误。</li><li>通过 <code>class</code> 类将容器、容器内容与内联框架 <code>iframe</code> 进行指定说明。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>参考：《卡尔曼滤波》“状态空间表达式”节的<a href="./20231205a.html#状态空间表达式">系统框图</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note warning flat"><ul><li>当使用多个演示动画时，一定要记得更改容器名称，否则容器大小都会受最后一次设置的控制。</li></ul></div><h1 id="设备屏宽"><a href="#设备屏宽" class="headerlink" title="设备屏宽"></a>设备屏宽</h1><p>内联框架 <code>iframe</code> 的废案，但是有设备屏宽检测功能，这里就记录下来了。在渲染演示中可以很清晰地看到，在连续改变窗口的宽度时，容器的高度发生了两次跳变。</p><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line">  @media screen and (max-width: 600px) &#123;</span><br><span class="line"><span class="code">    iframe &#123;</span></span><br><span class="line"><span class="code">      width: 100%;</span></span><br><span class="line"><span class="code">      height: 231px;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">  @media screen and (min-width: 601px) and (max-width: 1200px) &#123;</span></span><br><span class="line"><span class="code">    iframe &#123;</span></span><br><span class="line"><span class="code">      width: 100%;</span></span><br><span class="line"><span class="code">      height: 476px;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">  @media screen and (min-width: 1201px) &#123;</span></span><br><span class="line"><span class="code">    iframe &#123;</span></span><br><span class="line"><span class="code">      width: 100%;</span></span><br><span class="line"><span class="code">      height: 644px;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&lt;/style&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="language-xml"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.geogebra.org/material/iframe/id/XxzCsAG7/width/924/height/637/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/false/ctl/false&quot;</span>&gt;</span></span></span><span class="language-xml"><span class="language-css">&lt;/<span class="selector-tag">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><style>  @media screen and (max-width: 600px) {    iframe {      width: 100%;      height: 231px;    }  }  @media screen and (min-width: 601px) and (max-width: 1200px) {    iframe {      width: 100%;      height: 476px;    }  }  @media screen and (min-width: 1201px) {    iframe {      width: 100%;      height: 644px;    }  }</style><iframe src="https://www.geogebra.org/material/iframe/id/XxzCsAG7/width/924/height/637/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/false/ctl/false"></iframe><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">id</span>=<span class="string">&quot;fig_matlab_varying_ell&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">id</span>=<span class="string">&quot;fig_cam_rotate&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;img src=&quot;https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_4.png&quot; /&gt;</span></span><br><span class="line"><span class="code">    &lt;figcaption&gt;**(a)** 子图a，内部图片容器&lt;/figcaption&gt;</span></span><br><span class="line"><span class="code">  &lt;/figure&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">id</span>=<span class="string">&quot;fig_matlab_pi_8&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_pi_8.png&quot;</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span></span><span class="strong">**(b)**</span> 子图b，外部图片容器<span class="language-xml"><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span></span><span class="strong">**Figure 1.**</span> 图1<span class="language-xml"><span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure id="fig_matlab_varying_ell">  <figure id="fig_cam_rotate">    <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_4.png" />    <figcaption>**(a)** 子图a，内部图片容器</figcaption>  </figure>  <figure id="fig_matlab_pi_8"></figure>  <img src="https://picture.adunas.top/Article/arXiv-2401.17117v1/fig_matlab_pi_8.png" />  <figcaption>**(b)** 子图b，外部图片容器</figcaption><figcaption>**Figure 1.** 图1</figcaption></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h1><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Figure 4.</span><br><span class="line"></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>Figure 4.<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>Figure 4.</p><p><b>Figure 4.</b></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性空间</title>
      <link href="/posts/20240605a.html"/>
      <url>/posts/20240605a.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学导航"><a href="#数学导航" class="headerlink" title="数学导航"></a><a href="./20240210a.html#线性空间">数学导航</a></h1><h1 id="二元一次方程组"><a href="#二元一次方程组" class="headerlink" title="二元一次方程组"></a>二元一次方程组</h1><h2 id="初中"><a href="#初中" class="headerlink" title="初中"></a>初中</h2><p>&emsp;&emsp;本节的所有数学符号，作用域仅为 <code>初中</code> 和 <code>高中</code>。</p><p>&emsp;&emsp;初中所学。先从初中角度理解。</p><p>&emsp;&emsp;二元一次方程的一般形式，记为 <code>一般形式的二元一次方程</code>：</p><script type="math/tex; mode=display">a \cdot x + b \cdot y + c = 0 \\</script><p>其中，$x$、$y$ 为未知数，待求。$a$、$b$、$c$ 为系数，已知。显然一个方程是不能求解的，有无数个解。如果有两个 <code>不同方程</code> 的话就能求解，记为 <code>标准二元一次方程组</code>：</p><script type="math/tex; mode=display">\left\{  \begin{aligned}    & a_1 \cdot x + b_1 \cdot y + c_1 = 0 \\    & a_2 \cdot x + b_2 \cdot y + c_2 = 0  \end{aligned}\right.</script><p>如果系数化简后，相互冲突，则没有解；如果两个方程的系数成比例关系，则两个方程其实是一个方程，有无数个解；否则有一个特定的解。初中学过的手动解法有：消元法、带入法、加减法、换元法等。</p><h2 id="高中"><a href="#高中" class="headerlink" title="高中"></a>高中</h2><p>&emsp;&emsp;从平面几何去理解。每个方程代表一条直线。如果平行，则无解。如果相交，则有唯一解；如果重合，则有无数个解。</p><h2 id="大学"><a href="#大学" class="headerlink" title="大学"></a>大学</h2><h3 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h3><p>&emsp;&emsp;本节的所有数学符号，作用域仅为 <code>线性代数</code>。</p><p>&emsp;&emsp;二元一次方程组，记为 <code>一般二元一次方程组</code>：</p><script type="math/tex; mode=display">\left\{  \begin{aligned}    & a_{11} \cdot x_1 + a_{12} \cdot x_2 = y_1 \\    & a_{21} \cdot x_1 + a_{22} \cdot x_2 = y_2  \end{aligned}\right.</script><p>行列式记为 <code>二元一次方程组行列式</code>：</p><script type="math/tex; mode=display">D =\left |   \begin{matrix}    a_{11} & a_{12} \\    a_{21} & a_{22}  \end{matrix} \right |</script><p>（行列式是一个数，标量）<code>二维行列式计算公式</code> 为：</p><script type="math/tex; mode=display">D = a_{11} \cdot a_{22} - a_{12} \cdot a_{21}</script><p>从直线理解可知，若 $D \neq 0$，则有唯一的解。</p><p>&emsp;&emsp;利用消元法，记为 <code>二元一次方程组消元法</code>：</p><script type="math/tex; mode=display">a_{11} \cdot  \left(    - a_{22} \cdot x_2 + y_2  \right)   = a_{21} \cdot  \left(    - a_{12} \cdot x_2 + y_1  \right) \\\left(  a_{11} \cdot a_{22} - a_{12} \cdot a_{21}\right) \cdot x_2 = a_{11} \cdot y_2 - a_{21} \cdot y_1</script><p>仔细观察 “对称结构”，所以它的解可得，即 <code>克拉默（Cramer）法则</code>：</p><script type="math/tex; mode=display">x_i = D_i/D</script><p>其中 $D_i$ 为 $D$ 的第 $i$ 列变为 $y_1···y_i$。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 矩阵 </tag>
            
            <tag> 线性空间 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
